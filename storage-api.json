{
  "openapi": "3.0.3",
  "info": {
    "description": "Data Services Cloud Console API",
    "title": "Data Services Cloud Console API",
    "version": "1.2.0"
  },
  "servers": [
    {
      "url": "https://eu1.data.cloud.hpe.com"
    },
    {
      "url": "https://us1.data.cloud.hpe.com"
    },
    {
      "url": "https://jp1.data.cloud.hpe.com"
    }
  ],
  "tags": [
    {
      "description": "The Alarms API allows the management of alarms",
      "name": "alarms"
    },
    {
      "description": "Audit APIs",
      "name": "audit"
    },
    {
      "description": "The Audit Events API allows the the management of audit-events",
      "name": "audit-event"
    },
    {
      "description": "Authorization API",
      "name": "authz"
    },
    {
      "description": "The controllers API allows the management of controller fleet.",
      "name": "controllers"
    },
    {
      "description": "The disks API allows the management of disks",
      "name": "disks"
    },
    {
      "description": "The folders API allows the management of folders",
      "name": "folders"
    },
    {
      "description": "The Health status API allows the monitoring of devices",
      "name": "health-status"
    },
    {
      "description": "The Host service API allows the management of Host Group",
      "name": "host-initiator-groups"
    },
    {
      "description": "The Host service API allows the management of Host, initiators",
      "name": "host-initiators"
    },
    {
      "description": "The ports API allows the management of host-paths",
      "name": "host-paths"
    },
    {
      "description": "The ports API allows the management of host-sets",
      "name": "host-sets"
    },
    {
      "description": "The ports API allows the management of hosts",
      "name": "hosts"
    },
    {
      "description": "Issues API",
      "name": "issues"
    },
    {
      "description": "The Performance templates API allows the the management of performance policies",
      "name": "performance-templates"
    },
    {
      "description": "The ports API allows the management of ports",
      "name": "ports"
    },
    {
      "description": "The protection-templates API allows the management of protection-templates",
      "name": "protection-templates"
    },
    {
      "description": "The Restore Points API allows the management of restore-points",
      "name": "restore-points"
    },
    {
      "description": "The shelves API allows the management of shelves",
      "name": "shelves"
    },
    {
      "description": "The pools API allows the management of storage pools",
      "name": "storage-pools"
    },
    {
      "description": "The storage-systems API allows the management of storage device.",
      "name": "storage-systems"
    },
    {
      "description": "The System Settings API allows the monitoring of System settings for the device",
      "name": "system-settings"
    },
    {
      "description": "Tasks API",
      "name": "tasks"
    },
    {
      "description": "The Volume-sets API allows the management of volume sets",
      "name": "volume-sets"
    },
    {
      "description": "The volumes API allows the management of volumes",
      "name": "volumes"
    }
  ],
  "paths": {
    "/api/v1/access-controls": {
      "get": {
        "description": "Retun a list of user permissions.  The returned list of permissions will be based upon the supplied filter.  If no filter was supplied, all user permissions will be returned. It is also possible to request all resource type with certain permission type (ex. ALL.read)",
        "operationId": "get_access_controls",
        "parameters": [
          {
            "description": "List of permissions, each of which, has the form \"resource type.permission\" (ex. volume.read,volume.write). The word \"ANY\" can be used as a wild card for the resource type (ex. ANY.read). Omitting the permission parameters is equivalent to asking for all user permissions.",
            "in": "query",
            "name": "permission",
            "required": false,
            "schema": {
              "description": "List of resource type permissions",
              "example": [
                "volume.create",
                "port.read",
                "audit.read"
              ],
              "items": {
                "type": "string"
              },
              "title": "Resource type permissions",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlsResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "The operation cannot be authorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "The operation is forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "User not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Service Unavailable"
          }
        },
        "summary": "Get User Accessible Resources",
        "tags": [
          "authz"
        ]
      }
    },
    "/api/v1/audit-events": {
      "get": {
        "description": "returns the audit events",
        "operationId": "AuditEventsGet",
        "parameters": [
          {
            "description": "Filter criteria - e.g. state eq Failure and occurredAt gt 2020-09-08T16:51:33Z",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of results to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The number of results to skip",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A comma separated list of properties to sort by, followed by a direction \nindicator (\"asc\" or \"desc\"). If no direction indicator is specified the \ndefault order is ascending. - e.g. state,version desc. Currently only support\nsorting by 1 property per request",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of properties to include in the response. Currently only support\nreturning of all fields.",
            "in": "query",
            "name": "select",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditResults"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditBadRequest"
                }
              }
            },
            "description": "An invalid request was received."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditUserForbidden"
                }
              }
            },
            "description": "The requesting user was not permitted to access this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditInternalServerError"
                }
              }
            },
            "description": "An internal error occurred."
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditServiceUnavailable"
                }
              }
            },
            "description": "Audit or Dependent Service Unavailable"
          }
        },
        "summary": "GET audit-events",
        "tags": [
          "audit"
        ]
      }
    },
    "/api/v1/host-initiator-groups": {
      "get": {
        "description": "Get the list of host groups",
        "operationId": "HostGroupList",
        "parameters": [
          {
            "$ref": "#/components/parameters/hsFilterParam"
          },
          {
            "$ref": "#/components/parameters/hsSortParam"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostGroupsList"
                }
              }
            },
            "description": "Success",
            "headers": {
              "ETag": {
                "description": "List of Host groups",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get the list of host groups",
        "tags": [
          "host-initiator-groups"
        ]
      },
      "post": {
        "description": "Create a host group",
        "operationId": "HostGroupCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHostGroupInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostGroupObject"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create a host group",
        "tags": [
          "host-initiator-groups"
        ]
      }
    },
    "/api/v1/host-initiator-groups/{hostGroupId}": {
      "delete": {
        "description": "Delete a host group by {hostGroupId}",
        "operationId": "HostGroupDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/hostGroupUid"
          },
          {
            "$ref": "#/components/parameters/ForceDelete"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete a host group by {hostGroupId}",
        "tags": [
          "host-initiator-groups"
        ]
      },
      "get": {
        "description": "Get the host group details by {hostGroupId}",
        "operationId": "HostGroupGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/hostGroupUid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostGroupDetails"
                }
              }
            },
            "description": "Success",
            "headers": {
              "ETag": {
                "description": "Host group details",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get the host group details by {hostGroupId}",
        "tags": [
          "host-initiator-groups"
        ]
      },
      "put": {
        "description": "Update host group details by {hostGroupId}",
        "operationId": "HostGroupUpdateById",
        "parameters": [
          {
            "$ref": "#/components/parameters/hostGroupUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHostGroupInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Update host group by {hostGroupId}",
        "tags": [
          "host-initiator-groups"
        ]
      }
    },
    "/api/v1/host-initiators": {
      "get": {
        "description": "Get the list of hosts",
        "operationId": "HostList",
        "parameters": [
          {
            "$ref": "#/components/parameters/hsFilterParam"
          },
          {
            "$ref": "#/components/parameters/hsSortParam"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostsList"
                }
              }
            },
            "description": "Success",
            "headers": {
              "ETag": {
                "description": "List of Hosts",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get the list of hosts",
        "tags": [
          "host-initiators"
        ]
      },
      "post": {
        "description": "Create a host",
        "operationId": "HostCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHostInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostObject"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create a host",
        "tags": [
          "host-initiators"
        ]
      }
    },
    "/api/v1/host-initiators/{hostId}": {
      "delete": {
        "description": "Delete a host by {hostId}",
        "operationId": "HostDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/hostUid"
          },
          {
            "$ref": "#/components/parameters/ForceDelete"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete a host by {hostId}",
        "tags": [
          "host-initiators"
        ]
      },
      "get": {
        "description": "Get the host details by {hostId}",
        "operationId": "HostGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/hostUid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostDetails"
                }
              }
            },
            "description": "Success",
            "headers": {
              "ETag": {
                "description": "Host details",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get the host details by {hostId}",
        "tags": [
          "host-initiators"
        ]
      },
      "put": {
        "description": "Update host details by {hostId}",
        "operationId": "HostUpdateById",
        "parameters": [
          {
            "$ref": "#/components/parameters/hostUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHostInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Update Host by {hostId}",
        "tags": [
          "host-initiators"
        ]
      }
    },
    "/api/v1/host-initiators/{hostId}/storage-performance-history": {
      "get": {
        "description": "Get the volume performance history data associated with a host identified by {uid}",
        "operationId": "HostVolumePerformanceHistoryGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/hostUid"
          },
          {
            "$ref": "#/components/parameters/selectStoragePerf"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/storagePerfTimeMin"
          },
          {
            "$ref": "#/components/parameters/topVolumesCount"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hostStoragePerformanceHistory"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get the volume performance history data associated with a host identified by {uid}",
        "tags": [
          "host-initiators"
        ]
      }
    },
    "/api/v1/host-initiators/{hostId}/volumes": {
      "get": {
        "description": "Get details of volumes associated with a host identified by {uid}",
        "operationId": "HostVolumesGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/hostUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hostStorageVolumes"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of volumes associated with a host identified by {uid}",
        "tags": [
          "host-initiators"
        ]
      }
    },
    "/api/v1/initiators": {
      "get": {
        "description": "Get the list of initiators",
        "operationId": "HostInitiatorList",
        "parameters": [
          {
            "$ref": "#/components/parameters/hsFilterParam"
          },
          {
            "$ref": "#/components/parameters/hsSortParam"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiatorList"
                }
              }
            },
            "description": "Success",
            "headers": {
              "ETag": {
                "description": "List of Host initiators",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get the list of initiators",
        "tags": [
          "host-initiators"
        ]
      },
      "post": {
        "description": "Create initiator",
        "operationId": "HostInitiatorCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiatorInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Initiator"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create initiator",
        "tags": [
          "host-initiators"
        ]
      }
    },
    "/api/v1/initiators/{initiatorId}": {
      "delete": {
        "description": "Delete initiator by {initiatorId}",
        "operationId": "HostInitiatorDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/initiatorUid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteInitiator"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete initiator by {initiatorId}",
        "tags": [
          "host-initiators"
        ]
      },
      "get": {
        "description": "Get the initiator details by {initiatorId}",
        "operationId": "HostInitiatorGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/initiatorUid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiatorDetails"
                }
              }
            },
            "description": "Success",
            "headers": {
              "ETag": {
                "description": "Host initiator details",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get the initiator details by {initiatorId}",
        "tags": [
          "host-initiators"
        ]
      }
    },
    "/api/v1/issues": {
      "get": {
        "description": "Returns the active (state=\"CREATED\") issues for the account, which are associated with the resource-types for which the user has access. The user should also have the permission to view issues.\nEg: if there are issues associated with 50 resources (of different resource-types) for a customer (obtained from the request header),\nand the user (obtained from the request headers), who has correct permissions to view the issues but has acceess to only 20 of those resources (ie access to their resource types),\nthis API will return only the issues associated with those 20 resources. The grouped issues are places next to each other. The client will have to process them for any desired grouping\n",
        "operationId": "ListIssues",
        "parameters": [
          {
            "description": "The number of items to skip before starting to collect the result set",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The numbers of items to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The filter query parameter is used to filter the set of resources returned in the response.\nThe returned set of resources must match the criteria in the filter query parameter\nA comparision compares a property name to a literal. The comparisons supported are the following:\n“eq” : Is a property equal to value. Valid for number, boolean and string properties.\n“gt” : Is a property greater than a value. Valid for number or string timestamp properties.\n“lt” : Is a property less than a value. Valid for number or string timestamp properties\n“in” : Is a value in a property (that is an array of strings)\nSyntax: \n“eq” : filter=<property> eq <value> {host:port}/api/v1/issues?filter=<property> eq <value>\n“gt” : filter=<property> gt <value> {host:port}/api/v1/issues?filter=<property> gt <value>\n“lt” : filter=<property> lt <value> {host:port}/api/v1/issues?filter=<property> lt <value>\n“in” : filter=<property> in <value> {host:port}/api/v1/issues?filter=<property> in <value>\n* Can use and to add more filter inputs {host:port}/api/v1/issues?filter=<property1> eq <value1> and <property2> lt <value2> \n* To filter multiple values on one property e.g. filter=severity in ('CRITICAL','WARNING') {host:port}/api/v1/issues?filter=severity%20in%20CRITICAL%2CWARNING\nExamples:\nGET /api/v1/issues?filter=issueType eq 'ISSUE'\nGET /api/v1/issues?filter=issueType eq 'ISSUE' and state eq 'CREATED'\nGET /api/v1/issues?filter=relatedObjectType in ('NIMBLE-VOLUME')\nFilters are supported on following attributes:\nissueType,\nseverity,\ncategory,\nstate,\nrelatedObject (relatedObject.resourceUri),\nrelatedObjectType (relatedObject.type),\nrelatedObjectOwner (relatedObjectOwner.resourceUri),\nrelatedObjectOwnerType (relatedObjectOwner.type),\nruleId,\ncreatedAt\n",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource property to sort, with an order appended\nOrder may only be either “asc” (ascending) or “desc” (descending)\n",
            "example": "/issues?sort=id desc",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The select query parameter is used to limit the properties returned with a resource or collection-level GET.\nMultiple properties can be listed to be returned. The server must only return the set of properties requested by the client.\nThe property “select” is the name of the select query parameter; its value is the list of properties to return separated by commas.\n",
            "in": "query",
            "name": "select",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuesList"
                }
              }
            },
            "description": "Issues list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad/Malformed request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unauthenticated request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unauthorized request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "The filter attribute's value does not exist"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method not supported"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unprocessable input request"
          }
        },
        "summary": "Returns a list of active issues associated with the account, scoped by the user's permissions",
        "tags": [
          "issues"
        ]
      }
    },
    "/api/v1/issues/{id}": {
      "get": {
        "description": "Returns the active issue (state=\"CREATED\") associated with the account (retrieved from the request headers) and with given Id",
        "operationId": "GetIssue",
        "parameters": [
          {
            "description": "The UUID of the issue",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The select query parameter is used to limit the properties returned with a resource or collection-level GET.\nMultiple properties can be listed to be returned. The server must only return the set of properties requested by the client.\nThe property “select” is the name of the select query parameter; its value is the list of properties to return separated by commas.\n",
            "in": "query",
            "name": "select",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueDetails"
                }
              }
            },
            "description": "Details of the issue with the given Id"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad/Malformed request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unauthenticated request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unauthorized request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Issue with the given Id does not exist"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method not supported"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Issue is not active"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unprocessable input request"
          }
        },
        "summary": "Returns the active issue with the given Id",
        "tags": [
          "issues"
        ]
      }
    },
    "/api/v1/resource-types": {
      "get": {
        "description": "Return resource types on which the user has a read permission.  The returned list will be based upon the supplied filter.  If no filter was provided, all resource types for which the user has a read permission on will be returned",
        "operationId": "get_resource_types",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTypesResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "The operation cannot be authorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "The operation is forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "User not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Service Unavailable"
          }
        },
        "summary": "Get resource types with read permissions",
        "tags": [
          "authz"
        ]
      }
    },
    "/api/v1/storage-systems": {
      "get": {
        "description": "Get all storage systems",
        "operationId": "SystemsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/systemFilterParam"
          },
          {
            "$ref": "#/components/parameters/orderby"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/storageSystemSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all storage systems",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/{id}": {
      "get": {
        "description": "Get storage system object identified by {id}",
        "operationId": "SystemGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/uuidStorageSystem"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/storageSystemDetail"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get storage system object identified by {id}",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/{systemId}/storage-pools": {
      "get": {
        "description": "Get all storage pools for a device {systemId}",
        "operationId": "StoragePoolsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/poolFilter"
          },
          {
            "$ref": "#/components/parameters/poolSort"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/storagePoolsFleetSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all storage pools for a device {systemId}",
        "tags": [
          "storage-pools"
        ]
      }
    },
    "/api/v1/storage-systems/{systemId}/storage-pools/{id}": {
      "get": {
        "description": "Get details of storage pools identified by {id}",
        "operationId": "StoragePoolsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/primeraPoolID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FleetPoolDetails"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of storage pools identified by {id}",
        "tags": [
          "storage-pools"
        ]
      }
    },
    "/api/v1/storage-systems/{systemId}/storage-pools/{id}/volumes": {
      "get": {
        "description": "Get all volumes for storage-pool identified by {id}",
        "operationId": "StoragePoolVolumesList",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/primeraPoolID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fleetVolumesList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Pool object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all volumes for storage-pool identified by {id}",
        "tags": [
          "storage-pools"
        ]
      }
    },
    "/api/v1/storage-systems/{systemId}/volume-sets": {
      "get": {
        "description": "Get all volume sets for a systemId",
        "operationId": "VolumesetListForSystemBySystemId",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/volumeSetFilterParam"
          },
          {
            "$ref": "#/components/parameters/volumeSetSortParam"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fleetVolumeSetList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Pool object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all volume-sets for a systemId",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/{systemId}/volume-sets/{id}": {
      "get": {
        "description": "Get volume-set identified by id",
        "operationId": "VolumesetSystemGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/volumeSetUid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fleetSystemVolumeset"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Pool object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get volume-set identified by id",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/{systemId}/volumes": {
      "get": {
        "description": "Get details of volumes identified with {systemId}",
        "operationId": "VolumeListForSystemBySystemId",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/volumeFilterParam"
          },
          {
            "$ref": "#/components/parameters/volumeSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fleetVolumesList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of volumes identified with {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1": {
      "get": {
        "description": "Get all Primera / Alletra 9K storage systems",
        "operationId": "DeviceType1SystemsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/systemFilterParam"
          },
          {
            "$ref": "#/components/parameters/orderby"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/primeraStorageSystemList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all Primera / Alletra 9K storage systems",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{id}": {
      "get": {
        "description": "Get Primera / Alletra 9K object identified by {id}",
        "operationId": "DeviceType1SystemGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/uuidStorageSystem"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/primeraStorageSystemDetail"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get Primera / Alletra 9K object identified by {id}",
        "tags": [
          "storage-systems"
        ]
      },
      "post": {
        "description": "Locate system of Primera / Alletra 9K",
        "operationId": "SystemLocate",
        "parameters": [
          {
            "$ref": "#/components/parameters/uuidStorageSystem"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sysLocateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Locate system of Primera / Alletra 9K",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/alert-contacts": {
      "get": {
        "description": "Get alert-contact details for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1AlertContactsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/alertContacts"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get alert-contact details for a storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Add Alert/Mail contact details",
        "operationId": "AlertContactsCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/alertContactInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Add Alert/Mail contact details",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/alert-contacts/{id}": {
      "delete": {
        "description": "Delete Alert/Email contact of storage system Primera / Alletra 9K identified by {id}",
        "operationId": "AlertContactsDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete Alert/Email contact of storage system Primera / Alletra 9K identified by {id}",
        "tags": [
          "system-settings"
        ]
      },
      "get": {
        "description": "Get alert-contact details for a storage system Primera / Alletra 9K identified by {id}",
        "operationId": "DeviceType1AlertContactsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/contactId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertContactsDetailsList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get alert-contact details for a storage system Primera / Alletra 9K identified by {id}",
        "tags": [
          "system-settings"
        ]
      },
      "put": {
        "description": "Edit Alert/Email contact details of storage system Primera / Alletra 9K identified by {id}",
        "operationId": "AlertContactsUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/alertContactInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit Alert/Email contact details of storage system Primera / Alletra 9K identified by {id}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/application-summary": {
      "get": {
        "description": "Get Application Summary for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1ApplicationSummaryGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationSummary"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get Application Summary for a storage system Primera / Alletra 9K",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets": {
      "get": {
        "description": "Get all applicationset details for Primera / Alletra 9K",
        "operationId": "DeviceType1VolumeSetsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/appSetFilterParam"
          },
          {
            "$ref": "#/components/parameters/appSetSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraApplicationSetsList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all applicationset details for Primera / Alletra 9K",
        "tags": [
          "volume-sets"
        ]
      },
      "post": {
        "description": "Create Application Set for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1VolumeSetsCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createAppSetInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create Application Set for a storage system Primera / Alletra 9K",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{appsetId}/export": {
      "post": {
        "description": "Export applicationset identified by {appsetId} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1VolumeSetExport",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/appsetUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/exportAppSetPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Export applicationset identified by {appsetId} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{appsetId}/replication-partners": {
      "get": {
        "description": "Get details of Primera / Alletra 9K replication partners identified by {systemId} and {appsetId}",
        "operationId": "DeviceType1GetReplicationPartnersByAppSetId",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/appsetUid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicationPartnersSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K replication partners identified by {systemId} and {appsetId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{appsetId}/replication-partners/{replicationPartnerId}/volumes": {
      "get": {
        "description": "Get volume details of replication partners identified by {appsetId} and {replicationPartnerId} for Primera / Alletra 9K",
        "operationId": "DeviceType1GetReplicationPartnerVolumesByAppSetId",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/appsetUid"
          },
          {
            "$ref": "#/components/parameters/replicationPartnerId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicationPartnerVolumesSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get volume details of replication partners identified by {appsetId} and {replicationPartnerId} for Primera / Alletra 9K",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{appsetId}/snapsets/{snapsetId}": {
      "delete": {
        "description": "Remove Primera / Alletra 9K snapset in system identified by {snapsetId}",
        "operationId": "DeviceType1VolumeSetSnapshotGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/appsetUid"
          },
          {
            "$ref": "#/components/parameters/PrimeraSnapsetID"
          },
          {
            "$ref": "#/components/parameters/forceDeleteSnapset"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove Primera / Alletra 9K snapset in system identified by {snapsetId}",
        "tags": [
          "volume-sets"
        ]
      },
      "get": {
        "description": "Get details of snapset identified by {snapsetId} for Applicationset identified by {appsetId} for Primera / Alletra 9K",
        "operationId": "DeviceType1SnapsetsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/appsetUid"
          },
          {
            "$ref": "#/components/parameters/PrimeraSnapsetID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshotsetListSingle"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of snapsets identified by {snapsetId} for Applicationset identified by {appsetId} for Primera / Alletra 9K",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{appsetId}/un-export": {
      "post": {
        "description": "Unexport applicationset identified by {appsetId} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1VolumeSetUnexport",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/appsetUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/unExportAppSetPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Unexport applicationset identified by {appsetId} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{appsetId}/volumes": {
      "get": {
        "description": "Get volumes for an applicationset identified by appsetUid",
        "operationId": "DeviceType1VolumeSetVolumesList",
        "parameters": [
          {
            "$ref": "#/components/parameters/appsetUid"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/volumeFilterParam"
          },
          {
            "$ref": "#/components/parameters/volumeSortParam"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraAppSetVolumes"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get volumes for an applicationset identified by appsetUid",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{id}": {
      "delete": {
        "description": "Remove applicationset identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1VolumeSetsDeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uidAppset"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove applicationset identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      },
      "get": {
        "description": "Get applicationset details for an applicationset identified by appsetUid",
        "operationId": "DeviceType1VolumeSetsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/uidAppset"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraApplicationSetDetails"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get applicationset details for an applicationset identified by appsetUid",
        "tags": [
          "volume-sets"
        ]
      },
      "put": {
        "description": "Edit applicationset identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1VolumeSetsEditById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uidAppset"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/volumeSetPut"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit applicationset identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{id}/capacity-statistics": {
      "get": {
        "description": "Get capacity details for an applicationset identified by appsetUid",
        "operationId": "DeviceType1VolumeSetCapacityStatisticsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/uidAppset"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraApplicationSetCapacityStats"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get capacity details for an applicationset identified by appsetUid",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{id}/proximity-settings": {
      "get": {
        "description": "Get hosts and proximity details identified by application set {id} for Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1GetProximitySettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/idAppset"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeSetProximitySettings"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get hosts and proximity details identified by application set {id} for Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      },
      "put": {
        "description": "Change proximity settings of hosts where volume sets are exported identified by {id} and {systemId} from Primera / Alletra 9K",
        "operationId": "DeviceType1EditProximitySettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uidAppset"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeProximitySettingsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Change proximity settings of hosts where volume sets are exported identified by {id} and {systemId} from Primera / Alletra 9K",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{id}/remote-protection/actions": {
      "post": {
        "description": "Actions on volume set identified by {id} and {systemId} from Primera / Alletra 9K",
        "operationId": "DeviceType1actionOnVolumeSets",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/idAppset"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoteProtectionActionsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Actions on volume set identified by {id} and {systemId} from Primera / Alletra 9K",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{id}/snapsets": {
      "get": {
        "description": "Get snapshot details of volume sets identified by {id} for Primera / Alletra 9K",
        "operationId": "DeviceType1VolumeSetSnapshotsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/uidAppset"
          },
          {
            "$ref": "#/components/parameters/volumeFilterParam"
          },
          {
            "$ref": "#/components/parameters/volumeSortParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshotSetsSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get snapshot details of volume sets identified by {id} for Primera / Alletra 9K",
        "tags": [
          "volume-sets"
        ]
      },
      "post": {
        "description": "Create snapshot for application set identified by {id}",
        "operationId": "DeviceType1VolumeSetsSnapshotCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uidAppset"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/appsetPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create snapshot for application set identified by {id}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/capacity-history": {
      "get": {
        "description": "Get capacity trend data for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1SystemCapacityHistoryGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/timeIntervalMin"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/capacityHistory"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get capacity trend data for a storage system Primera / Alletra 9K",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/capacity-summary": {
      "get": {
        "description": "Get system capacity for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1SystemCapacitySummaryGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/syscapacity"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get system capacity for a storage system Primera / Alletra 9K",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/certificates": {
      "get": {
        "description": "Get array certificates by Primera / Alletra 9K",
        "operationId": "DeviceType1CertificatesList",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/certificateFilterParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/certificatesSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get array certificates by Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Create certificate on storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "PostCertificate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCertificateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create certificate on storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/certificates/{id}": {
      "get": {
        "description": "Get array certificates by Primera / Alletra 9K identified by {id}",
        "operationId": "DeviceType1CertificatesGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/certificatesId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/certificateDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get array certificates by Primera / Alletra 9K identified by {id}",
        "tags": [
          "system-settings"
        ]
      },
      "put": {
        "description": "Import certificate identified by {id} on storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "PutCertificate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/certificatesId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportCertificateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Import certificate identified by {id} on storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/certificates/remove": {
      "post": {
        "description": "Delete certificates from storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "RemoveCertificates",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveCertificatesInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete certificates from storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/collect-support-data": {
      "post": {
        "description": "Trigger a collection on the storage system Primera / Alletra 9K",
        "operationId": "DeviceType1SupportDataCollect",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/collectSupportDataArrayInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Trigger a collection on the storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/component-performance-statistics": {
      "get": {
        "description": "Get component performance statistics details for a storage system Primera / Alletra 9K idenfified by {systemId}",
        "operationId": "DeviceType1SystemComponentPerformanceStatisticsGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/perfStats"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get component performance statistics details for a storage system Primera / Alletra 9K idenfified by {systemId}",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosures",
        "operationId": "DeviceType1EnclosuresList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/enclosuresFilterParam"
          },
          {
            "$ref": "#/components/parameters/enclosuresSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosuresSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosures",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{cageId}/disks": {
      "get": {
        "description": "Get details of Primera / Alletra 9K disks identified by {cageId}",
        "operationId": "DeviceType1DisksList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/diskFilterParam"
          },
          {
            "$ref": "#/components/parameters/diskSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/cageId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disksSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K disks identified by {cageId}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{cageId}/disks/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K disk identified by {cageId} and {id}",
        "operationId": "DeviceType1DisksGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/cageId"
          },
          {
            "$ref": "#/components/parameters/diskUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/diskDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K disk identified by {cageId} and {id}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-card-ports": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Card Ports identified by {enclosureId}",
        "operationId": "DeviceType1EnclosureCardPortsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/enclosuresFilterParam"
          },
          {
            "$ref": "#/components/parameters/enclosuresSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosureCardPortsSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Card Ports identified by {enclosureId}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-card-ports/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Card Port identified by {enclosureId} and {id}",
        "operationId": "DeviceType1EnclosureCardPortsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/enclosureCardPortUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosureCardPortDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Card Port identified by {enclosureId} and {id}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-cards": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Cards identified by {enclosureId}",
        "operationId": "DeviceType1EnclosureCardsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/enclosuresFilterParam"
          },
          {
            "$ref": "#/components/parameters/enclosuresSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosureCardsSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Cards identified by {enclosureId}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-cards/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Card identified by {enclosureId} and {id}",
        "operationId": "DeviceType1EnclosureCardsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/enclosureCardUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosureCardDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Card identified by {enclosureId} and {id}",
        "tags": [
          "shelves"
        ]
      },
      "post": {
        "description": "Locate IO Module of Primera / Alletra 9K identified by {id}",
        "operationId": "EnclosureCardsLocateIOById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/enclosureCardUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Locate IO Module of Primera / Alletra 9K identified by {id}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-disks": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Disks identified by {enclosureId}",
        "operationId": "DeviceType1EnclosureDisksList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/enclosuresFilterParam"
          },
          {
            "$ref": "#/components/parameters/enclosuresSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosureDisksSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Disks identified by {enclosureId}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-disks/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Disk identified by {enclosureId} and {id}",
        "operationId": "DeviceType1EnclosureDisksGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/enclosureDiskUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosureDiskDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Disk identified by {enclosureId} and {id}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-expanders": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Expanders identified by {enclosureId}",
        "operationId": "DeviceType1EnclosureExpandersList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/enclosuresFilterParam"
          },
          {
            "$ref": "#/components/parameters/enclosuresSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosureExpandersSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Expanders identified by {enclosureId}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-expanders/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Expander identified by {enclosureId} and {id}",
        "operationId": "DeviceType1EnclosureExpandersGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/enclosureExpanderUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosureExpanderDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Expander identified by {enclosureId} and {id}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-fans": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Fans identified by {enclosureId}",
        "operationId": "DeviceType1EnclosureFansList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/enclosuresFilterParam"
          },
          {
            "$ref": "#/components/parameters/enclosuresSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosureFanSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Fans identified by {enclosureId}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-fans/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Fan identified by {enclosureId} and {id}",
        "operationId": "DeviceType1EnclosureFansGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/enclosureFanUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosureFanDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Fan identified by {enclosureId} and {id}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-powers": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Powers identified by {enclosureId}",
        "operationId": "DeviceType1EnclosurePowersList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/enclosuresFilterParam"
          },
          {
            "$ref": "#/components/parameters/enclosuresSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosurePowersSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Powers identified by {enclosureId}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-powers/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Power identified by {enclosureId} and {id}",
        "operationId": "DeviceType1EnclosurePowersGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/enclosurePowerUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosurePowerDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Power identified by {enclosureId} and {id}",
        "tags": [
          "shelves"
        ]
      },
      "post": {
        "description": "Locate PCM of Primera / Alletra 9K identified by {id}",
        "operationId": "EnclosurePowersLocatePCMById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/enclosurePowerUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Locate PCM of Primera / Alletra 9K identified by {id}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-sleds": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Sleds identified by {enclosureId}",
        "operationId": "DeviceType1EnclosureSledsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/enclosuresFilterParam"
          },
          {
            "$ref": "#/components/parameters/enclosuresSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosureSledsSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Sleds identified by {enclosureId}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-sleds/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure Sled identified by {enclosureId} and {id}",
        "operationId": "DeviceType1EnclosureSledsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/enclosureSledUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosureSledDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure Sled identified by {enclosureId} and {id}",
        "tags": [
          "shelves"
        ]
      },
      "post": {
        "description": "Locate drive of Primera / Alletra 9K identified by {id}",
        "operationId": "EnclosureSledsLocateDriveById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/enclosureUid"
          },
          {
            "$ref": "#/components/parameters/enclosureSledUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Locate drive of Primera / Alletra 9K identified by {id}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Enclosure identified by {id}",
        "operationId": "DeviceType1EnclosuresGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidEnclosure"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enclosuresDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Enclosure identified by {id}",
        "tags": [
          "shelves"
        ]
      },
      "post": {
        "description": "Locate enclosure drive of Primera / Alletra 9K identified by {id}",
        "operationId": "EnclosuresLocateById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidEnclosure"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Locate enclosure drive of Primera / Alletra 9K identified by {id}",
        "tags": [
          "shelves"
        ]
      },
      "put": {
        "description": "Edit details of Primera / Alletra 9K Enclosure identified by {id}",
        "operationId": "EnclosuresEditById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidEnclosure"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/editEnclosureInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit details of Primera / Alletra 9K Enclosure identified by {id}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/host-paths": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Host Paths",
        "operationId": "DeviceType1GetAllHostPaths",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/hostPathFilterParam"
          },
          {
            "$ref": "#/components/parameters/hostPathSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraHostPathList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Host Paths",
        "tags": [
          "host-paths"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/host-paths/{hostPathId}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Host Path identified by {HostPathId}",
        "operationId": "DeviceType1GetHostPathsById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/hostPathId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraHostPaths"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Host Path identified by {HostPathId}",
        "tags": [
          "host-paths"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/host-sets": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Host Sets",
        "operationId": "DeviceType1GetAllHostSets",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/hostSetFilterParam"
          },
          {
            "$ref": "#/components/parameters/hostSetSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraHostSetList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Host Sets",
        "tags": [
          "host-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/host-sets/{hostSetId}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Host Set identified by {HostSetId}",
        "operationId": "DeviceType1GetHostSetsById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/hostSetId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraHostSets"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Host Set identified by {HostSetId}",
        "tags": [
          "host-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/hosts": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Hosts",
        "operationId": "DeviceType1GetAllHosts",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/hostFilterParam"
          },
          {
            "$ref": "#/components/parameters/hostSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraHostList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Hosts",
        "tags": [
          "hosts"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/hosts/{hostId}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Host identified by {HostId}",
        "operationId": "DeviceType1GetHostById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/hostId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraHosts"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Host identified by {HostId}",
        "tags": [
          "hosts"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/mail-settings": {
      "delete": {
        "description": "Delete SMTP/mail server settings",
        "operationId": "MailSettingsDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete SMTP/mail server settings",
        "tags": [
          "system-settings"
        ]
      },
      "get": {
        "description": "Get the system's SMTP/Mail server settigs",
        "operationId": "DeviceType1MailSettingsGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mailsettings"
                }
              }
            },
            "description": "Success",
            "headers": {
              "ETag": {
                "description": "SMTP mail server settings",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get the system's SMTP/Mail server settigs",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Add SMTP/Mail server settigs",
        "operationId": "MailSettingsAssociate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/mailsettingsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Add SMTP/Mail server settigs",
        "tags": [
          "system-settings"
        ]
      },
      "put": {
        "description": "Edit SMTP/Mail server settigs",
        "operationId": "MailSettingsUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/mailsettingsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit SMTP/Mail server settigs",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/network-services/cim": {
      "get": {
        "description": "Get CIM Network-Service details for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1NetworkServiceCimGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-services_cim"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get CIM Network-Service details for a storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      },
      "put": {
        "description": "Edit CIM network service configuration",
        "operationId": "NetworkServiceCimUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nwCimEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit CIM network service configuration",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/network-services/snmp-mgr": {
      "get": {
        "description": "Get SNMP-Manager Network-Service details for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1NetworkServiceSnmpMgrList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-services_snmp"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get SNMP-Manager Network-Service details for a storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Add SNMP Manager settings",
        "operationId": "NetworkServiceSnmpMgrCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nwAddSnmpMgr"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Add SNMP Manager settings",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/network-services/snmp-mgr/{id}": {
      "delete": {
        "description": "Delete SNMP manager settings identified by {id}",
        "operationId": "NetworkServiceSnmpMgrDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/idSnmp"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete SNMP manager settings identified by {id}",
        "tags": [
          "system-settings"
        ]
      },
      "get": {
        "description": "Get a specific SNMP-Manager Network-Service details for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1NetworkServiceSnmpMgrGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/idSnmp"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-services_snmp"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "SNMP Manager object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get a specific SNMP-Manager Network-Service details for a storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      },
      "put": {
        "description": "Edit SNMP Manager settings for the specified Id",
        "operationId": "NetworkServiceSnmpMgrUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/idSnmp"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nwSnmpMgrEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit SNMP Manager settings for the specified Id",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/network-services/vasa": {
      "get": {
        "description": "Get VASA Network-Service details for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1NetworkServiceVasaGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-services_vasa"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get VASA Network-Service details for a storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/network-services/vasa/{vasaId}": {
      "post": {
        "description": "Enables or disable vasa service  on a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1NetworkServiceVasaConfigure",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/idVasa"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vasaConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Configures vasa service for the specified id.",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/network-settings": {
      "get": {
        "description": "Get Network-Settings details for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1NetworkSettingsGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-settings"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get Network-Settings details for a storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Post Network-Settings details for a storage system Primera / Alletra 9K",
        "operationId": "NetworkSettingsAssociate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/editNetworkSettingsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Post Network-Settings details for a storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Nodes",
        "operationId": "DeviceType1NodesList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/nodesFilterParam"
          },
          {
            "$ref": "#/components/parameters/nodesSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodesSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Nodes",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node identified by {id}",
        "operationId": "DeviceType1NodesGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidNode"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodeDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node identified by {id}",
        "tags": [
          "controllers"
        ]
      },
      "post": {
        "description": "Locate node of Primera / Alletra 9K identified by {id}",
        "operationId": "NodesLocateById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidNode"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Locate node of Primera / Alletra 9K identified by {id}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/component-performance-statistics": {
      "get": {
        "description": "Get component performance statistics details of Primera / Alletra 9K node idenfified by {nodeId}",
        "operationId": "DeviceType1NodeComponentPerformanceStatisticsGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodePerfStats"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get component performance statistics details of Primera / Alletra 9K node idenfified by {nodeId}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-cards": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Cards identified by {nodeId}",
        "operationId": "DeviceType1NodeCardsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/nodesFilterParam"
          },
          {
            "$ref": "#/components/parameters/nodesSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodeCardsSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Cards identified by {nodeId}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-cards/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Card identified by {nodeId} and {id}",
        "operationId": "DeviceType1NodeCardsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeUid"
          },
          {
            "$ref": "#/components/parameters/nodeCardUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodeCardDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Card identified by {nodeId} and {id}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-cpus": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Cpus identified by {nodeId}",
        "operationId": "DeviceType1NodeCpusList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/nodesFilterParam"
          },
          {
            "$ref": "#/components/parameters/nodesSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodeCpusSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Cpus identified by {nodeId}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-cpus/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Cpu identified by {nodeId} and {id}",
        "operationId": "DeviceType1NodeCpusGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeUid"
          },
          {
            "$ref": "#/components/parameters/nodeCpuUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodesCpuDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Cpu identified by {nodeId} and {id}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-drives": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Drives identified by {nodeId}",
        "operationId": "DeviceType1NodeDrivesList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/nodesFilterParam"
          },
          {
            "$ref": "#/components/parameters/nodesSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodeDrivesSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Drives identified by {nodeId}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-drives/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Drive identified by {nodeId} and {id}",
        "operationId": "DeviceType1NodeDrivesGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeUid"
          },
          {
            "$ref": "#/components/parameters/nodeDriveUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodeDriveDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Drive identified by {nodeId} and {id}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-mcus": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Mcus identified by {nodeId}",
        "operationId": "DeviceType1NodeMcusList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/nodesFilterParam"
          },
          {
            "$ref": "#/components/parameters/nodesSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodeMcusSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Mcus identified by {nodeId}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-mcus/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Mcu identified by {nodeId} and {id}",
        "operationId": "DeviceType1NodeMcusGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeUid"
          },
          {
            "$ref": "#/components/parameters/nodeMcuUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodeMcuDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Mcu identified by {nodeId} and {id}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-mems": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Memories identified by {nodeId}",
        "operationId": "DeviceType1NodeMemsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/nodesFilterParam"
          },
          {
            "$ref": "#/components/parameters/nodesSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodesMemorySummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Memories identified by {nodeId}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-mems/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Memory identified by {nodeId} and {id}",
        "operationId": "DeviceType1NodeMemsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeUid"
          },
          {
            "$ref": "#/components/parameters/nodeMemoryUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodeMemoryDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Memory identified by {nodeId} and {id}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-powers": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Power Supplies identified by {nodeId}",
        "operationId": "DeviceType1NodePowersList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/nodesFilterParam"
          },
          {
            "$ref": "#/components/parameters/nodesSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodesPowerSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Power Supplies identified by {nodeId}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-powers/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Power Supply identified by {nodeId} and {id}",
        "operationId": "DeviceType1NodePowersGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeId"
          },
          {
            "$ref": "#/components/parameters/nodePowerUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodePowerSupplyDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Power Supply identified by {nodeId} and {id}",
        "tags": [
          "controllers"
        ]
      },
      "post": {
        "description": "Locate PCBM of Primera / Alletra 9K identified by {id}",
        "operationId": "NodePowersLocatePCMBById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeId"
          },
          {
            "$ref": "#/components/parameters/nodePowerUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Locate PCBM of Primera / Alletra 9K identified by {id}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/nodes-batteries": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Batteries identified by {nodeId}",
        "operationId": "DeviceType1NodeBatteriesList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/nodesFilterParam"
          },
          {
            "$ref": "#/components/parameters/nodesSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodeBatteriesSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Batteries identified by {nodeId}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/nodes-batteries/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Node Battery identified by {nodeId} and {id}",
        "operationId": "DeviceType1NodeBatteriesGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/nodeId"
          },
          {
            "$ref": "#/components/parameters/nodeBatteryUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nodeBatteryDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Node Battery identified by {nodeId} and {id}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/service-ports": {
      "get": {
        "description": "Get service ports for nodes of all storage systems of Primera / Alletra 9K identified by {systemId} and {nodeId }",
        "operationId": "DeviceType1NodeServicePortsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/servicePortFilterParam"
          },
          {
            "$ref": "#/components/parameters/nodeId"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/servicePortsList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get service ports for nodes of all storage systems of Primera / Alletra 9K identified by {systemId} and {nodeId }",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/service-ports": {
      "get": {
        "description": "Get service ports for nodes of all storage systems of Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1NodeServicePortsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/servicePortFilterParam"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/servicePortsList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get service ports for nodes of all storage systems of Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/performance-history": {
      "get": {
        "description": "Get performance trend data for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1SystemPerformanceHistoryGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/timeIntervalMin"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/systemPerformanceHistory"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get performance trend data for a storage system Primera / Alletra 9K",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/performance-statistics": {
      "get": {
        "description": "Get performance statistics for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1GetSystemPerformanceStatistics",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/systemPerformance"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get performance statistics for a storage system Primera / Alletra 9K",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Ports",
        "operationId": "DeviceType1PortsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/portsFilterParam"
          },
          {
            "$ref": "#/components/parameters/portsSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/portsSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Ports",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K Port identified by {id}",
        "operationId": "DeviceType1PortsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/portUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/portDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Port identified by {id}",
        "tags": [
          "ports"
        ]
      },
      "post": {
        "description": "Port enable disable identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "PortEnable",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/portUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/portEnableInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Port enable disable identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/clear": {
      "post": {
        "description": "Clear the details of the ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1PortsClear",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/portUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/portClearInput"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Clear the details of the ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/edit-iscsi": {
      "put": {
        "description": "Edit iscsi ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1IscsiPortEdit",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/portUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/portISCSIEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit iscsi ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/edit-rcip": {
      "put": {
        "description": "Edit rcip ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1RcipPortEdit",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/portUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/portRCIPEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit rcip ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/fc": {
      "put": {
        "description": "Edit ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1FcPortEdit",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/portUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/portFCEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/initialize": {
      "post": {
        "description": "Initialize the details of the ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "initialisePorts",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/portUid"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Initialize the details of the ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/ping-iscsi": {
      "post": {
        "description": "Ping iscsi ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1IscsiPortPing",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/portUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/portISCSIPing"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Ping iscsi ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/ping-rcip": {
      "post": {
        "description": "Ping rcip ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1RcipPortPing",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/portUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/portRCIPPing"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Ping rcip ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/qos-policy": {
      "get": {
        "description": "Get QoS policy data for a storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1QoSPolicyGetBySystemId",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/targetName"
          },
          {
            "$ref": "#/components/parameters/targetType"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qosPolicy"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get QoS policy data for a storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/recommendations": {
      "get": {
        "description": "Get recommendations for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1RecommendationsGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recommendation"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get recommendations for a storage system Primera / Alletra 9K",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/snapshots/{snapshotId}/clone": {
      "post": {
        "description": "Create a clone of a snapshot identified by {snapshotId} for Primera / Alletra 9K systems.",
        "operationId": "SnapshotCloneCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/snapshotUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createCloneSnapshotInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create a clone of a snapshot identified by {snapshotId} for Primera / Alletra 9K systems.",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/snapshots/{snapshotId}/export": {
      "post": {
        "description": "Export vlun for snapshot identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1VlunExportForSnapshot",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/snapshotUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vlunsCreateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Export vlun for snapshot identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/snapshots/{snapshotId}/un-export": {
      "post": {
        "description": "Unexport vlun for snapshot identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1VlunUnexportForSnapshot",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/snapshotUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/unExportVlun"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Unexport vlun for snapshot identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/storage-pools": {
      "get": {
        "description": "Get all storage-pools details by Primera / Alletra 9K",
        "operationId": "DeviceType1StoragePoolList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/primeraPoolFilter"
          },
          {
            "$ref": "#/components/parameters/primeraPoolSort"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/primeraPoolsSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Pool object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all storage-pools details by Primera / Alletra 9K",
        "tags": [
          "storage-pools"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/storage-pools/{id}": {
      "get": {
        "description": "Get details of Primera / Alletra 9K storage-pool identified by {id}",
        "operationId": "DeviceType1StoragePoolGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/primeraPoolID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/primeraPoolDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Pool object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K storage-pool identified by {id}",
        "tags": [
          "storage-pools"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/storage-pools/{id}/volumes": {
      "get": {
        "description": "Get all volumes for storage-pool identified by {uuid} of Primera / Alletra 9K",
        "operationId": "DeviceType1StoragePoolVolumeGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/primeraPoolID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraVolumesList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Pool object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all volumes for storage-pool identified by {uuid} of Primera / Alletra 9K",
        "tags": [
          "storage-pools"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/support-settings": {
      "get": {
        "description": "Get support settings for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1SupportSettingsGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supportSetting"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get support settings for a storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Add support settings for a storage system Primera / Alletra 9K",
        "operationId": "SupportSettingsAssociate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supportSettingsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Add support settings for a storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      },
      "put": {
        "description": "Edit support settings for a storage system Primera / Alletra 9K",
        "operationId": "SupportSettingsUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supportSettingsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit support settings for a storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/system-settings": {
      "get": {
        "description": "Get the system settings configuration details",
        "operationId": "DeviceType1SystemSettingsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/systemConfigParams"
                }
              }
            },
            "description": "Success",
            "headers": {
              "ETag": {
                "description": "System settings configuration information",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get the system settings configuration details",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Edit system settings configuration",
        "operationId": "SystemSettingsAssociate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/systemConfigParamsEditInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit system settings configuration",
        "tags": [
          "system-settings"
        ]
      },
      "put": {
        "description": "Edit system settings configuration",
        "operationId": "SystemSettingsUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/systemConfigParamsEditInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit system settings configuration",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/system-settings/quorum-witness": {
      "get": {
        "description": "Get quorum witness configuration details from storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1GetQuorumWitness",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/WitnessFilterParam"
          },
          {
            "$ref": "#/components/parameters/WitnessSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WitnessList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get quorum witness configuration details from storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Create quorum witness on storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1PostQuorumWitness",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuorumWitnessInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create quorum witness on storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/system-settings/quorum-witness/{replicationPartnerId}": {
      "delete": {
        "description": "Delete quorum witness identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1DeleteQuorumWitness",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/replicationPartnerId"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete quorum witness identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      },
      "get": {
        "description": "Get details of quorum witness configured on replication partner identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1GetQuorumWitnessWithId",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/replicationPartnerId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WitnessDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of quorum witness configured on replication partner identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      },
      "put": {
        "description": "Edit quorum witness identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1PutQuorumWitness",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/replicationPartnerId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditQuorumWitnessInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit quorum witness identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/system-settings/replication-partners": {
      "get": {
        "description": "Get details of replication partners on storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1GetReplicationPartners",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/ReplicationPartnerFilterParam"
          },
          {
            "$ref": "#/components/parameters/ReplicationPartnerSortParam"
          },
          {
            "$ref": "#/components/parameters/IndirectReplicationPartner"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicationPartnersList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of replication partners on storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Create replication partners on Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1PostReplicationPartners",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReplicationPartnersInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create replication partners on Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/system-settings/replication-partners/{replicationPartnerId}": {
      "get": {
        "description": "Get details of replication partner identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1GetReplicationPartnerWithId",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/replicationPartnerId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicationPartnerDetails"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of replication partner identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      },
      "put": {
        "description": "Edit replication partner identified by {replicationPartnerId} on Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1PutReplicationPartner",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/replicationPartnerId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditReplicationPartnerInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit replication partner identified by {replicationPartnerId} on Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/system-settings/replication-partners/remove": {
      "post": {
        "description": "Delete replication partner from storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1PostRemoveReplicationPartners",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveReplicationPartnersInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete replication partner from storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/targets/{targetName}/performance-history": {
      "get": {
        "description": "Get QoS performance trend data of Primera / Alletra 9K target identified by {targetName}",
        "operationId": "DeviceType1QoSPerformanceStatisticsGetByTargetName",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/targetNamePath"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/timeIntervalMin"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qosPerformanceHistory"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get QoS performance trend data of Primera / Alletra 9K target identified by {targetName}",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/telemetry": {
      "get": {
        "description": "Get telemetry status for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1TelemetryGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/telemetryStatus"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get telemetry status for a storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/trust-certificates": {
      "get": {
        "description": "Get certificates trusted by Primera / Alletra 9K",
        "operationId": "DeviceType1TrustedCertificatesList",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/trustedCertificateFilterParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trustedCertificatesSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get certificates trusted by Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Add trusted certificates for storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "AddTrustedCertificates",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTrustedCertificateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Add trusted certificates for storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/trust-certificates/{id}": {
      "get": {
        "description": "Get certificates trusted by Primera / Alletra 9K identified by {id}",
        "operationId": "DeviceType1TrustedCertificatesGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/certificatesId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trustedCertificateDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get certificates trusted by Primera / Alletra 9K identified by {id}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/trust-certificates/remove": {
      "post": {
        "description": "Delete trusted certificates from storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "RemoveTrustedCertificates",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveTrustedCertificatesInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete trusted certificates from storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/vm-manager-settings": {
      "get": {
        "description": "Get vcenter settings for a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1VMManagerSettingsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vcenterSettingsSumarryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get vcenter settings for a storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Add vCenter settings to storage system Primera / Alletra 9K",
        "operationId": "DeviceType1PostVCenterSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vCenterSettingsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Add vCenter settings to storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/vm-manager-settings/{vcenterSettingId}": {
      "delete": {
        "description": "Delete vcenter setting identified by {vcenterSettingId} on storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1DeleteVCenterSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/vcenterSettingId"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete vcenter setting identified by {vcenterSettingId} on storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      },
      "get": {
        "description": "Get vcenter setting detail for a given vcenter setting of a storage system Primera / Alletra 9K",
        "operationId": "DeviceType1VMManagerSettingsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/vcenterSettingId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vcenterSettingDetail"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get vcenter setting detail for a given vcenter setting of a storage system Primera / Alletra 9K",
        "tags": [
          "system-settings"
        ]
      },
      "put": {
        "description": "Edit vCenter setting identified by {vcenterSettingId} on Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1PutVCenterSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/vcenterSettingId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/editVCenterSettingsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit vCenter setting identified by {vcenterSettingId} on Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes": {
      "get": {
        "description": "Get all volumes details for Primera / Alletra 9K",
        "operationId": "DeviceType1VolumesList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/volumeFilterParam"
          },
          {
            "$ref": "#/components/parameters/volumeSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraVolumesList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all volumes details for Primera / Alletra 9K",
        "tags": [
          "volumes"
        ]
      },
      "post": {
        "description": "Create volume for a storage system Primera / Alletra 9K",
        "operationId": "VolumeCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createVolumeInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create volume for a storage system Primera / Alletra 9K",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}": {
      "delete": {
        "description": "Remove volume identified by {volumeId} from Primera / Alletra 9K",
        "operationId": "VolumeDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidVolume"
          },
          {
            "$ref": "#/components/parameters/UnExportDelVol"
          },
          {
            "$ref": "#/components/parameters/CascadeDelVol"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove volume identified by {volumeId} from Primera / Alletra 9K",
        "tags": [
          "volumes"
        ]
      },
      "get": {
        "description": "Get details of Primera / Alletra 9K Volume identified by {id}",
        "operationId": "DeviceType1VolumeGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidVolume"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraVolumeDetails"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Primera / Alletra 9K Volume identified by {id}",
        "tags": [
          "volumes"
        ]
      },
      "put": {
        "description": "Edit volume identified by {volumeId} from Primera / Alletra 9K",
        "operationId": "VolumeEdit",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidVolume"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/volumePut"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit volume identified by {volumeId} from Primera / Alletra 9K",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/capacity-history": {
      "get": {
        "description": "Get volume capacity trend data of Primera / Alletra 9K Volume identified by {id}",
        "operationId": "DeviceType1VolumeCapacityHistoryGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidVolume"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/timeIntervalMin"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volumeCapacityHistory"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get volume capacity trend data of Primera / Alletra 9K Volume identified by {id}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/clone": {
      "post": {
        "description": "Create a clone volume identified by {id} for Primera / Alletra 9K systems.",
        "operationId": "VolumeCloneCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidVolume"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createCloneVolumeInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create a clone volume identified by {id} for Primera / Alletra 9K systems.",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/export": {
      "post": {
        "description": "Export vlun for volume identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1VlunExport",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidVolume"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vlunsCreateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Export vlun for volume identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/performance-history": {
      "get": {
        "description": "Get performance trend data of Primera / Alletra 9K Volume identified by {id}",
        "operationId": "DeviceType1VolumePerformanceHistoryGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidVolume"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/timeIntervalMin"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volumePerformanceHistory"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get performance trend data of Primera / Alletra 9K Volume identified by {id}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/performance-statistics": {
      "get": {
        "description": "Get performance statistics of Primera / Alletra 9K Volume identified by {id}",
        "operationId": "DeviceType1VolumePerformanceStatisticsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidVolume"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volumePerformance"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get performance statistics of Primera / Alletra 9K Volume identified by {id}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/snapshots": {
      "get": {
        "description": "Get snapshot details of volume identified by {id} for Primera / Alletra 9K",
        "operationId": "DeviceType1VolumeSnapshotsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/volumeFilterParam"
          },
          {
            "$ref": "#/components/parameters/volumeSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/uuidVolume"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshotsSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get snapshot details of volume identified by {id} for Primera / Alletra 9K",
        "tags": [
          "volumes"
        ]
      },
      "post": {
        "description": "Create snapshot for volumes identified by {id}",
        "operationId": "VolumeSnapshotCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidVolume"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/volumePost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create snapshot for volumes identified by {id}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/un-export": {
      "post": {
        "description": "Unexport vlun for volume identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1VlunUnexport",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidVolume"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/unExportVlun"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Unexport vlun for volume identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/vluns": {
      "get": {
        "description": "Get details of vluns for Volume identified by {volumeId} for Primera / Alletra 9K",
        "operationId": "DeviceType1VlunsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/uuidVolume"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/volumeFilterParam"
          },
          {
            "$ref": "#/components/parameters/orderby"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vlunsSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of vluns for Volume identified by {volumeId} for Primera / Alletra 9K",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{volumeId}/clones": {
      "get": {
        "description": "Get the details of the clone volumes associated with a base volume identified by {volumeId} for Primera / Alletra 9K systems.",
        "operationId": "DeviceType1GetClones",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/volumeUid"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/volumeFilterParam"
          },
          {
            "$ref": "#/components/parameters/volumeSortParam"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimeraVolumesList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get the details of the clone volumes associated with a base volume identified by {volumeId} for Primera / Alletra 9K systems.",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{volumeId}/clones/{cloneId}/promote": {
      "post": {
        "description": "Promote a clone volume identified by {cloneId} of a volume identified by {volumeId} on storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1PromoteCloneVolume",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/volumeUid"
          },
          {
            "$ref": "#/components/parameters/cloneUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromoteCloneInput"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Promote a clone volume identified by {cloneId} of a volume identified by {volumeId} on storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{volumeId}/clones/{cloneId}/resync": {
      "post": {
        "description": "Resynchronize a clone volume identified by {cloneId} of a volume identified by {volumeId} on storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1ResyncCloneVolume",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/volumeUid"
          },
          {
            "$ref": "#/components/parameters/cloneUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResyncCloneVolumeInput"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Resynchronize a clone volume identified by {cloneId} of a volume identified by {volumeId} on storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{volumeId}/snapshots/{snapshotId}": {
      "delete": {
        "description": "Remove Primera / Alletra 9K snapshot in system identified by {snapshotId}",
        "operationId": "VolumeSnapshotGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/volumeUid"
          },
          {
            "$ref": "#/components/parameters/PrimeraSnapshotID"
          },
          {
            "$ref": "#/components/parameters/forceDeleteSnapshot"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove Primera / Alletra 9K snapshot in system identified by {snapshotId}",
        "tags": [
          "volumes"
        ]
      },
      "get": {
        "description": "Get details of vlun identified by {id} for Volume identified by {volumeId} for Primera / Alletra 9K",
        "operationId": "DeviceType1SnapshotsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/volumeUid"
          },
          {
            "$ref": "#/components/parameters/snapshotUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshotsListSingle"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of snapshot identified by {snapshotId} for Volume identified by {volumeId} for Primera / Alletra 9K",
        "tags": [
          "volumes"
        ]
      },
      "post": {
        "description": "Promote a snapshot identified by {snapshotId} of a volume identified by {volumeId} on storage system Primera / Alletra 9K identified by {systemId}",
        "operationId": "DeviceType1PromoteSnapshot",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/volumeUid"
          },
          {
            "$ref": "#/components/parameters/snapshotUid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromoteSnapshotInput"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Promote a snapshot identified by {snapshotId} of a volume identified by {volumeId} on storage system Primera / Alletra 9K identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{volumeId}/vluns/{id}": {
      "delete": {
        "description": "Remove vlun idenfied by {id} form volume identified by {volumeId} from Primera / Alletra 9K",
        "operationId": "VlunsDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/volumeUid"
          },
          {
            "$ref": "#/components/parameters/vlunUid"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove vlun idenfied by {id} form volume identified by {volumeId} from Primera / Alletra 9K",
        "tags": [
          "volumes"
        ]
      },
      "get": {
        "description": "Get details of vlun identified by {id} for Volume identified by {volumeId} for Primera / Alletra 9K",
        "operationId": "DeviceType1VlunsGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemUid"
          },
          {
            "$ref": "#/components/parameters/volumeUid"
          },
          {
            "$ref": "#/components/parameters/vlunUid"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vlunsListSingle"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of vlun identified by {id} for Volume identified by {volumeId} for Primera / Alletra 9K",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2": {
      "get": {
        "description": "Get all storage systems by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetStorageSystem",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/nimbleSystemFilterParam"
          },
          {
            "$ref": "#/components/parameters/nimbleSystemSortParam"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleStorageSystemSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all storage systems by Nimble / Alletra 6K",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}": {
      "get": {
        "description": "Get Nimble / Alletra 6K object identified by {systemId}",
        "operationId": "DeviceType2GetStorageSystemById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleStorageSystemDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get Nimble / Alletra 6K object identified by {systemId}",
        "tags": [
          "storage-systems"
        ]
      },
      "put": {
        "description": "Edit settings of Nimble / Alletra 6K system identified by {systemId}",
        "operationId": "DeviceType2EditStorageSystemSettingsById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditGroupInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit settings of Nimble / Alletra 6K system identified by {systemId}",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/access-control-records": {
      "get": {
        "description": "Get all access-control-records details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllAccessControlRecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/accessControlRecordFilterParam"
          },
          {
            "$ref": "#/components/parameters/accessControlRecordSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleAccessControlRecordList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all access-control-records details by Nimble / Alletra 6K",
        "tags": [
          "volumes"
        ]
      },
      "post": {
        "description": "Create Nimble / Alletra 6K access control record in system identified by {systemId}",
        "operationId": "DeviceType2AccessControlRecordCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreateAccessControlRecordInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create Nimble / Alletra 6K access control record in system identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/access-control-records/{accessControlRecordId}": {
      "delete": {
        "description": "Remove access-control-record identified by {accessControlRecordId} from Nimble / Alletra 6K",
        "operationId": "DeviceType2RemoveAccessControlRecordById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleAccessControlRecordID"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove access-control-record identified by {accessControlRecordId} from Nimble / Alletra 6K",
        "tags": [
          "volumes"
        ]
      },
      "get": {
        "description": "Get details of Nimble / Alletra 6K access-control-records identified by {accessControlRecordId}",
        "operationId": "DeviceType2GetAccessControlRecordById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/accessControlRecordId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleAccessControlRecordDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K access-control-records identified by {accessControlRecordId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/actions/merge": {
      "post": {
        "description": "Perform group merge with the specified group.",
        "operationId": "DeviceType2MergeGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleMergeGroupsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Perform group merge with the specified group.",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/alarms": {
      "get": {
        "description": "Get all alarms of Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAlarms",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/alarmFilterParam"
          },
          {
            "$ref": "#/components/parameters/alarmSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleAlarmsList"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all alarms of Nimble / Alletra 6K",
        "tags": [
          "alarms"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/alarms/{alarmId}": {
      "get": {
        "description": "Get all alarms of Nimble / Alletra 6K identified by {alarmId}",
        "operationId": "DeviceType2GetAlarmsUsingAlarmId",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/alarmId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleAlarmsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all alarms of Nimble / Alletra 6K identified by {alarmId}",
        "tags": [
          "alarms"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/application-servers": {
      "get": {
        "description": "Get all application servers details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllApplicationServers",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/FilterParam"
          },
          {
            "$ref": "#/components/parameters/SortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationServersList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all application servers details by Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Create Nimble / Alletra 6K application server in system identified by {systemId}",
        "operationId": "DeviceType2ApplicationServerCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationServer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create Nimble / Alletra 6K application server in system identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/application-servers/{applicationServerId}": {
      "delete": {
        "description": "Remove application server identified by {applicationServerId} from Nimble / Alletra 6K",
        "operationId": "DeviceType2RemoveApplicationServerById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleApplicationServerID"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove application server identified by {applicationServerId} from Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      },
      "get": {
        "description": "Get details of Nimble / Alletra 6K application server identified by {applicationServerId}",
        "operationId": "DeviceType2GetApplicationServerById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/ApplicationServerID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationServerDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K application server identified by {applicationServerId}",
        "tags": [
          "system-settings"
        ]
      },
      "put": {
        "description": "Modify Nimble / Alletra 6K application server in system identified by {systemId}",
        "operationId": "DeviceType2ApplicationServerEdit",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleApplicationServerID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditApplicationServer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Modify Nimble / Alletra 6K application server in system identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/applications/{id}/capacity-stats": {
      "get": {
        "description": "Get capacity stats of Application identified by {id} for a storage system Nimble / Alletra 6K",
        "operationId": "DeviceType2GetApplicationCapacityStatisticsById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/spaceDomainId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleSpaceDomainDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get capacity stats of Application identified by {id} for a storage system Nimble / Alletra 6K",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/applications/capacity-stats": {
      "get": {
        "description": "Get capacity stats of Applications for a storage system Nimble / Alletra 6K",
        "operationId": "DeviceType2GetApplicationsCapacityStatistics",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/spaceDomainFilterParam"
          },
          {
            "$ref": "#/components/parameters/spaceDomainSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleSpaceDomainList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get capacity stats of Applications for a storage system Nimble / Alletra 6K",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/arrays": {
      "get": {
        "description": "Get all arrays details by Nimble / Alletra 6K",
        "operationId": "GetDeviceType2Arrays",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/arrayFilterParam"
          },
          {
            "$ref": "#/components/parameters/arraySortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleNewArrayList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all arrays details by Nimble / Alletra 6K",
        "tags": [
          "storage-systems"
        ]
      },
      "post": {
        "description": "Create Nimble / Alletra 6K array identified by {systemId}",
        "operationId": "DeviceType2CreateArray",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreateArrayInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create Nimble / Alletra 6K array identified by {systemId}",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/arrays/{arrayId}": {
      "delete": {
        "description": "Delete Nimble / Alletra 6K array identified by {arrayId}",
        "operationId": "DeviceType2DeleteArrayById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleArrayID"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete Nimble / Alletra 6K array identified by {arrayId}",
        "tags": [
          "storage-systems"
        ]
      },
      "get": {
        "description": "Get details of Nimble / Alletra 6K array identified by {arrayId}",
        "operationId": "GetDeviceType2ArrayById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleArrayID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleArrayDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K array identified by {arrayId}",
        "tags": [
          "storage-systems"
        ]
      },
      "put": {
        "description": "Edit  details of Nimble / Alletra 6K array identified by {arrayId}",
        "operationId": "DeviceType2EditArrayById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleArrayID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditArrayInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit  details of Nimble / Alletra 6K array identified by {arrayId}",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/arrays/{arrayId}/actions/failover": {
      "post": {
        "description": "Perform failover of Nimble / Alletra 6K array identified by {arrayId}",
        "operationId": "DeviceType2ArrayFailover",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleArrayID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleArrayFailoverInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Perform failover of Nimble / Alletra 6K array identified by {arrayId}",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/autosupport/actions/send": {
      "post": {
        "description": "Send auto support information of Nimble / Alletra 6K identified by {systemId}",
        "operationId": "DeviceType2SendAutoSupport",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Send auto support information of Nimble / Alletra 6K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/capacity-history": {
      "get": {
        "description": "Get capacity trend data for a storage system Nimble / Alletra 6K",
        "operationId": "DeviceType2GetStorageSystemCapacityHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/timeIntervalMin"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nimblecapacityHistory"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get capacity trend data for a storage system Nimble / Alletra 6K",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/controllers": {
      "get": {
        "description": "Get all controllers details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllControllers",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/controllerFilterParam"
          },
          {
            "$ref": "#/components/parameters/controllerSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleControllerList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all controllers details by Nimble / Alletra 6K",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/controllers/{controllerId}": {
      "get": {
        "description": "Get details of Nimble / Alletra 6K Controller identified by {controllerId}",
        "operationId": "DeviceType2GetControllerById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/controllerId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleControllerDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K Controller identified by {controllerId}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/controllers/{controllerId}/actions/halt": {
      "post": {
        "description": "Perform halt of Nimble / Alletra 6K controller identified by {controllerId}",
        "operationId": "DeviceType2ControllerHalt",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/controllerId"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Perform halt of Nimble / Alletra 6K controller identified by {controllerId}",
        "tags": [
          "controllers"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/disks": {
      "get": {
        "description": "Get all disks details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllDisks",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/nimblediskFilterParam"
          },
          {
            "$ref": "#/components/parameters/nimblediskSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleDisksList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all disks details by Nimble / Alletra 6K",
        "tags": [
          "disks"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/disks/{diskId}": {
      "get": {
        "description": "Get details of Nimble / Alletra 6K disk identified by {diskId}",
        "operationId": "DeviceType2GetDiskById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleDiskId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleDiskDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K disk identified by {diskId}",
        "tags": [
          "disks"
        ]
      },
      "put": {
        "description": "Edit details of Nimble / Alletra 6K disk identified by {diskId}",
        "operationId": "DeviceType2DiskEdit",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleDiskId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditDiskInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit details of Nimble / Alletra 6K disk identified by {diskId}",
        "tags": [
          "disks"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/events": {
      "get": {
        "description": "Get all events of Nimble / Alletra 6K",
        "operationId": "DeviceType2GetEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/eventFilterParam"
          },
          {
            "$ref": "#/components/parameters/eventSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleEventsList"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all events of Nimble / Alletra 6K",
        "tags": [
          "audit-event"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/events/{eventId}": {
      "get": {
        "description": "Get all events of Nimble / Alletra 6K indentified by {eventId}",
        "operationId": "DeviceType2GetEventsUsingEventId",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/eventId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleEventsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all events of Nimble / Alletra 6K identified by {eventId}",
        "tags": [
          "audit-event"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/fibre-channel-configs": {
      "get": {
        "description": "Get all fibre channel configs details of Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllFibreChannelConfigs",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/fcConfigsFilterParam"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleFCConfigsList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all fibre channel configs details of Nimble / Alletra 6K",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/fibre-channel-configs/{fcConfigId}": {
      "get": {
        "description": "Get fibre channel configs details of Nimble / Alletra 6K identified by {fcConfigId}.",
        "operationId": "DeviceType2GetFibreChannelConfigById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleFCConfigId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimblefibreChannelConfigsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get fibre channel configs details of Nimble / Alletra 6K identified by {fcConfigId}.",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/fibre-channel-sessions": {
      "get": {
        "description": "Get all fibre channel sessions details of Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllFibreChannelSessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/fcSessionFilterParam"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleFCSessionList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all fibre channel sessions details of Nimble / Alletra 6K",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/fibre-channel-sessions/{fcSessionId}": {
      "get": {
        "description": "Get fibre channel session details of Nimble / Alletra 6K identified by {fcSessionId}.",
        "operationId": "DeviceType2GetFibreChannelSessionById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleFCSessionId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleFCSessionDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get fibre channel session details of Nimble / Alletra 6K identified by {fcSessionId}.",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/folders": {
      "get": {
        "description": "Get all folders details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllFolders",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/folderFilterParam"
          },
          {
            "$ref": "#/components/parameters/folderSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleFolderList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all folders details by Nimble / Alletra 6K",
        "tags": [
          "volume-sets"
        ]
      },
      "post": {
        "description": "Create Nimble / Alletra 6K folder in system identified by {systemId}",
        "operationId": "DeviceType2FolderCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreateFolderInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create Nimble / Alletra 6K folder in system identified by {systemId}",
        "tags": [
          "folders"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/folders/{folderId}": {
      "delete": {
        "description": "Remove Nimble / Alletra 6K folder identified by {folderId}",
        "operationId": "DeviceType2RemoveFolderById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove Nimble / Alletra 6K folder identified by {folderId}",
        "tags": [
          "folders"
        ]
      },
      "get": {
        "description": "Get details of Nimble / Alletra 6K Folders identified by {folderId}",
        "operationId": "DeviceType2GetFolderById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/folderId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleFolderDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K Folders identified by {folderId}",
        "tags": [
          "folders"
        ]
      },
      "put": {
        "description": "Edit details of Nimble / Alletra 6K folder identified by {folderId}",
        "operationId": "DeviceType2FolderEdit",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditFolderInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit details of Nimble / Alletra 6K folder identified by {folderId}",
        "tags": [
          "folders"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/health-status": {
      "get": {
        "description": "Get details of  Nimble / Alletra 6K health status",
        "operationId": "DeviceType2GetHealthStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/healthStatusFilterParam"
          },
          {
            "$ref": "#/components/parameters/healthStatusSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleHealthStatusList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage group object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of  Nimble / Alletra 6K health status",
        "tags": [
          "health-status"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/health-status/{healthStatusId}": {
      "get": {
        "description": "Get details of Nimble / Alletra 6K health status identified by {healthStatusId}",
        "operationId": "DeviceType2GetHealthStatusUsingHealthId",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleHealthStatusID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleHealthStatusDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "network settings object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of  Nimble / Alletra 6K health status identified by {healthStatusId}",
        "tags": [
          "health-status"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/host-groups": {
      "get": {
        "description": "Get all nimble host initiator groups details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllHostInitiatorGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/hostGroupFilterParam"
          },
          {
            "$ref": "#/components/parameters/hostGroupSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleInitiatorGroupList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all nimble host initiator groups details by Nimble / Alletra 6K",
        "tags": [
          "host-initiator-groups"
        ]
      },
      "post": {
        "description": "Create Nimble / Alletra 6K initiator group in system identified by {systemId}",
        "operationId": "DeviceType2HostInitiatorGroupCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreateInitiatorGroupInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create Nimble / Alletra 6K initiator group in system identified by {systemId}",
        "tags": [
          "host-initiator-groups"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/host-groups/{hostInitiatorGroupId}": {
      "delete": {
        "description": "Remove initiator-groups identified by {hostInitiatorGroupId} from Nimble / Alletra 6K",
        "operationId": "DeviceType2RemoveHostInitiatorGroupById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleHostInitiatorGroupId"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove initiator-groups identified by {hostInitiatorGroupId} from Nimble / Alletra 6K",
        "tags": [
          "host-initiator-groups"
        ]
      },
      "get": {
        "description": "Get details of Nimble / Alletra 6K Nimble Initiators identified by {hostInitiatorGroupId}",
        "operationId": "DeviceType2GetHostInitiatorGroupById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleHostInitiatorGroupId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleInitiatorGroupDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K Nimble Initiators identified by {hostInitiatorGroupId}",
        "tags": [
          "host-initiator-groups"
        ]
      },
      "put": {
        "description": "Update initiator-groups identified by {hostInitiatorGroupId}",
        "operationId": "DeviceType2UpdateHostInitiatorGroupById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleHostInitiatorGroupId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditInitiatorGroupInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Update initiator-groups identified by {hostInitiatorGroupId}",
        "tags": [
          "host-initiator-groups"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/host-initiators": {
      "get": {
        "description": "Get all nimble initiators details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllInitiators",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/initiatorFilterParam"
          },
          {
            "$ref": "#/components/parameters/initiatorSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleInitiatorsList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all nimble initiators details by Nimble / Alletra 6K",
        "tags": [
          "host-initiators"
        ]
      },
      "post": {
        "description": "Get all nimble initiators details by Nimble / Alletra 6K",
        "operationId": "DeviceType2InitiatorsCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreateInitiatorInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create Nimble / Alletra 6K nimble initiator in system identified by {systemId}",
        "tags": [
          "host-initiators"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/host-initiators/{hostInitiatorId}": {
      "delete": {
        "description": "Remove Nimble Initiator identified by {hostInitiatorId} from Nimble / Alletra 6K",
        "operationId": "DeviceType2RemoveInitiatorsById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleHostInitiatorID"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove Nimble Initiator identified by {hostInitiatorId} from Nimble / Alletra 6K",
        "tags": [
          "host-initiators"
        ]
      },
      "get": {
        "description": "Get details of Nimble / Alletra 6K Nimble Initiators identified by {hostInitiatorId}",
        "operationId": "DeviceType2GetInitiatorsById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/hostsInitiatorId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleInitiatorDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K Nimble Initiators identified by {hostInitiatorId}",
        "tags": [
          "host-initiators"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/mail-settings": {
      "put": {
        "description": "Edit Nimble Mail Settings of Nimble / Alletra 6K",
        "operationId": "DeviceType2EditMailSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleMailSettingInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit Nimble Mail Settings of Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/network-interfaces": {
      "get": {
        "description": "Get all network interfaces details by Nimble / Alletra 6K",
        "operationId": "GetDeviceType2NetworkInterfaces",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/networkInterfaceFilterParam"
          },
          {
            "$ref": "#/components/parameters/networkInterfaceSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleNetworkInterfaceList"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all network interfaces details by Nimble / Alletra 6K",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/network-interfaces/{networkInterfaceId}": {
      "get": {
        "description": "Get all network interfaces details by Nimble / Alletra 6K identified by {networkInterfaceId}",
        "operationId": "GetDeviceType2NetworkInterfaceById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/networkInterfaceId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleNetworkInterfaceWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all network interfaces details by Nimble / Alletra 6K identified  by {networkInterfaceId}",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/network-settings": {
      "get": {
        "description": "Get all network settings details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllNetworkSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/networkSettingFilterParam"
          },
          {
            "$ref": "#/components/parameters/networkSettingSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleNetworkSettingsList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage group object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all network settings details by Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/network-settings/{networkSettingId}": {
      "get": {
        "description": "Get details of Nimble / Alletra 6K network setting identified by {networkSettingId}",
        "operationId": "DeviceType2GetNetworkSettingById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleNetworkSettingID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleNetworkSettingsDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "network settings object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K network setting identified by {networkSettingId}",
        "tags": [
          "system-settings"
        ]
      },
      "put": {
        "description": "Edit Nimble / Alletra 6K network setting identified by {networkSettingId}",
        "operationId": "DeviceType2EditNetworkSettingById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleNetworkSettingID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditNetworkSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit Nimble / Alletra 6K network setting identified by {networkSettingId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/performance-history": {
      "get": {
        "description": "Get performance trend data for a storage system Nimble / Alletra 6K",
        "operationId": "DeviceType2GetStorageSystemPerformanceHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/timeIntervalMin"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sysPerformanceHistory"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get performance trend data for a storage system Nimble / Alletra 6K",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/performance-policies": {
      "get": {
        "description": "Get all performance-policies details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllPerformancePolicies",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/performancePolicyFilterParam"
          },
          {
            "$ref": "#/components/parameters/performancePolicySortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimblePerformancePolicyList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all performance-policies details by Nimble / Alletra 6K",
        "tags": [
          "performance-templates"
        ]
      },
      "post": {
        "description": "Create Nimble / Alletra 6K performance policy in a system identified by {systemId}",
        "operationId": "DeviceType2PerformancePolicyCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreatePerformancePolicyInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create Nimble / Alletra 6K performance policy in a system identified by {systemId}",
        "tags": [
          "performance-templates"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/performance-policies/{performancePolicyId}": {
      "delete": {
        "description": "Remove performance-policies identified by {performancePolicyId} from Nimble / Alletra 6K",
        "operationId": "DeviceType2RemovePerfPolicyId",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/performancePolicyId"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove performance-policies identified by {performancePolicyId} from Nimble / Alletra 6K",
        "tags": [
          "performance-templates"
        ]
      },
      "get": {
        "description": "Get details of Nimble / Alletra 6K performance-policy identified by {performancePolicyId}",
        "operationId": "DeviceType2GetPerformancePolicyById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/performancePolicyId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimblePerformancePolicyDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K performance-policy identified by {performancePolicyId}",
        "tags": [
          "performance-templates"
        ]
      },
      "put": {
        "description": "Edit details of Nimble / Alletra 6K performance policy identified by {performancePolicyId}",
        "operationId": "DeviceType2PerformancePolicyEdit",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/performancePolicyId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditPerformancePolicyInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit details of Nimble / Alletra 6K performance policy identified by {performancePolicyId}",
        "tags": [
          "performance-templates"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/ports": {
      "get": {
        "description": "Get all ports details of Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllPorts",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/portFilterParam"
          },
          {
            "$ref": "#/components/parameters/portSortParam"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimblePortsList"
                }
              }
            },
            "description": "Success",
            "headers": {
              "ETag": {
                "description": "Current entity tag for the selected resource",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all ports details of Nimble / Alletra 6K",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/ports/{portId}": {
      "get": {
        "description": "Get details of Nimble / Alletra 6K Port identified by {portId}.",
        "operationId": "DeviceType2GetPortById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimblePortsID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimblePortDetails"
                }
              }
            },
            "description": "Success",
            "headers": {
              "ETag": {
                "description": "Current entity tag for the selected resource",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K Port identified by {portId}. Fibre_channel_interfaces attributes will be shown for Fibre_channel_interface ports. Network_interfaces attributes will be shown for Network_interface ports.",
        "tags": [
          "ports"
        ]
      },
      "put": {
        "description": "Edit Nimble FC Port of Nimble / Alletra 6K",
        "operationId": "DeviceType2EditFCPort",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimblePortID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditFCInterfaceInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit Nimble FC Port of Nimble / Alletra 6K",
        "tags": [
          "ports"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/protection-templates": {
      "get": {
        "description": "Get all protection-templates details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllProtectionTemplates",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/protectionTemplateFilterParam"
          },
          {
            "$ref": "#/components/parameters/protectionTemplateSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleProtectionTemplateList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all protection-templates details by Nimble / Alletra 6K",
        "tags": [
          "protection-templates"
        ]
      },
      "post": {
        "description": "Create protection template on Nimble / Alletra 6K in system identified by {systemId}",
        "operationId": "DeviceType2CreateProtectionTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreateProtectionTemplateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create protection template on Nimble / Alletra 6K in system identified by {systemId}",
        "tags": [
          "protection-templates"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/protection-templates/{protectionTemplateId}": {
      "get": {
        "description": "Get details of Nimble / Alletra 6K protection-templates identified by {protectionTemplateId}",
        "operationId": "DeviceType2GetProtectionTemplateById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/protectionTemplateId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleProtectionTemplateDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K protection-templates identified by {protectionTemplateId}",
        "tags": [
          "protection-templates"
        ]
      },
      "put": {
        "description": "Edit  details of Nimble / Alletra 6K Protection-templates identified by {protectionTemplateId}",
        "operationId": "DeviceType2EditProtectionTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/protectionTemplateId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditProtectionTemplateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit details of Nimble / Alletra 6K Protection-templates identified by {protectionTemplateId}",
        "tags": [
          "protection-templates"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/protection-templates/remove": {
      "post": {
        "description": "Remove protection templates for Nimble / Alletra 6K",
        "operationId": "DeviceType2RemoveProtectionTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProtectionTemplates"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove protection templates for Nimble / Alletra 6K",
        "tags": [
          "protection-templates"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/provisioning": {
      "post": {
        "description": "Create provisioning workflow for a Nimble / Alletra 6K storage system identified by {systemId}",
        "operationId": "DeviceType2ProvisioningWorklow",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreateVolumesWorkflowInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create provisioning workflow for a Nimble / Alletra 6K storage system identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/provisioning-review": {
      "post": {
        "description": "Provisioning review for a storage system Nimble / Alletra 6K",
        "operationId": "DeviceType2ProvisioningReview",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleHostReviewInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleHostReviewOutput"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Provisioning review for a storage system Nimble / Alletra 6K",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/shelves": {
      "get": {
        "description": "Get all shelves details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllShelves",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/shelfFilterParam"
          },
          {
            "$ref": "#/components/parameters/shelfSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleShelfList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all shelves details by Nimble / Alletra 6K",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/shelves/{shelfId}": {
      "get": {
        "description": "Get details of Nimble / Alletra 6K Shelf identified by {shelfId}",
        "operationId": "DeviceType2GetShelfById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/shelfId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleShelfDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K Shelf identified by {shelfId}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/shelves/{shelfId}/actions/locate": {
      "post": {
        "description": "Locate chassis of Nimble / Alletra 6K shelf identified by {shelfId}",
        "operationId": "DeviceType2LocateShelfChassis",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleShelfID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleShelfLocateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Locate chassis of Nimble / Alletra 6K shelf identified by {shelfId}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/shelves/actions/activate": {
      "put": {
        "description": "Activate shelves of a Nimble / Alletra 6K storage system identified by {systemId}",
        "operationId": "DeviceType2ActivateShelf",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleShelvesActivateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Activate shelves of a Nimble / Alletra 6K storage system identified by {systemId}",
        "tags": [
          "shelves"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/snapshot-collections/{snapshotCollectionId}/actions/clone": {
      "post": {
        "description": "Perform action clone Nimble / Alletra 6K on a snapshot collection identified by {snapshotCollectionId} in system identified by {systemId}",
        "operationId": "DeviceType2CloneActionOnSnapshotCollections",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleSnapshotCollectionID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCloneSnapshotCollectionsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Perform action clone Nimble / Alletra 6K on a snapshot collection identified by {snapshotCollectionId} in system identified by {systemId}",
        "tags": [
          "restore-points"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/snapshots/actions/update": {
      "post": {
        "description": "Edit Multiple Nimble / Alletra 6K snapshots in system identified by {systemId}",
        "operationId": "DeviceType2EditSnapshotById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditMultipleSnapshotInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit Multiple Nimble / Alletra 6K snapshots in system identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/storage-pools": {
      "get": {
        "description": "Get all pools details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllPoolDetails",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/poolFilterParam"
          },
          {
            "$ref": "#/components/parameters/poolSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimblePoolsList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage group object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all pools details by Nimble / Alletra 6K",
        "tags": [
          "storage-pools"
        ]
      },
      "post": {
        "description": "Create storage pool from Nimble / Alletra 6K  system identified by {systemId}",
        "operationId": "DeviceType2CreatePool",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreatePoolInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create storage pool from Nimble / Alletra 6K  system identified by {systemId}",
        "tags": [
          "storage-pools"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/storage-pools/{storagePoolId}": {
      "delete": {
        "description": "Delete pool identified by {storagePoolId} from Nimble / Alletra 6K",
        "operationId": "DeviceType2RemovePoolById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimblePoolID"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete pool identified by {storagePoolId} from Nimble / Alletra 6K",
        "tags": [
          "storage-pools"
        ]
      },
      "get": {
        "description": "Get details of Nimble / Alletra 6K pool identified by {storagePoolId}",
        "operationId": "DeviceType2GetPoolDetailById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimblePoolID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimblePoolDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Pool object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K pool identified by {storagePoolId}",
        "tags": [
          "storage-pools"
        ]
      },
      "put": {
        "description": "Edit details of Nimble / Alletra 6K pool identified by {storagePoolId}",
        "operationId": "DeviceType2EditPoolDetailById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimblePoolID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditPoolInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit details of Nimble / Alletra 6K pool identified by {storagePoolId}",
        "tags": [
          "storage-pools"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/storage-pools/{storagePoolId}/actions/merge": {
      "post": {
        "description": "Merge pool identified by {storagePoolId} from Nimble / Alletra 6K",
        "operationId": "DeviceType2MergePoolById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimblePoolID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleMergePoolInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Merge pool identified by {storagePoolId} from Nimble / Alletra 6K",
        "tags": [
          "storage-pools"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/storage-pools/{storagePoolId}/capacity-history": {
      "get": {
        "description": "Get storage pool capacity trend data of Nimble / Alletra 6K storage pool identified by {storagePoolId}",
        "operationId": "DeviceType2GetPoolCapacityHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleStoragePoolID"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/timeIntervalMin"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/poolCapacityHistory"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get storage pool capacity trend data of Nimble / Alletra 6K storage pool identified by {storagePoolId}",
        "tags": [
          "storage-pools"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/storage-pools/{storagePoolId}/performance-history": {
      "get": {
        "description": "Get performance trend data of Nimble / Alletra 6K storage pool identified by {storagePoolId}",
        "operationId": "DeviceType2GetPoolPerformanceHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleStoragePoolID"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/timeIntervalMin"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/storagePoolPerformanceHistory"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get performance trend data of Nimble / Alletra 6K storage pool identified by {storagePoolId}",
        "tags": [
          "storage-pools"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/storage-pools/{storagePoolId}/performance-statistics": {
      "get": {
        "description": "Get performance statistics of Nimble / Alletra 6K storage pool identified by {storagePoolId}",
        "operationId": "DeviceType2GetPoolPerformanceStatistics",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleStoragePoolID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/storagePoolPerformance"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get performance statistics of Nimble / Alletra 6K storage pool identified by {storagePoolId}",
        "tags": [
          "storage-pools"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings": {
      "put": {
        "description": "Edit system settings of Nimble / Alletra 6K",
        "operationId": "DeviceType2EditSystemSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditSystemSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit system settings of Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/replication-partners": {
      "get": {
        "description": "Get all replication-partners details for Nimble / Alletra 6K",
        "operationId": "DeviceType2GetReplicationPartners",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/nimbleReplicationPartnerFilterParam"
          },
          {
            "$ref": "#/components/parameters/nimbleReplicationPartnerSortParam"
          },
          {
            "$ref": "#/components/parameters/indirectReplicationPartner"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleReplicationPartnersList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all replication-partners details for Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Create replication partner pair for Nimble / Alletra 6K",
        "operationId": "DeviceType2CreateReplicationPartners",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreateReplicationPartnerInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create replication partner pair for Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/replication-partners/{replicationpartnerId}": {
      "get": {
        "description": "Get details of Nimble / Alletra 6K replication-partner identified by {replicationpartnerId}",
        "operationId": "DeviceType2GetReplicationPartnersById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleReplicationPartnerID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleReplicationPartnerDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K replication-partner identified by {replicationpartnerId}",
        "tags": [
          "system-settings"
        ]
      },
      "put": {
        "description": "Edit a replication partner for Nimble / Alletra 6K given by replicationpartnerId",
        "operationId": "DeviceType2EditReplicationPartnersById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleReplicationPartnerID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditReplicationPartnerInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit a replication partner for Nimble / Alletra 6K given by replicationpartnerId",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/replication-partners/actions/pause": {
      "post": {
        "description": "Pause the replication pair of Nimble / Alletra 6K",
        "operationId": "DeviceType2PauseReplicationPartner",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PauseResumeNimbleReplicationPartnerPairInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Pause the replication pair of Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/replication-partners/actions/resume": {
      "post": {
        "description": "Resume the replication pair of Nimble / Alletra 6K",
        "operationId": "DeviceType2ResumeReplicationPartner",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PauseResumeNimbleReplicationPartnerPairInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Resume the replication pair of Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/replication-partners/actions/test": {
      "post": {
        "description": "Test the replication partner pair of Nimble / Alletra 6K",
        "operationId": "DeviceType2TestReplicationConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PauseResumeNimbleReplicationPartnerPairInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponseReplication"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Test the replication partner pair of Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/replication-partners/remove": {
      "post": {
        "description": "Remove list of replication partner for Nimble / Alletra 6K",
        "operationId": "DeviceType2RemoveReplicationPartner",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveReplicationPartners"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove list of replication partner for Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/witnesses": {
      "get": {
        "description": "Get all witness configuration details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetWitnesses",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/nimbleWitnessFilterParam"
          },
          {
            "$ref": "#/components/parameters/nimbleWitnessSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleWitnessesList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all witness configuration details by Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      },
      "post": {
        "description": "Create a new witness configuration Nimble / Alletra 6K",
        "operationId": "DeviceType2CreateWitness",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreateWitnessInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create a new witness configuration Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/witnesses/{witnessId}": {
      "delete": {
        "description": "Remove witness identified by {witnessId} from Nimble / Alletra 6K",
        "operationId": "DeviceType2RemoveWitnessesById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleWitnessId"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove witness identified by {witnessId} from Nimble / Alletra 6K",
        "tags": [
          "system-settings"
        ]
      },
      "get": {
        "description": "Get details of Nimble / Alletra 6K witness configuration identified by {witnessId}",
        "operationId": "DeviceType2GetWitnessesById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleWitnessID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleWitnessDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K witness configuration identified by {witnessId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/witnesses/{witnessId}/actions/test": {
      "post": {
        "description": "Test and validate the witness configuration between the host identified by {witnessId} from Nimble / Alletra 6K identified by {systemId}",
        "operationId": "DeviceType2TestWitnessesById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleWitnessId"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleTestWitnessResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Test and validate the witness configuration between the host identified by {witnessId} from Nimble / Alletra 6K identified by {systemId}",
        "tags": [
          "system-settings"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/uninitialized-arrays": {
      "post": {
        "description": "Get all uninitialized arrays details by Nimble / Alletra 6K",
        "operationId": "GetDeviceType2UninitializedArrays",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleUninitializedArrayResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all uninitialized arrays details by Nimble / Alletra 6K",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/uninitialized-arrays/{uninitializedArrayId}": {
      "post": {
        "description": "Get uninitialized arrays details by Nimble / Alletra 6K identified  by {uninitializedArrayId}",
        "operationId": "GetDeviceType2UninitializedArrayById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/uninitializedArrayId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleUninitializedArrayInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleUninitializedArrayWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get  uninitialized arrays details by Nimble / Alletra 6K  identified  by {uninitializedArrayId}",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections": {
      "get": {
        "description": "Get all volume-collections details by Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllVolumeCollections",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/volumeCollectionFilterParam"
          },
          {
            "$ref": "#/components/parameters/volumeCollectionSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleVolumeCollectionList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all volume-collections details by Nimble / Alletra 6K",
        "tags": [
          "volume-sets"
        ]
      },
      "post": {
        "description": "Create Nimble / Alletra 6K volume collection in system identified by {systemId}",
        "operationId": "DeviceType2VolumeCollectionCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreateVolumeCollectionInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create Nimble / Alletra 6K volume collection in system identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}": {
      "delete": {
        "description": "Remove Volume-collection identified by {volumeCollectionId} from Nimble / Alletra 6K",
        "operationId": "DeviceType2RemoveVolumeCollectionById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeCollectionID"
          },
          {
            "$ref": "#/components/parameters/ForceDelVolumeCollection"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove Volume-collection identified by {volumeCollectionId} from Nimble / Alletra 6K",
        "tags": [
          "volume-sets"
        ]
      },
      "get": {
        "description": "Get details of Nimble / Alletra 6K volume-collections identified by {volumeCollectionId}",
        "operationId": "DeviceType2GetVolumeCollectionById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/volumeCollectionId"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleVCollectionDetailsWithRequestUri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K volume-collections identified by {volumeCollectionId}",
        "tags": [
          "volume-sets"
        ]
      },
      "put": {
        "description": "Edit  details of Nimble / Alletra 6K Volume-collections identified by {volumeCollectionId}",
        "operationId": "DeviceType2EditVolumeCollectionById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/volumeCollectionId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditVolumeCollectionInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit  details of Nimble / Alletra 6K Volume-collections identified by {volumeCollectionId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/actions/abort-handover": {
      "post": {
        "description": "Perform abort handover action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "operationId": "DeviceType2ActiononVolumeCollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeCollectionID"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Perform abort handover action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/actions/add-volumes": {
      "post": {
        "description": "Add volumes to Nimble / Alletra 6K volumes collection in system identified by {systemId",
        "operationId": "DeviceType2AddVolumesToVolumeCollections",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/volumeCollectionId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleAddVolumeToVolumeCollectionInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Add volumes to Nimble / Alletra 6K volumes collection in system identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/actions/demote": {
      "post": {
        "description": "Perform demote action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "operationId": "DeviceType2ActionOnVolumeCollectionId",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeCollectionID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleDemoteVolumeCollectionsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Perform demote action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/actions/handover": {
      "post": {
        "description": "Perform handover action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "operationId": "DeviceType2ActionOnVolumeCollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeCollectionID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleHandoverVolumeCollectionsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Perform handover action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/actions/promote": {
      "post": {
        "description": "Perform promote action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "operationId": "DeviceType2PromoteActionOnVolumeCollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeCollectionID"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Perform promote action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/actions/remove-volumes": {
      "post": {
        "description": "Remove volumes from Nimble / Alletra 6K volumes collection in system identified by {systemId}",
        "operationId": "DeviceType2RemoveVolumesFromVolumeCollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/volumeCollectionId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleRemoveVolumeFromVolumeCollectionInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove volumes from Nimble / Alletra 6K volumes collection in system identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/snapshot-collections": {
      "get": {
        "description": "Get all snapshot collections' details of Nimble / Alletra 6K Volume collection identified by {volumeCollectionId}",
        "operationId": "DeviceType2GetSnapshotsByVolumeCollectionId",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/snapshotCollectionFilterParam"
          },
          {
            "$ref": "#/components/parameters/snapshotCollectionSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeCollectionID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleSnapshotCollectionList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all snapshot collections' details of Nimble / Alletra 6K Volume collection identified by {volumeCollectionId}",
        "tags": [
          "volume-sets"
        ]
      },
      "post": {
        "description": "Create Nimble / Alletra 6K snapshot collection in system identified by {systemId}",
        "operationId": "DeviceType2CreateSnapshotCollections",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeCollectionID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreateSnapshotCollectionsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create Nimble / Alletra 6K snapshot collection in system identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/snapshot-collections/{snapshotCollectionId}": {
      "get": {
        "description": "Get details of snapshot collection of Nimble / Alletra 6K Volume collection identified by {volumeCollectionId} by {snapshotId}",
        "operationId": "DeviceType2GetSnapshotCollectionsById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeCollectionID"
          },
          {
            "$ref": "#/components/parameters/NimbleSnapshotCollectionID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleSnapshotCollectionDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of snapshot collection of Nimble / Alletra 6K Volume collection identified by {volumeCollectionId} by {snapshotId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/snapshot-collections/remove": {
      "post": {
        "description": "Remove multiple snapshot collections identified by {volumeCollectionId} from Nimble / Alletra 6K",
        "operationId": "DeviceType2RemoveSnapShotCollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeCollectionID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSnapshotCollectionInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove multiple snapshot collections identified by {volumeCollectionId} from Nimble / Alletra 6K",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/snapshot-collections/update": {
      "post": {
        "description": "Perform offline/online action on  snapshot collections of Nimble / Alletra 6K and associated with volume collection {volumeCollectionId}  in the system identified by {systemId}",
        "operationId": "DeviceType2ActionOnSnapshotCollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeCollectionID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleUpdateSnapshotCollectionsStateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Perform offline/online action on  snapshot collections of Nimble / Alletra 6K and associated with volume collection {volumeCollectionId}  in the system identified by {systemId}",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes": {
      "get": {
        "description": "Get all volumes details for Nimble / Alletra 6K",
        "operationId": "DeviceType2GetAllVolumes",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/nimblevolumeFilterParam"
          },
          {
            "$ref": "#/components/parameters/nimblevolumeSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleVolumesList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all volumes details for Nimble / Alletra 6K",
        "tags": [
          "volumes"
        ]
      },
      "post": {
        "description": "Create Nimble / Alletra 6K volume in system identified by {systemId}",
        "operationId": "DeviceType2VolumesCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreateVolumeInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create Nimble / Alletra 6K volume in system identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}": {
      "delete": {
        "description": "Remove volume identified by {volumeId} from Nimble / Alletra 6K",
        "operationId": "DeviceType2RemoveVolumeById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          },
          {
            "$ref": "#/components/parameters/OfflineDelVolume"
          },
          {
            "$ref": "#/components/parameters/ForceDelVolume"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove volume identified by {volumeId} from Nimble / Alletra 6K",
        "tags": [
          "volumes"
        ]
      },
      "get": {
        "description": "Get details of Nimble / Alletra 6K Volume identified by {volumeId}",
        "operationId": "DeviceType2GetVolumeById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleVolumeDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Nimble / Alletra 6K Volume identified by {volumeId}",
        "tags": [
          "volumes"
        ]
      },
      "put": {
        "description": "Edit  details of Nimble / Alletra 6K Volume identified by {volumeId}",
        "operationId": "DeviceType2EditVolumeById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleEditVolumeInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Edit  details of Nimble / Alletra 6K Volume identified by {volumeId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/actions/move": {
      "post": {
        "description": "Move Nimble / Alletra 6K volume identified by {volumeId} to another pool.",
        "operationId": "DeviceType2MoveVolume",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleMoveVolumeToAnotherPoolInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Move Nimble / Alletra 6K volume identified by {volumeId} to another pool.",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/actions/restore": {
      "post": {
        "description": "Restore Nimble / Alletra 6K volume identified by {volumeId} from a previous snapshot.",
        "operationId": "DeviceType2RestoreVolumeById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleRestoreVolumeInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Restore Nimble / Alletra 6K volume identified by {volumeId} from a previous snapshot.",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/capacity-history": {
      "get": {
        "description": "Get volume capacity trend data of Nimble / Alletra 6K Volume identified by {volumeId}",
        "operationId": "DeviceType2GetVolumeCapacityHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/timeIntervalMin"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nimblevolumeCapacityHistory"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get volume capacity trend data of Nimble / Alletra 6K Volume identified by {volumeId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/clone": {
      "post": {
        "description": "Create Nimble / Alletra 6K clone volume identified by {volumeId}.",
        "operationId": "DeviceType2CloneVolumeById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCloneVolumeInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create Nimble / Alletra 6K clone volume identified by {volumeId}.",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/export": {
      "post": {
        "description": "Configure access for volume identified by {volumeId} from Nimble / Alletra 6K identified by {systemId}",
        "operationId": "DeviceType2VolumesExport",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/exportInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Configure access for volume identified by {volumeId} from Nimble / Alletra 6K identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/performance-history": {
      "get": {
        "description": "Get performance trend data of Nimble / Alletra 6K Volume identified by {id}",
        "operationId": "DeviceType2GetVolumePerformanceHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/timeIntervalMin"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nimblevolumePerformanceHistory"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get performance trend data of Nimble / Alletra 6K Volume identified by {id}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/performance-statistics": {
      "get": {
        "description": "Get performance statistics of Nimble / Alletra 6K Volume identified by {volumeId}",
        "operationId": "DeviceType2GetVolumePerformanceStatistics",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volPerformance"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get performance statistics of Nimble / Alletra 6K Volume identified by {volumeId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/snapshots": {
      "get": {
        "description": "Get all snapshots' details of Nimble / Alletra 6K Volume identified by {volumeId}",
        "operationId": "DeviceType2GetAllSnapshotsByVolumeId",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/snapshotFilterParam"
          },
          {
            "$ref": "#/components/parameters/snapshotSortParam"
          },
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleSnapshotList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all snapshots' details of Nimble / Alletra 6K Volume identified by {volumeId}",
        "tags": [
          "volumes"
        ]
      },
      "post": {
        "description": "Create Nimble / Alletra 6K snapshot in system identified by {systemId}",
        "operationId": "DeviceType2SnapshotCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NimbleCreateSnapshotInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create Nimble / Alletra 6K snapshot in system identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/snapshots/{snapshotId}": {
      "delete": {
        "description": "Remove Nimble / Alletra 6K snapshot in system identified by {snapshotId}",
        "operationId": "DeviceType2RemoveSnapshotById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          },
          {
            "$ref": "#/components/parameters/NimbleSnapshotID"
          },
          {
            "$ref": "#/components/parameters/forceDeleteSnapshot"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Remove Nimble / Alletra 6K snapshot in system identified by {snapshotId}",
        "tags": [
          "volumes"
        ]
      },
      "get": {
        "description": "Get details of snapshot of Nimble / Alletra 6K Volume identified by {volumeId} by {snapshotId}",
        "operationId": "DeviceType2GetSnapshotById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          },
          {
            "$ref": "#/components/parameters/NimbleSnapshotID"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NimbleSnapshotDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of snapshot of Nimble / Alletra 6K Volume identified by {volumeId} by {snapshotId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/snapshots/{snapshotId}/export": {
      "post": {
        "description": "Configure access for snapshot identified by {snapshotId} from Nimble / Alletra 6K identified by {systemId}",
        "operationId": "DeviceType2SnapshotExport",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          },
          {
            "$ref": "#/components/parameters/NimbleSnapshotID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/exportInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Configure access for snapshot identified by {snapshotId} from Nimble / Alletra 6K identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/snapshots/{snapshotId}/un-export": {
      "post": {
        "description": "Delete access for snapshot identified by {snapshotId} from Nimble / Alletra 6K identified by {systemId}",
        "operationId": "DeviceType2DeleteSnapshotAccessById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          },
          {
            "$ref": "#/components/parameters/NimbleSnapshotID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/unExportInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete access for snapshot identified by {snapshotId} from Nimble / Alletra 6K identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/un-export": {
      "post": {
        "description": "Delete access for volume identified by {volumeId} from Nimble / Alletra 6K identified by {systemId}",
        "operationId": "DeviceType2DeleteVolumeAccessById",
        "parameters": [
          {
            "$ref": "#/components/parameters/storageSystemID"
          },
          {
            "$ref": "#/components/parameters/NimbleVolumeID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/unExportInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Delete access for volume identified by {volumeId} from Nimble / Alletra 6K identified by {systemId}",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/storage-systems/provisioning-recommendations": {
      "post": {
        "description": "provisioning recommendations",
        "operationId": "ProvisioningRecommendations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recommendationInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/storageSystemRecommendationList"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "provisioning recommendations",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/storage-systems/storage-types": {
      "get": {
        "description": "Get all device types",
        "operationId": "GetDeviceType",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/storageTypes"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all device types",
        "tags": [
          "storage-systems"
        ]
      }
    },
    "/api/v1/tasks": {
      "get": {
        "description": "Returns a list of tasks that are visible to the user. The response can\nbe paged by using the limit\nand offset query parameters and filtered, sorted and ordered by using\nthe filter, sortby and orderby query parameters.\n",
        "operationId": "ListTasks",
        "parameters": [
          {
            "description": "The offset query parameter should be used in conjunction with limit\nfor paging, e.g.: offset=30&&limit=10. The offset is the number of\nitems from the beginning of the result set to the first item\nincluded in the response.\n",
            "example": 30,
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The limit query parameter should be used in conjunction with offset\nfor paging, e.g.: offset=30&&limit=10. The limit is the maximum\nnumber of items to include in the response.\n",
            "example": 10,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The expression to filter responses.",
            "example": "owner.name eq fred@example.com",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskList"
                }
              }
            },
            "description": "Tasks list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksBadRequest"
                }
              }
            },
            "description": "An invalid request was received."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksUnauthenticated"
                }
              }
            },
            "description": "The request did not provide valid authentication."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksForbidden"
                }
              }
            },
            "description": "The requesting user was not permitted to access this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksInternalServerError"
                }
              }
            },
            "description": "An internal error occurred."
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksServiceUnavailable"
                }
              }
            },
            "description": "Service unavailable."
          }
        },
        "summary": "Returns a list of tasks accessible by the user",
        "tags": [
          "tasks"
        ]
      }
    },
    "/api/v1/tasks/{id}": {
      "get": {
        "description": "Returns the task with the given id.",
        "operationId": "GetTask",
        "parameters": [
          {
            "description": "The UUID of the object",
            "example": "c1a0eb78-41a0-4151-93b2-f057ffeca3f3",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            },
            "description": "Single Task"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksBadRequest"
                }
              }
            },
            "description": "An invalid request was received."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksUnauthenticated"
                }
              }
            },
            "description": "The request did not provide valid authentication."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksForbidden"
                }
              }
            },
            "description": "The requesting user was not permitted to access this resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksNotFound"
                }
              }
            },
            "description": "A task with the provided ID was not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksInternalServerError"
                }
              }
            },
            "description": "An internal error occurred."
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksServiceUnavailable"
                }
              }
            },
            "description": "Service unavailable."
          }
        },
        "summary": "Returns details of a specific task",
        "tags": [
          "tasks"
        ]
      }
    },
    "/api/v1/volume-sets": {
      "get": {
        "description": "Get all volume sets",
        "operationId": "VolumesetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/volumeSetFilterParam"
          },
          {
            "$ref": "#/components/parameters/volumeSetSortParam"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fleetVolumeSetList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Pool object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all volume-sets",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/volume-sets/{id}": {
      "get": {
        "description": "Get volume-set identified by id",
        "operationId": "VolumesetGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/volumeSetUid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fleetVolumeSetDetails"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Pool object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get volume-set identified by id",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/volume-sets/{id}/volumes": {
      "get": {
        "description": "Get volumes  identified by volume set id",
        "operationId": "VolumesetGetByvolumesetId",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/volumeSetUid"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/volumeFilterParam"
          },
          {
            "$ref": "#/components/parameters/volumeSortParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fleetVolumeset"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Pool object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get volumes identified by volume set id",
        "tags": [
          "volume-sets"
        ]
      }
    },
    "/api/v1/volumes": {
      "get": {
        "description": "Get all volumes",
        "operationId": "VolumesList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/volumeFilterParam"
          },
          {
            "$ref": "#/components/parameters/volumeSortParam"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fleetVolumesList"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get all volumes",
        "tags": [
          "volumes"
        ]
      }
    },
    "/api/v1/volumes/{id}": {
      "get": {
        "description": "Get details of Volume identified by {id}",
        "operationId": "VolumeGetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/uuidVolume"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fleetVolumeDetails"
                }
              }
            },
            "description": "Success"
          },
          "304": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not Modified"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Storage system object not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Internal / unexpected error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Appliance in maintenance mode"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get details of Volume identified by {id}",
        "tags": [
          "volumes"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "ApplicationServerID": {
        "description": "Identifier of application server. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000000007",
        "in": "path",
        "name": "applicationServerId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "CascadeDelVol": {
        "allowReserved": true,
        "description": "Delete snapshot and volume",
        "example": true,
        "in": "query",
        "name": "cascade",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "FilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter application servers by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "ForceDelVolume": {
        "allowReserved": true,
        "description": "Make volume and associated snapshots offline, stop protection and delete.",
        "example": true,
        "in": "query",
        "name": "force",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "ForceDelVolumeCollection": {
        "allowReserved": true,
        "description": "Forceful delete volume collection option.",
        "example": true,
        "in": "query",
        "name": "force",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "ForceDelete": {
        "allowReserved": true,
        "description": "Forceful delete option",
        "example": true,
        "in": "query",
        "name": "force",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "IndirectReplicationPartner": {
        "description": "Include indirect partners. Indirect partners are excluded by default. This parameter cannot be used with other query parameters.",
        "example": true,
        "in": "query",
        "name": "includeIndirectPartners",
        "schema": {
          "type": "boolean"
        }
      },
      "NimbleAccessControlRecordID": {
        "description": "Identifier of Access Control Record. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000000007",
        "in": "path",
        "name": "accessControlRecordId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleApplicationServerID": {
        "description": "Identifier of application server. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000000007",
        "in": "path",
        "name": "applicationServerId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleArrayID": {
        "description": "ID of the array.",
        "example": "001df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "arrayId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleDiskId": {
        "description": "Identifier of disk. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "diskId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleFCConfigId": {
        "description": "Identifier of fibre channel config. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "fcConfigId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleFCSessionId": {
        "description": "ID of the Fibre Channel Session. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "fcSessionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleHealthStatusID": {
        "description": "Identifier of health status. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "healthStatusId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleHostInitiatorGroupId": {
        "description": "Identifier of initiator group. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "hostInitiatorGroupId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleHostInitiatorID": {
        "description": "Identifier of Host Initiator. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000000007",
        "in": "path",
        "name": "hostInitiatorId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleNetworkSettingID": {
        "description": "Identifier of network setting. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "networkSettingId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimblePoolID": {
        "description": "Identifier of pool. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "storagePoolId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimblePortID": {
        "description": "Identifier of port. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000000007",
        "in": "path",
        "name": "portId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimblePortsID": {
        "description": "Identifier of port. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000000007",
        "in": "path",
        "name": "portId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleReplicationPartnerID": {
        "description": "Identifier of replicationpartner. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "replicationpartnerId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleShelfID": {
        "description": "ID of the shelf.",
        "example": "001df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "shelfId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleSnapshotCollectionID": {
        "description": "Identifier of snapshot Collection. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000000007",
        "in": "path",
        "name": "snapshotCollectionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleSnapshotID": {
        "description": "Identifier of snapshot. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb17000000000000000000000008",
        "in": "path",
        "name": "snapshotId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleStoragePoolID": {
        "description": "Identifier of storage pool. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000000007",
        "in": "path",
        "name": "storagePoolId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleVolID": {
        "description": "Identifier of volume. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000000007",
        "in": "path",
        "name": "volumeId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleVolumeCollectionID": {
        "description": "Identifier of Volume Collection. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000000007",
        "in": "path",
        "name": "volumeCollectionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleVolumeID": {
        "description": "Identifier of volume. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000000007",
        "in": "path",
        "name": "volumeId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleWitnessID": {
        "description": "Identifier of witness. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004007",
        "in": "path",
        "name": "witnessId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NimbleWitnessId": {
        "description": "Identifier of witness. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "witnessId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "OfflineDelVolume": {
        "allowReserved": true,
        "deprecated": true,
        "description": "Make volume offline and delete. Deprecated - Use force instead of offline.",
        "example": true,
        "in": "query",
        "name": "offline",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "PrimeraSnapsetID": {
        "description": "Identifier of snapset.",
        "example": "a7c4e6593f51d0b98f0e40d7e6df04fd",
        "in": "path",
        "name": "snapsetId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "PrimeraSnapshotID": {
        "description": "Identifier of snapshot.",
        "example": "a7c4e6593f51d0b98f0e40d7e6df04fd",
        "in": "path",
        "name": "snapshotId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ReplicationPartnerFilterParam": {
        "allowReserved": true,
        "description": "oData query to filter replication partners by key.",
        "example": "systemId eq 7CE751P312",
        "in": "query",
        "name": "filter",
        "schema": {
          "type": "string"
        }
      },
      "ReplicationPartnerSortParam": {
        "allowReserved": true,
        "description": "oData query to sort nodes resource by key.",
        "example": "systemId desc",
        "in": "query",
        "name": "sort",
        "schema": {
          "type": "string"
        }
      },
      "SortParam": {
        "allowReserved": true,
        "description": "oData query to sort application servers by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "UnExportDelVol": {
        "allowReserved": true,
        "description": "UnExport Host,HostSet and delete volume",
        "example": true,
        "in": "query",
        "name": "unExport",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "WitnessFilterParam": {
        "allowReserved": true,
        "description": "oData query to filter witness by key.",
        "example": "id eq afb4961e47212e5bc88dd35db5be5c83",
        "in": "query",
        "name": "filter",
        "schema": {
          "type": "string"
        }
      },
      "WitnessSortParam": {
        "allowReserved": true,
        "description": "oData query to sort witness resource by key.",
        "example": "id desc",
        "in": "query",
        "name": "sort",
        "schema": {
          "type": "string"
        }
      },
      "accessControlRecordFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter Access Control Record  by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "accessControlRecordId": {
        "description": "ID of the Access Control Record . A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "accessControlRecordId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "accessControlRecordSortParam": {
        "allowReserved": true,
        "description": "oData query to sort Access Control Record  resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "alarmFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter Alarms by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "alarmId": {
        "description": "ID of the Alarm. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "alarmId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "alarmSortParam": {
        "allowReserved": true,
        "description": "Data query to sort Alarm resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "appSetFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter application-sets by Key.",
        "example": "uid eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "appSetSortParam": {
        "allowReserved": true,
        "description": "Lucene query to sort application-sets by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "appsetUid": {
        "description": "UID of the applicationset",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "appsetId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "arrayFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter array by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "arraySortParam": {
        "allowReserved": true,
        "description": "oData query to sort array resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "cageId": {
        "description": "cage ID",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "cageId",
        "required": true,
        "schema": {
          "format": "int64",
          "type": "string"
        }
      },
      "certificateFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter Certificates by Key.",
        "example": "service eq qw-client",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "certificatesId": {
        "description": "ID of the certificate",
        "example": "99691e493067b2b2acf1774fc0ccc011",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "cloneUid": {
        "description": "UID of the clone",
        "example": "a7c4e6593f51d0b98f0e40d7e6df04fd",
        "in": "path",
        "name": "cloneId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "contactId": {
        "description": "Unique Identifier of the alert contact",
        "example": "a4c78226-69cd-b9e7-af3e-445ca8f8a655",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "controllerFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter controllers by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "controllerId": {
        "description": "ID of the controller. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "controllerId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "controllerSortParam": {
        "allowReserved": true,
        "description": "oData query to sort controllers resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "diskFilterParam": {
        "allowReserved": true,
        "description": "oData query to filter Disk by Key.",
        "example": "systemId eq 7CE751P312",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "diskSortParam": {
        "allowReserved": true,
        "description": "oData query to sort Disk by Key.",
        "example": "name asc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "diskUid": {
        "description": "UID of the disk",
        "example": "d4b13e70924d29afdb77d932f7563ea6",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "enclosureCardPortUid": {
        "description": "UID of the enclosure card port",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "enclosureCardUid": {
        "description": "UID of the enclosure card",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "enclosureDiskUid": {
        "description": "UID of the enclosure disk",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "enclosureExpanderUid": {
        "description": "UID of the enclosure expander",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "enclosureFanUid": {
        "description": "UID of the enclosure fan",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "enclosurePowerUid": {
        "description": "UID of the enclosure power",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "enclosureSledUid": {
        "description": "UID of the enclosure sled",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "enclosureUid": {
        "description": "UID of the enclosure",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "enclosureId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "enclosuresFilterParam": {
        "allowReserved": true,
        "description": "oData query to filter enclosure resource by Key.",
        "example": "systemWWN eq 2FF70002AC018D94",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "enclosuresSortParam": {
        "allowReserved": true,
        "description": "oData query to sort enclosure resource by Key.",
        "example": "systemWWN desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "eventFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter Events by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "eventId": {
        "description": "ID of the Event. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "eventId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "eventSortParam": {
        "allowReserved": true,
        "description": "oData query to sort Event resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "fcConfigsFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter Fibre Channel Configs by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "fcSessionFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter Fibre Channel Sessions by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "folderFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter folders by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "folderId": {
        "description": "ID of the folder. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "folderId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "folderSortParam": {
        "allowReserved": true,
        "description": "oData query to sort folders resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "forceDeleteSnapset": {
        "allowReserved": true,
        "description": "Make snapset offline and remove.",
        "example": true,
        "in": "query",
        "name": "force",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "forceDeleteSnapshot": {
        "allowReserved": true,
        "description": "Make snapshot offline and remove.",
        "example": true,
        "in": "query",
        "name": "force",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "healthStatusFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter health status by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "healthStatusSortParam": {
        "allowReserved": true,
        "description": "oData query to sort health status resource by Key.",
        "example": "scope desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "hostFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter host by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "hostGroupFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter initiator groups by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "hostGroupSortParam": {
        "allowReserved": true,
        "description": "oData query to sort initiator groups resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "hostGroupUid": {
        "description": "Id of the host Group.",
        "example": "e789e756496246859fde6c132b2091d3",
        "in": "path",
        "name": "hostGroupId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "hostId": {
        "description": "ID of the primera Host Set. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "hostId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "hostPathFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter host path by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "hostPathId": {
        "description": "ID of the primera Host Path. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "hostPathId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "hostPathSortParam": {
        "allowReserved": true,
        "description": "oData query to sort host path resource by Key.",
        "example": "HostSpeed desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "hostSetFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter host set by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "hostSetId": {
        "description": "ID of the primera Host Set. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "hostSetId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "hostSetSortParam": {
        "allowReserved": true,
        "description": "oData query to sort host set resource by Key.",
        "example": "HostSpeed desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "hostSortParam": {
        "allowReserved": true,
        "description": "oData query to sort host resource by Key.",
        "example": "HostSpeed desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "hostUid": {
        "description": "Id of the SC Host.",
        "example": "2b09e744496246859fde6c132b2091d3",
        "in": "path",
        "name": "hostId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "hostsInitiatorId": {
        "description": "ID of the nimble initiator. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "hostInitiatorId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "hsFilterParam": {
        "allowReserved": true,
        "description": "oData query to filter hostservice by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "hsSortParam": {
        "allowReserved": true,
        "description": "oData query to sort hostservice by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "idAppset": {
        "description": "ID of the applicationset",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "idSnmp": {
        "description": "ID of the SNMP manager",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "idVasa": {
        "description": "ID of the VASA service",
        "example": "a9c455bf98fc1a6bdb90b824e3ac20b8",
        "in": "path",
        "name": "vasaId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "indirectReplicationPartner": {
        "description": "Include indirect partners. Indirect partners are excluded by default. This parameter cannot be used with other query parameters.",
        "example": true,
        "in": "query",
        "name": "includeIndirectPartners",
        "schema": {
          "type": "boolean"
        }
      },
      "initiatorFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter initiators by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "initiatorSortParam": {
        "allowReserved": true,
        "description": "oData query to sort initiators resource by Key.",
        "example": "initiator_group_name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "initiatorUid": {
        "description": "UID of SC Initiator.",
        "example": "e789e756496246859fde6c132b2091d3",
        "in": "path",
        "name": "initiatorId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "description": "Number of items to return at a time",
        "example": 10,
        "in": "query",
        "name": "limit",
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "networkInterfaceFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter Network Interface by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "networkInterfaceId": {
        "description": "ID of the Network Interface. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "networkInterfaceId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "networkInterfaceSortParam": {
        "allowReserved": true,
        "description": "oData query to sort Network Interface resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "networkSettingFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter network settings by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "networkSettingSortParam": {
        "allowReserved": true,
        "description": "oData query to sort network settings resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nimbleReplicationPartnerFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter replication partners by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nimbleReplicationPartnerSortParam": {
        "allowReserved": true,
        "description": "oData query to sort replication partner resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nimbleSystemFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter systems by Key.",
        "example": "NAME eq g1a1",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nimbleSystemSortParam": {
        "allowReserved": true,
        "description": "Lucene query to sort systems by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nimbleWitnessFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter witnesses by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004007",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nimbleWitnessSortParam": {
        "allowReserved": true,
        "description": "oData query to sort witnesses resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nimblediskFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter disks by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nimblediskSortParam": {
        "allowReserved": true,
        "description": "oData query to sort disks resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nimblevolumeFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter volumes by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nimblevolumeSortParam": {
        "allowReserved": true,
        "description": "oData query to sort volumes resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nodeBatteryUid": {
        "description": "UID of the node battery",
        "example": "8621946048c1cb24bdfc57e9b3b460ac",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "nodeCardUid": {
        "description": "UID of the node Card",
        "example": "9aeec8a12315995e1efc340a79b6b5bd",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "nodeCpuUid": {
        "description": "UID of the node Cpu",
        "example": "60c3831bf1e682693d0319c10333af92",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "nodeDriveUid": {
        "description": "UID of the node drive",
        "example": "b7b233212d3ed5608da55539a7008b5b",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "nodeId": {
        "description": "Primary ID of the node",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "nodeId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "nodeMcuUid": {
        "description": "UID of the node Mcu",
        "example": "be97ad7351f8562440c909460061d0cb",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "nodeMemoryUid": {
        "description": "UID of the node Memory",
        "example": "cc43b7fdca33ea82d84e0ca260940483",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "nodePowerUid": {
        "description": "UID of the node Power Supply",
        "example": "1f9624301fd2f5ecef723c6ecd17c377",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "nodeUid": {
        "description": "UID of the node",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "nodeId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "nodesFilterParam": {
        "allowReserved": true,
        "description": "oData query to filter nodes resource by key.",
        "example": "systemUid eq 7CE751P312",
        "in": "query",
        "name": "filter",
        "schema": {
          "type": "string"
        }
      },
      "nodesSortParam": {
        "allowReserved": true,
        "description": "oData query to sort nodes resource by key.",
        "example": "systemId desc",
        "in": "query",
        "name": "sort",
        "schema": {
          "type": "string"
        }
      },
      "offset": {
        "description": "The offset of the first item in the collection to return",
        "example": 5,
        "in": "query",
        "name": "offset",
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "orderby": {
        "allowReserved": true,
        "description": "Query to sort the response with specified key and order",
        "example": "id asc,name desc",
        "in": "query",
        "name": "sort",
        "schema": {
          "type": "string"
        }
      },
      "performancePolicyFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter performance Policy by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "performancePolicyId": {
        "description": "ID of the performance Policy. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "performancePolicyId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "performancePolicySortParam": {
        "allowReserved": true,
        "description": "oData query to sort performance Policy resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "poolFilter": {
        "allowReserved": true,
        "description": "oData query to filter pools by Key.",
        "example": "name eq CPG_1",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "poolFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter pools by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "poolSort": {
        "allowReserved": true,
        "description": "oData query to sort pools by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "poolSortParam": {
        "allowReserved": true,
        "description": "oData query to sort pools resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "portFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter fibre channel interface ports by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "portSortParam": {
        "allowReserved": true,
        "description": "oData query to sort fibre channel interface ports resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "portUid": {
        "description": "UID of the port",
        "example": "d0fcfe2ff572f44e5beb0a9712c76d5d",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "portsFilterParam": {
        "allowReserved": true,
        "description": "oData query to filter ports by Key.",
        "example": "name eq 1:0:1 and systemWWN eq 2FF70002AC018D94",
        "in": "query",
        "name": "filter",
        "schema": {
          "type": "string"
        }
      },
      "portsSortParam": {
        "allowReserved": true,
        "description": "oData query to sort ports by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "schema": {
          "type": "string"
        }
      },
      "primeraPoolFilter": {
        "allowReserved": true,
        "description": "oData query to filter pools by Key.",
        "example": "name eq CPG_1",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "primeraPoolID": {
        "description": "Identifier of pool. A 32 digit number.",
        "example": "147c439db3ecb34d1ccccc932d14fd60",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "primeraPoolSort": {
        "allowReserved": true,
        "description": "oData query to sort pools by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "protectionTemplateFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter Protection Template  by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "protectionTemplateId": {
        "description": "ID of the Protection Template. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "protectionTemplateId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "protectionTemplateSortParam": {
        "allowReserved": true,
        "description": "oData query to sort Protection Template  resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "range": {
        "allowReserved": true,
        "description": "range will define start and end time in which query has to be made.",
        "example": "startTime eq 1605063600 and endTime eq 1605186000",
        "in": "query",
        "name": "range",
        "schema": {
          "type": "string"
        }
      },
      "replicationPartnerId": {
        "description": "id of device-type1 replication partner",
        "example": "aedec7d11d02f73611a6ff992c256bdb",
        "in": "path",
        "name": "replicationPartnerId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "select": {
        "allowReserved": true,
        "description": "Query to select only the required parameters, separated by . if nested",
        "example": "id",
        "in": "query",
        "name": "select",
        "schema": {
          "type": "string"
        }
      },
      "selectStoragePerf": {
        "allowReserved": true,
        "description": "Query to select only the required parameters, separated by . if nested",
        "example": "latencyMetricsDataMs",
        "in": "query",
        "name": "select",
        "schema": {
          "type": "string"
        }
      },
      "servicePortFilterParam": {
        "allowReserved": true,
        "description": "oData query to filter systems by Key.",
        "example": "ipv4address eq \"169.254.77.160\"",
        "in": "query",
        "name": "filter",
        "schema": {
          "type": "string"
        }
      },
      "shelfFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter shelves by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "shelfId": {
        "description": "Identifier of shelf. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "shelfId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "shelfSortParam": {
        "allowReserved": true,
        "description": "oData query to sort shelves resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "snapshotCollectionFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter snapshot collections by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "snapshotCollectionSortParam": {
        "allowReserved": true,
        "description": "oData query to sort snapshot collections resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "snapshotFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter snapshots by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "snapshotSortParam": {
        "allowReserved": true,
        "description": "oData query to sort snapshots resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "snapshotUid": {
        "description": "UID of the snapshots",
        "example": "a7c4e6593f51d0b98f0e40d7e6df04fd",
        "in": "path",
        "name": "snapshotId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "spaceDomainFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter application summery by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "spaceDomainId": {
        "description": "ID of the application-summery. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "spaceDomainSortParam": {
        "allowReserved": true,
        "description": "oData query to sort application summery resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "storagePerfTimeMin": {
        "allowReserved": true,
        "description": "It defines granularity in minutes.",
        "example": 1440,
        "in": "query",
        "name": "timeIntervalMin",
        "schema": {
          "enum": [
            1440
          ],
          "type": "integer"
        }
      },
      "storageSystemID": {
        "description": "ID of the storage system",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "systemId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "storageSystemUid": {
        "description": "systemId of the device-type1 storage system",
        "example": "7CE751P312",
        "in": "path",
        "name": "systemId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "systemFilterParam": {
        "allowReserved": true,
        "description": "oData query to filter systems by Key.",
        "example": "name eq VEGA_CB1507_8400_2N_150",
        "in": "query",
        "name": "filter",
        "schema": {
          "type": "string"
        }
      },
      "targetName": {
        "allowReserved": true,
        "description": "targetName will define the QoS target name in which query has to be made.",
        "example": "targetName eq volume1",
        "in": "query",
        "name": "targetName",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "targetNamePath": {
        "allowReserved": true,
        "description": "targetName will define the QoS target name in which query has to be made.",
        "example": "targetName eq volume1",
        "in": "path",
        "name": "targetName",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "targetType": {
        "allowReserved": true,
        "description": "targetType will define the QoS target type in which query has to be made.",
        "example": "targetType eq vv",
        "in": "query",
        "name": "targetType",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "timeIntervalMin": {
        "allowReserved": true,
        "description": "It defines granularity in minutes.",
        "example": 60,
        "in": "query",
        "name": "timeIntervalMin",
        "schema": {
          "enum": [
            5,
            60,
            1440,
            10080
          ],
          "type": "integer"
        }
      },
      "topVolumesCount": {
        "allowReserved": true,
        "description": "The number of top volumes to be returned, by default it will be 5",
        "example": 5,
        "in": "query",
        "name": "topVolumesCount",
        "schema": {
          "type": "integer"
        }
      },
      "trustedCertificateFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter Certificates by Key.",
        "example": "other",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "uidAppset": {
        "description": "UID of the applicationset",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "uninitializedArrayId": {
        "description": "ID of the uninitialized Array.A 42 digit hexadecimal number.",
        "example": "c463732d6436306437370000000000000000000000",
        "in": "path",
        "name": "uninitializedArrayId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "uuidEnclosure": {
        "description": "UID of the enclosure",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "uuidNode": {
        "description": "UID of the node",
        "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "uuidStorageSystem": {
        "description": "Serial number of the device-type1 storage system",
        "example": "SGH029VBHV",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "uuidVolume": {
        "description": "UID(volumeuid) of the storage system",
        "example": "a7c4e6593f51d0b98f0e40d7e6df04fd",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "vcenterSettingId": {
        "description": "UID(vcenterSettingId) of the storage system",
        "example": "7e92269a-12d1-35b4-60e8-5919edfc5475",
        "in": "path",
        "name": "vcenterSettingId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "vlunUid": {
        "description": "UID of the vlun",
        "example": "a7c4e6593f51d0b98f0e40d7e6df04fd",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "volumeCollectionFilterParam": {
        "allowReserved": true,
        "description": "Lucene query to filter volume-collection by Key.",
        "example": "id eq 2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "volumeCollectionId": {
        "description": "Identifier of volumeCollection. A 42 digit hexadecimal number.",
        "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
        "in": "path",
        "name": "volumeCollectionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "volumeCollectionSortParam": {
        "allowReserved": true,
        "description": "oData query to sort volume-collection resource by Key.",
        "example": "name desc",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "volumeFilterParam": {
        "allowReserved": true,
        "description": "oData query to filter by Key.",
        "example": "name eq array1 and wwn eq 2FF70002AC018D94",
        "in": "query",
        "name": "filter",
        "schema": {
          "type": "string"
        }
      },
      "volumeSetFilterParam": {
        "allowReserved": true,
        "description": "oData query to filter by Key.",
        "example": "name eq volset and systemId eq 7CE751P312",
        "in": "query",
        "name": "filter",
        "schema": {
          "type": "string"
        }
      },
      "volumeSetSortParam": {
        "allowReserved": true,
        "description": "oData query to sort by Key.",
        "example": "systemId desc",
        "in": "query",
        "name": "sort",
        "schema": {
          "type": "string"
        }
      },
      "volumeSetUid": {
        "description": "UID of Volume Set",
        "example": "fd3244ef7f1ab8bd16500c7a41bdf8f8",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "volumeSortParam": {
        "allowReserved": true,
        "description": "oData query to sort by Key.",
        "example": "systemWWN desc",
        "in": "query",
        "name": "sort",
        "schema": {
          "type": "string"
        }
      },
      "volumeUid": {
        "description": "UID(volumeuid) of the storage system",
        "example": "a7c4e6593f51d0b98f0e40d7e6df04fd",
        "in": "path",
        "name": "volumeId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "AccessControlRecord": {
        "nullable": true,
        "properties": {
          "access_protocol": {
            "description": "Access protocol of snapshot or volume. Possible values: 'iscsi', 'fc'.",
            "example": "volume",
            "nullable": true,
            "type": "string"
          },
          "acl_id": {
            "description": "ID of access control record.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004818",
            "nullable": true,
            "type": "string"
          },
          "apply_to": {
            "description": "State of apply to. Possible values: 'volume'. 'pe', 'vvol_volume', 'vvol_snapshot', 'snapshot', 'both'.",
            "example": "volume",
            "nullable": true,
            "type": "string"
          },
          "chap_user_id": {
            "description": "ID of chap user.",
            "example": "0100000000000004d3000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "chap_user_name": {
            "description": "Name of chap user.",
            "example": "0100000000000004d3000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "ID of access control record.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004818",
            "nullable": true,
            "type": "string"
          },
          "initiator_group_id": {
            "description": "ID of initiator group.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004818",
            "nullable": true,
            "type": "string"
          },
          "initiator_group_name": {
            "description": "Name of initiator group.",
            "example": "h1a1",
            "nullable": true,
            "type": "string"
          },
          "lun": {
            "description": "LUN of snapshot or volume. Secondary LUN if this is Virtual Volume.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pe_id": {
            "description": "ID of protocol endpoint.",
            "example": "0100000000000004d3000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "pe_lun": {
            "description": "LUN of protocol endpoint.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pe_name": {
            "description": "Name of protocol endpoint.",
            "example": "peName",
            "nullable": true,
            "type": "string"
          },
          "snap_id": {
            "description": "ID of snapshot.",
            "example": "2200000000000004d3000000000000000000000007",
            "nullable": true,
            "type": "string"
          },
          "snap_name": {
            "description": "Name of snapshot.",
            "example": "snap1",
            "nullable": true,
            "type": "string"
          },
          "snapluns": {
            "items": {
              "$ref": "#/components/schemas/SnapshotLunInfo"
            },
            "nullable": true,
            "type": "array"
          },
          "vol_id": {
            "description": "ID of volume.",
            "example": "0100000000000004d3000000000000000000000007",
            "nullable": true,
            "type": "string"
          },
          "vol_name": {
            "description": "Name of volume.",
            "example": "vol1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AccessControlsResponse": {
        "properties": {
          "items": {
            "description": "List of user permissions based on the supplied filter in the form of 'resource type.permission'.  Ex. volume.create",
            "example": [
              "volume.create",
              "port.read"
            ],
            "items": {
              "type": "string"
            },
            "title": "Resource type permissions",
            "type": "array"
          }
        },
        "required": [
          "items"
        ],
        "title": "Access Control Permissions",
        "type": "object"
      },
      "AccessProtocol": {
        "description": "Possible values: 'iscsi', 'fc'.",
        "example": "iscsi",
        "nullable": true,
        "type": "string"
      },
      "AddRemoteCopyLinks": {
        "description": "Request body for adding remote copy links",
        "nullable": false,
        "properties": {
          "replicationPartnerSystemId": {
            "description": "SystemId of target replication partner",
            "example": "7CE816P0SR",
            "nullable": false,
            "type": "string"
          },
          "source": {
            "description": "List of remote copy links to be added to source replication partner",
            "items": {
              "$ref": "#/components/schemas/CreateRemoteCopyLinkInput"
            },
            "nullable": false,
            "type": "array"
          },
          "target": {
            "description": "List of remote copy links to be added to target replication partner",
            "items": {
              "$ref": "#/components/schemas/CreateRemoteCopyLinkInput"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "source",
          "replicationPartnerSystemId",
          "target"
        ],
        "type": "object"
      },
      "AddTrustedCertificateInput": {
        "description": "Request body for adding a trusted certificate",
        "nullable": false,
        "properties": {
          "action": {
            "description": "Action to perform with trusted certificate",
            "enum": [
              "VERIFY_CERT_CHAIN",
              "INSTALL_CERT_CHAIN",
              "VERIFY_AND_INSTALL_CERT_CHAIN"
            ],
            "nullable": false,
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/TrustedCertParams"
          }
        },
        "required": [
          "action",
          "parameters"
        ],
        "type": "object"
      },
      "Address": {
        "nullable": true,
        "properties": {
          "activeNode": {
            "description": "Active node ID",
            "example": 1,
            "format": "Uint32",
            "nullable": true,
            "type": "integer"
          },
          "autoSense": {
            "description": "Specifies if the autosense is enabled for network port",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "fullDuplex": {
            "description": "Is network port full duplex",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "ipAddress": {
            "description": "IP Address of the network port",
            "example": "15.12.123.234",
            "nullable": true,
            "type": "string"
          },
          "netMask": {
            "description": "Net mask of the network port",
            "example": "255.255.255.0",
            "nullable": true,
            "type": "string"
          },
          "speed": {
            "description": "Speed of the network port",
            "example": 1000,
            "format": "Uint32",
            "nullable": true,
            "type": "integer"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "status": {
            "description": "Status of the network port",
            "example": "Active",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdmitTime": {
        "description": "admission time of disk",
        "nullable": true,
        "properties": {
          "ms": {
            "description": "time in millisecond",
            "example": 1591599192000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tz": {
            "description": "timezone",
            "example": "Asia/Calcutta",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AlertContactsDetails": {
        "description": "Contacts details set to receive alerts",
        "nullable": true,
        "properties": {
          "company": {
            "description": "Company",
            "example": "HPE",
            "nullable": true,
            "type": "string"
          },
          "companyCode": {
            "description": "Company code",
            "example": "HPE",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Country",
            "example": "US",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1sd",
            "type": "string"
          },
          "fax": {
            "description": "Fax number",
            "example": "+1 323 555 1234",
            "nullable": true,
            "type": "string"
          },
          "firstName": {
            "description": "First name",
            "example": "john",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date. ",
            "example": 1627540907421,
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the contact",
            "example": "67d09515-8526-9b02-c0c4-c1f443a39402",
            "nullable": true,
            "type": "string"
          },
          "includeSvcAlerts": {
            "description": "Email sent to contact shall include service alert",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "lastName": {
            "description": "Last name",
            "example": "kevin",
            "nullable": true,
            "type": "string"
          },
          "notificationSeverities": {
            "description": "Severities of notifications the contact will be notificated. An array of number: 0 - Fatal, 1 - Critical, 2 - Major, 3 - Minor, 4 - Degraded, 5 - Info, 6 - Debug",
            "example": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "items": {
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "preferredLanguage": {
            "description": "Preferred language when being contacted or emailed",
            "example": "en",
            "nullable": true,
            "type": "string"
          },
          "primaryEmail": {
            "description": "Primary email address",
            "example": "kevin.john@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "primaryPhone": {
            "description": "Primary phone",
            "example": "98783456",
            "nullable": true,
            "type": "string"
          },
          "receiveEmail": {
            "description": "Contact will receive email notifications. This is a deprecated field and will always pass true to be inline with UI.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "receiveGrouped": {
            "description": "Contact will receive grouped low urgency email notifications",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "secondaryEmail": {
            "description": "Secondary email address",
            "example": "winny.pooh@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "secondaryPhone": {
            "description": "Secondary phone",
            "example": "23456789",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemId/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "systemSupportContact": {
            "description": "Contact will be called for any system issues",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "type": {
            "description": "The type of resource",
            "example": "alert-contacts",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AlertContactsDetailsList": {
        "description": "Contacts details set to receive alerts",
        "nullable": true,
        "properties": {
          "company": {
            "description": "Company",
            "example": "HPE",
            "nullable": true,
            "type": "string"
          },
          "companyCode": {
            "description": "Company code",
            "example": "HPE",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Country",
            "example": "US",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1sd",
            "type": "string"
          },
          "fax": {
            "description": "Fax number",
            "example": "+1 323 555 1234",
            "nullable": true,
            "type": "string"
          },
          "firstName": {
            "description": "First name",
            "example": "john",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date. ",
            "example": 1627540907421,
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the contact",
            "example": "67d09515-8526-9b02-c0c4-c1f443a39402",
            "nullable": true,
            "type": "string"
          },
          "includeSvcAlerts": {
            "description": "Email sent to contact shall include service alert",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "lastName": {
            "description": "Last name",
            "example": "kevin",
            "nullable": true,
            "type": "string"
          },
          "notificationSeverities": {
            "description": "Severities of notifications the contact will be notificated. An array of number: 0 - Fatal, 1 - Critical, 2 - Major, 3 - Minor, 4 - Degraded, 5 - Info, 6 - Debug",
            "example": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "items": {
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "preferredLanguage": {
            "description": "Preferred language when being contacted or emailed",
            "example": "en",
            "nullable": true,
            "type": "string"
          },
          "primaryEmail": {
            "description": "Primary email address",
            "example": "kevin.john@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "primaryPhone": {
            "description": "Primary phone",
            "example": "98783456",
            "nullable": true,
            "type": "string"
          },
          "receiveEmail": {
            "description": "Contact will receive email notifications. This is a deprecated field and will always pass true to be inline with UI.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "receiveGrouped": {
            "description": "Contact will receive grouped low urgency email notifications",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "requestUri": {
            "description": "requestUri for alert contact details",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/alert-contacts",
            "nullable": true,
            "type": "string"
          },
          "secondaryEmail": {
            "description": "Secondary email address",
            "example": "winny.pooh@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "secondaryPhone": {
            "description": "Secondary phone",
            "example": "23456789",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemId/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "systemSupportContact": {
            "description": "Contact will be called for any system issues",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "type": {
            "description": "The type of resource",
            "example": "alert-contacts",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AlertMinLevel": {
        "description": "Minimum level of alert to be notified. Possible values: 'info', 'notice', 'warning', 'critical'.",
        "example": "critical",
        "nullable": true,
        "type": "string"
      },
      "AppKeyValue": {
        "nullable": true,
        "properties": {
          "key": {
            "description": "Identifier of key-value pair.",
            "example": "key1",
            "nullable": true,
            "type": "string"
          },
          "value": {
            "description": "Value of key-value pair.",
            "example": "value1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApplicationServer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldsWithFilter"
          },
          {
            "$ref": "#/components/schemas/CommonFields"
          }
        ],
        "nullable": true,
        "type": "object"
      },
      "ApplicationServerDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldsWithoutFilter"
          },
          {
            "$ref": "#/components/schemas/CommonFields"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed application server objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/application-servers/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApplicationServersList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ApplicationServer"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for application server objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/application-servers",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of application servers.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ArrayMigStatus": {
        "description": "Data migration status for an array.",
        "nullable": true,
        "properties": {
          "id": {
            "description": "Unique identifier of the array.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "is_data_source": {
            "description": "Indicates whether the array is data source or not.",
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the array.",
            "example": "Array056",
            "nullable": true,
            "type": "string"
          },
          "space_utilization": {
            "description": "Space utilization as a percentage of array size.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ArrayUnassignMigStatus": {
        "description": "Data migration status for array being unassigned from its pool.",
        "nullable": true,
        "properties": {
          "bytes_migrated": {
            "description": "Number of bytes already migrated to the destination arrays.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "bytes_remaining": {
            "description": "Number of bytes yet to be migrated to the destination arrays.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "destination_arrays": {
            "description": "List of arrays to which data is being migrated.",
            "items": {
              "$ref": "#/components/schemas/NimbleArrSummary"
            },
            "nullable": true,
            "type": "array"
          },
          "estimated_completion_time": {
            "description": "Estimated completion time. 0 if unknown.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier of the array being unassigned.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the array being unassigned.",
            "example": "Array052",
            "nullable": true,
            "type": "string"
          },
          "start_time": {
            "description": "Time when array unassign operation started.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817",
            "type": "storage-systems"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "AuditBadRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "properties": {
          "errorCode": {
            "description": "Possible values: BAD_REQUEST, INVALID_PARAMETER"
          }
        }
      },
      "AuditData": {
        "properties": {
          "associatedResource": {
            "$ref": "#/components/schemas/AuditResource"
          },
          "code": {
            "description": "Unique code that describes the type of audit event that occurred",
            "example": "eventcode",
            "type": "string"
          },
          "contextId": {
            "description": "Unique id used to track a request across services",
            "example": "contextID",
            "type": "string"
          },
          "customerId": {
            "description": "Application Customer ID associated with this event",
            "example": "customer123",
            "type": "string"
          },
          "id": {
            "description": "Required: Unique ID for this audit event message, for example a GUID",
            "example": "id123",
            "type": "string"
          },
          "message": {
            "description": "Required: Human readable message string that describes the action that occurred",
            "example": "volume 123 created",
            "type": "string"
          },
          "occurredAt": {
            "description": "Required: UTC timestamp when the event occurred",
            "example": "2020-09-08T16:51:33Z",
            "type": "string"
          },
          "permission": {
            "description": "Which privilege was used to grant/deny the action. E.g. controller.edit.",
            "example": "volume.create",
            "type": "string"
          },
          "scope": {
            "description": "Provides additional limits on the authorization of the request.",
            "example": "/volume/foo",
            "type": "string"
          },
          "source": {
            "description": "Which service/device is responsible for sending this event",
            "example": "audit",
            "type": "string"
          },
          "sourceIpAddress": {
            "description": "IP address from where the request originated",
            "example": "1.2.3.4",
            "type": "string"
          },
          "state": {
            "description": "Required: Enum that identifies whether the action was successful or not: Success, Failure, PermissionDenied, Initiated",
            "example": "Success",
            "type": "string"
          },
          "taskId": {
            "description": "Identifier linking asynchronous operations allowing initiation and completion of operations to be linked",
            "example": "taskid123",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique identifier generated internally",
            "example": "audit.event+6+12345678",
            "type": "string"
          },
          "userEmail": {
            "description": "User who is associated with this event",
            "example": "abc@dev.com",
            "type": "string"
          },
          "version": {
            "description": "Required: Version of the event structure, allowing for changes in the future",
            "example": 1,
            "type": "integer"
          }
        },
        "required": [
          "id",
          "message",
          "occurredAt",
          "state",
          "version"
        ],
        "type": "object"
      },
      "AuditInternalServerError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "properties": {
          "errorCode": {
            "description": "Possible values: INTERNAL_ERROR"
          }
        }
      },
      "AuditResource": {
        "properties": {
          "id": {
            "description": "ID of any associated resource (e.g. device, volume, etc.)",
            "example": "volume123",
            "type": "string"
          },
          "name": {
            "description": "Name of any associated resource",
            "example": "dev volume",
            "type": "string"
          },
          "type": {
            "description": "Type of any associated resource",
            "example": "volume",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "type"
        ],
        "type": "object"
      },
      "AuditResults": {
        "properties": {
          "items": {
            "description": "If query yields results, they will be reported here",
            "items": {
              "$ref": "#/components/schemas/AuditData"
            },
            "type": "array"
          },
          "pageLimit": {
            "description": "The limit specified in the limit query parameter.",
            "example": 100,
            "type": "integer"
          },
          "pageOffset": {
            "description": "The offset specified in the offset query parameter.",
            "type": "integer"
          },
          "total": {
            "description": "Total number of documents matching filter criteria.",
            "example": 123456,
            "type": "integer"
          }
        },
        "required": [
          "items",
          "pageLimit",
          "pageOffset",
          "total"
        ],
        "type": "object"
      },
      "AuditServiceUnavailable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "properties": {
          "errorCode": {
            "description": "Possible values: SERVICE_UNAVAILABLE"
          }
        }
      },
      "AuditUserForbidden": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "properties": {
          "errorCode": {
            "description": "Possible values: FORBIDDEN"
          }
        }
      },
      "ChangeProximitySettingsInput": {
        "description": "Request body to change proximity settings",
        "nullable": false,
        "properties": {
          "hosts": {
            "items": {
              "$ref": "#/components/schemas/HostProximityInput"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "hosts"
        ],
        "type": "object"
      },
      "CloneVolumesInput": {
        "description": "The request body for clone volumes.",
        "nullable": false,
        "properties": {
          "clone_volume_name": {
            "description": "Name of a clone volume to be created.",
            "example": "vol1-clone",
            "nullable": false,
            "type": "string"
          },
          "parent_volume_name": {
            "description": "Name of the parent volume for a given clone volume.",
            "example": "vol1",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "parent_volume_name",
          "clone_volume_name"
        ],
        "type": "object"
      },
      "CommonFields": {
        "properties": {
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/application-servers/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of application server. String of up to 255 printable ASCII characters. Defaults to the empty string.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "metadata": {
            "description": "Key-value pairs that augment an application server's attributes. List of key-value pairs. Keys must be unique and non-empty. When creating an object, values must be non-empty. When updating an object, an empty value causes the corresponding key to be removed. Defaults to an empty array.",
            "items": {
              "$ref": "#/components/schemas/AppKeyValue"
            },
            "nullable": true,
            "type": "array"
          },
          "port": {
            "description": "Application server port number. Positive integer value up to 65535 representing TCP/IP port. Defaults to 65536.",
            "example": 1048,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "username": {
            "description": "Application server username. String of up to 255 printable ASCII characters.",
            "example": "user256",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CommonResourceProperties": {
        "description": "Common properties included in all resource models.",
        "properties": {
          "customerId": {
            "description": "The customer application identifier",
            "readOnly": true,
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "id": {
            "description": "An identifier for the resource, usually a UUID.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "A system specified name for the resource.",
            "type": "string"
          },
          "resourceUri": {
            "description": "The 'self' reference for this resource.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConsoleReference": {
        "description": "References to other UI link include the consoleUri",
        "properties": {
          "consoleUri": {
            "type": "string"
          }
        },
        "required": [
          "consoleUri"
        ],
        "type": "object"
      },
      "ContactsDetails": {
        "description": "Contacts details set to receive alerts",
        "nullable": true,
        "properties": {
          "company": {
            "description": "Company",
            "example": "HPE",
            "nullable": true,
            "type": "string"
          },
          "companyCode": {
            "description": "Company code",
            "example": "HPE",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Country",
            "example": "US",
            "nullable": true,
            "type": "string"
          },
          "fax": {
            "description": "Fax number",
            "example": "fax_id",
            "nullable": true,
            "type": "string"
          },
          "firstName": {
            "description": "First name",
            "example": "john",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique Identifier of the contact",
            "example": "67d09515-8526-9b02-c0c4-c1f443a39402",
            "nullable": true,
            "type": "string"
          },
          "includeSvcAlerts": {
            "description": "Email sent to contact shall include service alert",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "lastName": {
            "description": "Last name",
            "example": "kevin",
            "nullable": true,
            "type": "string"
          },
          "notificationSeverities": {
            "description": "Severities of notifications the contact will be notificated. An array of number: 0 - Fatal, 1 - Critical, 2 - Major, 3 - Minor, 4 - Degraded, 5 - Info, 6 - Debug",
            "example": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "items": {
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "preferredLanguage": {
            "description": "Preferred language when being contacted or emailed",
            "example": "en",
            "nullable": true,
            "type": "string"
          },
          "primaryEmail": {
            "description": "Primary email address",
            "example": "kevin.john@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "primaryPhone": {
            "description": "Primary phone",
            "example": "98783456",
            "nullable": true,
            "type": "string"
          },
          "receiveEmail": {
            "description": "Contact will receive email notifications",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "receiveGrouped": {
            "description": "Contact will receive grouped low urgency email notifications",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "secondaryEmail": {
            "description": "Secondary email address",
            "example": "winny.pooh@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "secondaryPhone": {
            "description": "Secondary phone",
            "example": "23456789",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemId/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "systemSupportContact": {
            "description": "Contact will be called for any system issues",
            "example": false,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ContactsEditDetails": {
        "description": "Contacts details set to receive alerts",
        "nullable": true,
        "properties": {
          "company": {
            "description": "Company",
            "example": "HPE",
            "nullable": true,
            "type": "string"
          },
          "companyCode": {
            "description": "Company code",
            "example": "HPE",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Country",
            "example": "US",
            "nullable": true,
            "type": "string"
          },
          "fax": {
            "description": "Fax number",
            "example": "fax_id",
            "nullable": true,
            "type": "string"
          },
          "firstName": {
            "description": "First name",
            "example": "john",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique Identifier of the contact",
            "example": "67d09515-8526-9b02-c0c4-c1f443a39402",
            "nullable": true,
            "type": "string"
          },
          "includeSvcAlerts": {
            "description": "Email sent to contact shall include service alert",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "lastName": {
            "description": "Last name",
            "example": "kevin",
            "nullable": true,
            "type": "string"
          },
          "notificationSeverities": {
            "description": "Severities of notifications the contact will be notificated. An array of number: 0 - Fatal, 1 - Critical, 2 - Major, 3 - Minor, 4 - Degraded, 5 - Info, 6 - Debug",
            "example": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "items": {
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "preferredLanguage": {
            "description": "Preferred language when being contacted or emailed",
            "example": "en",
            "nullable": true,
            "type": "string"
          },
          "primaryEmail": {
            "description": "Primary email address",
            "example": "kevin.john@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "primaryPhone": {
            "description": "Primary phone",
            "example": "98783456",
            "nullable": true,
            "type": "string"
          },
          "receiveEmail": {
            "description": "Contact will receive email notifications",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "receiveGrouped": {
            "description": "Contact will receive grouped low urgency email notifications",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "secondaryEmail": {
            "description": "Secondary email address",
            "example": "winny.pooh@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "secondaryPhone": {
            "description": "Secondary phone",
            "example": "23456789",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateApplicationServer": {
        "description": "Create Nimble application server input.",
        "properties": {
          "description": {
            "description": "Text description of application server. String of up to 255 printable ASCII characters. Defaults to the empty string.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "hostname": {
            "description": "Application server hostname. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; Hypen and  colon are allowed after the first and before the last character.",
            "example": "nimble-appserver.com",
            "type": "string"
          },
          "metadata": {
            "description": "Key-value pairs that augment an application server's attributes. List of key-value pairs. Keys must be unique and non-empty. When creating an object, values must be non-empty. When updating an object, an empty value causes the corresponding key to be removed. Defaults to an empty array.",
            "items": {
              "$ref": "#/components/schemas/AppKeyValue"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of the volume. String of up to 64 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period.",
            "example": "AppServer101",
            "type": "string"
          },
          "port": {
            "description": "Application server port number. Positive integer value up to 65535 representing TCP/IP port. Defaults to 65536.",
            "example": 1048,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "server_type": {
            "description": "Application server type. Defaults to 'vmware'. Possible values are 'vss' and 'vmware'.",
            "example": "vmware",
            "nullable": true,
            "type": "string"
          },
          "username": {
            "description": "Application server username. String of up to 255 printable ASCII characters.",
            "example": "user256",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "name",
          "hostname"
        ],
        "type": "object"
      },
      "CreateCertificateInput": {
        "description": "Create Certificate input.",
        "properties": {
          "authorityChain": {
            "description": "The authority chain for Quorum Witness server certificate.",
            "example": "-----BEGIN CERTIFICATE REQUEST-----abc----END CERTIFICATE REQUEST-----",
            "type": "string"
          },
          "commonName": {
            "description": "CommonName for the certificate.",
            "example": "hpe.com CA - Intermediate",
            "nullable": false,
            "type": "string"
          },
          "country": {
            "description": "Two-letter code for the country where organization is located.",
            "example": "IN",
            "type": "string"
          },
          "days": {
            "description": "Number of days valid for the certificate.",
            "example": 365,
            "format": "int64",
            "type": "integer"
          },
          "keyLength": {
            "description": "Key length for the certificate.",
            "example": 2048,
            "format": "int64",
            "nullable": false,
            "type": "integer"
          },
          "locality": {
            "description": "Locality where organization is located.",
            "example": "BLR",
            "type": "string"
          },
          "organization": {
            "description": "Organization for the certificate",
            "example": "HPE",
            "type": "string"
          },
          "organizationUnit": {
            "description": "Division of organization handling the certificate.",
            "example": "HPE Primera",
            "type": "string"
          },
          "province": {
            "description": "Province where organization is located.",
            "example": "Karnataka",
            "type": "string"
          },
          "service": {
            "description": "Name of service the certificate is for.",
            "enum": [
              "QW_CLIENT",
              "QW_SERVER",
              "WSAPI",
              "CLI",
              "CIM",
              "VASA",
              "EKM_CLIENT",
              "SYSLOG_GEN_CLIENT",
              "SYSLOG_SEC_CLIENT",
              "UNIFIED_SERVER"
            ],
            "example": "QW_CLIENT",
            "nullable": false,
            "type": "string"
          },
          "subjectAltName": {
            "$ref": "#/components/schemas/certSubjectAltName"
          },
          "type": {
            "description": "Type of certificate to create.",
            "example": "csr",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "type",
          "service"
        ],
        "type": "object"
      },
      "CreateHostGroupInput": {
        "nullable": true,
        "properties": {
          "comment": {
            "description": "Comment",
            "example": "host-group-comment",
            "nullable": true,
            "type": "string"
          },
          "hostIds": {
            "description": "List of host ids of existing hosts",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "hostsToCreate": {
            "description": "List of hosts to be created and added to this hostGroup",
            "items": {
              "$ref": "#/components/schemas/CreateHostInput"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of the host group",
            "example": "host-group1",
            "nullable": true,
            "type": "string"
          },
          "userCreated": {
            "description": "Idicates whether user created host or discovered host",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "userCreated"
        ],
        "type": "object"
      },
      "CreateHostInput": {
        "nullable": true,
        "properties": {
          "comment": {
            "description": "Comment",
            "example": "comment1",
            "nullable": true,
            "type": "string"
          },
          "contact": {
            "description": "Contact information",
            "example": "sanjay@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "fqdn": {
            "description": "Fully qualified domain name of the host.",
            "example": "host1.hpe.com",
            "nullable": true,
            "type": "string"
          },
          "hostGroupIds": {
            "description": "List of hostgroup IDs",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "initiatorIds": {
            "description": "List of ids of existing initiators",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "initiatorsToCreate": {
            "description": "List of initiators to be created and added to this host",
            "items": {
              "$ref": "#/components/schemas/InitiatorInput"
            },
            "nullable": true,
            "type": "array"
          },
          "ipAddress": {
            "description": "IP address of the host.",
            "example": "15.212.100.100",
            "nullable": true,
            "type": "string"
          },
          "location": {
            "description": "location.",
            "example": "India",
            "nullable": true,
            "type": "string"
          },
          "model": {
            "description": "Model",
            "example": "model1",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the host.",
            "example": "host1",
            "nullable": true,
            "type": "string"
          },
          "operatingSystem": {
            "description": "Host operating system. Possible Values are: - AIX - Apple - Citrix Hypervisor(XenServer) - HP-UX - IBM VIO Server - InForm - NetApp/ONTAP - OE Linux UEK - OpenVMS - Oracle VM x86 - RHE Linux - RHE Virtualization - Solaris - SuSE Linux - SuSE Virtualization - Ubuntu - VMware (ESXi) - Windows Server",
            "example": "Windows Server",
            "nullable": true,
            "type": "string"
          },
          "persona": {
            "description": "Host persona details.",
            "example": "AIX-Legacy",
            "nullable": true,
            "type": "string"
          },
          "protocol": {
            "description": "protocol",
            "example": "protocol1",
            "nullable": true,
            "type": "string"
          },
          "subnet": {
            "description": "subnet.",
            "example": "255.255.255.0",
            "nullable": true,
            "type": "string"
          },
          "userCreated": {
            "description": "Indicates whether user created host or discovered host",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "operatingSystem",
          "userCreated"
        ],
        "type": "object"
      },
      "CreatePoolNimbleArrayDetail": {
        "properties": {
          "id": {
            "description": "Identifier for array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004801",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "CreateQuorumWitnessInput": {
        "description": "Request body to configure quorum witness",
        "nullable": true,
        "properties": {
          "parameters": {
            "description": "Parameters for create quorum witness action",
            "nullable": false,
            "properties": {
              "ipAddress": {
                "description": "Specifies the IP address of the Quorum Witness (QW) application to which the connectivity is created",
                "example": "15.112.47.239",
                "nullable": false,
                "type": "string"
              },
              "port": {
                "description": "Specifies port number to be used to communicate with SSL to the Quorum Witness application.Default value is 8843",
                "example": 8843,
                "nullable": true,
                "type": "integer"
              },
              "ssl": {
                "description": "Specifies the SSL connectivity to the Quorum Witness to be created",
                "example": true,
                "nullable": true,
                "type": "boolean"
              }
            },
            "required": [
              "ipAddress"
            ],
            "type": "object"
          },
          "replicationPartnerSystemId": {
            "description": "SystemId of target replication partner",
            "example": "7CE816P0SR",
            "nullable": false,
            "type": "string"
          },
          "srcReplicationId": {
            "description": "Id of source replication partner on which quorum witness is to be configured",
            "example": "afb4961e47212e5bc88dd35db5be5c83",
            "nullable": false,
            "type": "string"
          },
          "startQuorumWitness": {
            "description": "Specifies start/stop Quorum Witness connectivity on the storage system. If set true, ATF configuration is activated. If set false, ATF configuration is deactivated.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "targetReplicationId": {
            "description": "Id of target replication partner on which quorum witness is to be configured",
            "example": "afb4961e47212e5bc88dd35db5be5c83",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "srcReplicationId",
          "targetReplicationId",
          "replicationPartnerSystemId",
          "parameters"
        ],
        "type": "object"
      },
      "CreateRemoteCopyLinkInput": {
        "description": "Request body for creating remote copy links",
        "nullable": false,
        "properties": {
          "address": {
            "description": "IP Address or WWN of Remote Copy target for this link, depending on the link type IP or FC",
            "example": "10.100.65.128",
            "nullable": false,
            "type": "string"
          },
          "portPos": {
            "description": "Location (node, slot and port) of this link. For IP links, to be created with just node then the slot and port positions will be empty",
            "nullable": false,
            "properties": {
              "node": {
                "description": "Port position node number",
                "example": 0,
                "format": "int64",
                "nullable": false,
                "type": "integer"
              },
              "port": {
                "description": "Port position port number",
                "example": 3,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "slot": {
                "description": "Port position slot number",
                "example": 1,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              }
            },
            "required": [
              "node",
              "port",
              "slot"
            ],
            "type": "object"
          },
          "targetName": {
            "description": "Remote Copy target with which the link is affiliated",
            "example": "Sample_RCTarget",
            "nullable": false,
            "type": "string"
          },
          "type": {
            "description": "Remote Copy link type. 1 for IP and 2 for FC",
            "example": 1,
            "format": "int64",
            "nullable": false,
            "type": "integer"
          }
        },
        "required": [
          "address",
          "portPos",
          "targetName",
          "type"
        ],
        "type": "object"
      },
      "CreateRemoteCopyTargetInput": {
        "description": "Request body for creating remote copy targets",
        "nullable": true,
        "properties": {
          "disabled": {
            "description": "Enable (true) or disable (false) the creation of the target in disabled mode",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the remote copy target",
            "example": "sample_RCtarget",
            "nullable": false,
            "type": "string"
          },
          "nodeWWN": {
            "description": "WWN of the node on the target system for FC Link type. Ignored if specified for IP type.",
            "example": "2FF70002AC020DA1",
            "nullable": true,
            "type": "string"
          },
          "portPosAndLink": {
            "description": "Specifies all locations (portPos) of the local system, and all links(IP or WWN) of the remote system",
            "items": {
              "$ref": "#/components/schemas/PortPosAndLinkInput"
            },
            "nullable": false,
            "type": "array"
          },
          "type": {
            "description": "Specifies the link protocol. Do not use UNKNOWN as a linkType enumeration value when creating a Remote Copy target. 1 for IP Target Type, 2 for FC Target Type",
            "example": 1,
            "format": "int64",
            "nullable": false,
            "type": "integer"
          }
        },
        "required": [
          "name",
          "type",
          "portPosAndLink"
        ],
        "type": "object"
      },
      "CreateReplicationPartnersInput": {
        "description": "Request body to create replication partners",
        "nullable": false,
        "properties": {
          "replicationPartners": {
            "items": {
              "$ref": "#/components/schemas/ReplicationPartnerInput"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "replicationPartners"
        ],
        "type": "object"
      },
      "CustomApp": {
        "description": "Params required to create custom workload",
        "nullable": true,
        "properties": {
          "compression": {
            "description": "is compression required",
            "example": true,
            "nullable": false,
            "type": "boolean"
          },
          "deduplication": {
            "description": "is deduplication required",
            "example": true,
            "nullable": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of policy",
            "example": "CUSTOM-LOG-SERVER",
            "minLength": 1,
            "nullable": false,
            "type": "string"
          }
        },
        "title": "CustomApplicationParameters",
        "type": "object"
      },
      "DeleteInitiator": {
        "nullable": true,
        "properties": {
          "deleteInitiator": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DiskCapacity": {
        "description": "Capacity of the Disk",
        "nullable": true,
        "properties": {
          "allocatedMiB": {
            "description": "allocated Size in MiB",
            "example": 595968,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "failedMiB": {
            "description": "failed Size in MiB",
            "example": 0,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "freeMiB": {
            "description": "free Size in MiB",
            "example": 1233920,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "totalMiB": {
            "description": "total Size in MiB.",
            "example": 595968,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "unavailableMiB": {
            "description": "unavailable Size in MiB",
            "example": 0,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DiskFilterableFields": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "ID of array the disk belongs to. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "array_name": {
            "description": "Name of array the disk belongs to. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.  `Filter, Sort`",
            "example": "c12-array5",
            "nullable": true,
            "type": "string"
          },
          "device_type": {
            "description": "Type of disk (HDD, SSD, N/A). Disk type. Possible values: 'hdd', 'ssd'. `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier of disk. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "model": {
            "description": "Disk model name. `Filter, Sort`",
            "example": "WDC WD1003FBYX-01Y7B0",
            "nullable": true,
            "type": "string"
          },
          "serial": {
            "description": "Disk serial number(N/A if empty). `Filter, Sort`",
            "example": "/dev/sdj",
            "nullable": true,
            "type": "string"
          },
          "shelf_id": {
            "description": "Identifies the physical shelf the disk belongs to. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "shelf_serial": {
            "description": "Serial number of the shelf the disk is attached to. `Filter, Sort`",
            "example": "AA-100373",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "Disk hardware state. Disk state. Possible values: 'valid', 'in use', 'failed', absent', 'removed', 'void', 't_fail', 'foreign'. `Filter, Sort`",
            "example": "in use",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskFilterableFieldsWithoutFilter": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "ID of array the disk belongs to. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "array_name": {
            "description": "Name of array the disk belongs to. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "c12-array5",
            "nullable": true,
            "type": "string"
          },
          "disk_type": {
            "description": "Type of disk (HDD, SSD, N/A). Disk type. Possible values: 'hdd', 'ssd'.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier of disk. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "model": {
            "description": "Disk model name.",
            "example": "WDC WD1003FBYX-01Y7B0",
            "nullable": true,
            "type": "string"
          },
          "serial": {
            "description": "Disk serial number(N/A if empty).",
            "example": "/dev/sdj",
            "nullable": true,
            "type": "string"
          },
          "shelf_id": {
            "description": "Identifies the physical shelf the disk belongs to. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "shelf_serial": {
            "description": "Serial number of the shelf the disk is attached to.",
            "example": "AA-100373",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "Disk hardware state. Disk state. Possible values: 'valid', 'in use', 'failed', absent', 'removed', 'void', 't_fail', 'foreign'.",
            "example": "in use",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskLoop": {
        "description": "Disk Loop",
        "nullable": true,
        "properties": {
          "degraded": {
            "description": "degraded loop",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "disabled": {
            "description": "disabled loop",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "port": {
            "$ref": "#/components/schemas/diskPortPosition"
          },
          "primary": {
            "description": "primary loop",
            "example": false,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DiskPosition": {
        "description": "Disk Position",
        "nullable": true,
        "properties": {
          "cage": {
            "description": "cage ID",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "disk": {
            "description": "disk ID",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "side": {
            "description": "disk side",
            "enum": [
              "SIDE_NONE",
              "SIDE_LEFT",
              "SIDE_RIGHT",
              null
            ],
            "example": "SIDE_NONE",
            "nullable": true,
            "type": "string"
          },
          "sled": {
            "description": "sled ID",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DiskPositionNow": {
        "description": "Disk Position Now",
        "nullable": true,
        "properties": {
          "cage": {
            "description": "cage ID",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "disk": {
            "description": "disk ID",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "side": {
            "description": "disk side",
            "enum": [
              "SIDE_NONE",
              "SIDE_LEFT",
              "SIDE_RIGHT",
              null
            ],
            "example": "SIDE_NONE",
            "nullable": true,
            "type": "string"
          },
          "sled": {
            "description": "sled ID",
            "example": 2,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ENC_STATE": {
        "description": "State of the resource",
        "nullable": true,
        "properties": {
          "detailed": {
            "description": "Array of the detailed states of the resource",
            "nullable": true,
            "type": "string"
          },
          "overall": {
            "description": "Overall state of the resource. `Sort: stateOverall`",
            "enum": [
              "STATE_UNKNOWN",
              "STATE_NORMAL",
              "STATE_DEGRADED",
              "STATE_FAILED",
              "STATE_NOT_APPLICABLE",
              "STATE_NEW",
              null
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditAlertSettings": {
        "nullable": true,
        "properties": {
          "alert_from_email_addr": {
            "description": "From email address to use while sending emails. Case insensitive email address.",
            "example": "bob@wikipedia.com",
            "nullable": true,
            "type": "string"
          },
          "alert_min_level": {
            "description": "Minimum level of alert to be notified. Possible values: 'info', 'notice', 'warning', 'critical'.",
            "example": "warning",
            "nullable": true,
            "type": "string"
          },
          "alert_to_email_addrs": {
            "description": "Comma-separated list of email addresss to receive emails.",
            "example": "bob@wikipedia.com,jason@wiki.com",
            "nullable": true,
            "type": "string"
          },
          "send_alert_to_support": {
            "description": "Enable or disable alert to support",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "EditApplicationServer": {
        "description": "Edit Nimble application server input.",
        "properties": {
          "description": {
            "description": "Text description of application server. String of up to 255 printable ASCII characters. Defaults to the empty string.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "hostname": {
            "description": "Application server hostname. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; Hypen and  colon are allowed after the first and before the last character.",
            "example": "nimble-appserver.com",
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "description": "Key-value pairs that augment an application server's attributes. List of key-value pairs. Keys must be unique and non-empty. When creating an object, values must be non-empty. When updating an object, an empty value causes the corresponding key to be removed. Defaults to an empty array.",
            "items": {
              "$ref": "#/components/schemas/AppKeyValue"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of the volume. String of up to 64 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period.",
            "example": "AppServer101",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "Application server port number. Positive integer value up to 65535 representing TCP/IP port. Defaults to 65536.",
            "example": 1048,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "server_type": {
            "description": "Application server type. Defaults to 'vmware'. Possible values are 'vss' and 'vmware'.",
            "example": "vmware",
            "nullable": true,
            "type": "string"
          },
          "username": {
            "description": "Application server username. String of up to 255 printable ASCII characters.",
            "example": "user256",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditDateTimezoneSettings": {
        "nullable": true,
        "properties": {
          "date": {
            "description": "Unix epoch time local to the group. Seconds since last epoch i.e. 00:00 January 1, 1970. Setting this along with ntp_server causes ntp_server to be reset.",
            "example": 1598267193,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ntp_server": {
            "description": "Either IP address or hostname of the NTP server for this group.",
            "example": "0.abc.pool.ntp.org",
            "nullable": true,
            "type": "string"
          },
          "timezone": {
            "description": "Timezone in which this group is located. Plain string.",
            "example": "America/Los_Angeles",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditDnsSettings": {
        "nullable": true,
        "properties": {
          "dns_servers": {
            "description": "IP addresses for this groups dns servers. List of IP Addresses.",
            "items": {
              "$ref": "#/components/schemas/IPAddressObject"
            },
            "nullable": true,
            "type": "array"
          },
          "domain_name": {
            "description": "Domain name for this group. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "example": "example-1.com",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditIsnsSettings": {
        "nullable": true,
        "properties": {
          "isns_enabled": {
            "description": "Enable or disable iSNS.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "isns_port": {
            "description": "Port number for iSNS Server. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 1080,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "isns_server": {
            "description": "Hostname or IP Address of iSNS Server. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "example": "isns-server.com",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditPoolNimbleArrayDetail": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier for array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004801",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditProxySettings": {
        "nullable": true,
        "properties": {
          "proxy_port": {
            "description": "Proxy Port of HTTP Proxy Server. Integer value between 0-65535 representing TCP/IP port.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "proxy_server": {
            "description": "Hostname or IP Address of HTTP Proxy Server. Setting this attribute to an empty string will unset all proxy settings. String of alphanumeric characters, can be an empty string, or valid range must be from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "example": "example-1.com",
            "nullable": true,
            "type": "string"
          },
          "proxy_username": {
            "description": "Username to authenticate with HTTP Proxy Server. HTTP proxy server username, string up to 255 characters, special characters ([, ], `, ;, ampersand, tab, space, newline) are not allowed.",
            "example": "usr1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditQuorumWitnessInput": {
        "description": "Request body to start/stop quorum witness",
        "nullable": false,
        "properties": {
          "replicationPartnerSystemId": {
            "description": "SystemId of target replication partner",
            "example": "7CE816P0SR",
            "nullable": false,
            "type": "string"
          },
          "startQuorumWitness": {
            "description": "Specifies start/stop Quorum Witness connectivity on the storage system. If set true, ATF configuration is activated. If set false, ATF configuration is deactivated.",
            "example": true,
            "nullable": false,
            "type": "boolean"
          },
          "targetReplicationId": {
            "description": "Id of target replication partner on which quorum witness is configured",
            "example": "afb4961e47212e5bc88dd35db5be5c83",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "replicationPartnerSystemId",
          "targetReplicationId",
          "startQuorumWitness"
        ],
        "type": "object"
      },
      "EditReplicationPartner": {
        "description": "The request body for replication partner.",
        "nullable": false,
        "properties": {
          "control_port": {
            "description": "Port number of partner control interface. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "data_port": {
            "description": "Port number of partner data interface. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "description": {
            "description": "Description of replication partner. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "remotePartnerId": {
            "description": "Remote replication partner ID",
            "example": "005319ed73385876a4000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "repl_hostname": {
            "description": "IP address or hostname of partner data interface. String of up to 64 alphanumeric characters, - and . and colon are allowed after first character.",
            "example": "15.213.204.121",
            "nullable": true,
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/EditSourcePartner"
          },
          "subnet_label": {
            "deprecated": true,
            "description": "Label of the subnet used to replicate to this partner. String of up to 64 alphanumeric characters, - and . and colon are allowed after first character.",
            "example": "myobject-5",
            "type": "string"
          },
          "subnet_type": {
            "deprecated": true,
            "description": "Type of the subnet used to replicate to this partner. Possible values are 'invalid', 'unconfigured', 'mgmt', 'data', 'mgmt_data'.",
            "example": "mgmt",
            "nullable": true,
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/EditTargetPartner"
          },
          "targetSystemId": {
            "description": "Target system ID",
            "example": "005319ed73385876a4000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "throttles": {
            "description": "Throttles used while replicating from/to this partner. All the throttles for the partner.",
            "items": {
              "$ref": "#/components/schemas/ReplicationThrottle"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "EditReplicationPartnerInput": {
        "description": "Request body to edit replication partner",
        "nullable": false,
        "properties": {
          "addRcLinks": {
            "$ref": "#/components/schemas/AddRemoteCopyLinks"
          },
          "removeRcLinks": {
            "$ref": "#/components/schemas/RemoveRemoteCopyLinksInput"
          }
        },
        "type": "object"
      },
      "EditSecuritySettings": {
        "nullable": true,
        "properties": {
          "user_inactivity_timeout": {
            "description": "The amount of time in seconds that the user session is inactive before timing out. User inactivity timeout in second, valid range is from 1 to 43200 (720 minutes).",
            "example": 1800,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EditSmtpMailSettings": {
        "description": "Nimble mail-settings input.",
        "nullable": true,
        "properties": {
          "smtp_port": {
            "description": "Port number of SMTP Server. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 25,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "smtp_server": {
            "description": "Hostname or IP Address of SMTP Server. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "example": "example-1.com",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditSnmpSettings": {
        "nullable": true,
        "properties": {
          "snmp_community": {
            "description": "Community string to be used with SNMP. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "private",
            "nullable": true,
            "type": "string"
          },
          "snmp_get_enabled": {
            "description": "Accept SNMP commands.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "snmp_get_port": {
            "description": "Port number to which SNMP get requests should be sent. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 1080,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snmp_sys_contact": {
            "description": "Name of the SNMP administrator. Plain string.",
            "example": "System contact",
            "nullable": true,
            "type": "string"
          },
          "snmp_sys_location": {
            "description": "Location of the group. Plain string.",
            "example": "Location",
            "nullable": true,
            "type": "string"
          },
          "snmp_trap_enabled": {
            "description": "Enable or disable SNMP traps",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "snmp_trap_host": {
            "description": "Hostname or IP Address to send SNMP traps. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "example": "snmphost-1.com",
            "nullable": true,
            "type": "string"
          },
          "snmp_trap_port": {
            "description": "Port number of SNMP trap host. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 1080,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EditSourcePartner": {
        "anyOf": [
          {
            "properties": {
              "pool_id": {
                "description": "prop0 is \"pool_id\". The pool ID where volumes replicated from this partner will be created. Replica volumes created as clones ignore this parameter and are always created in the same pool as their parent volume. A 42 digit hexadecimal number.",
                "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
                "nullable": true,
                "type": "string"
              }
            }
          },
          {
            "properties": {
              "folder_id": {
                "description": "prop1 is \"folder_id\". The Folder ID within the pool where volumes replicated from this partner will be created. A 42 digit hexadecimal number. example: 2a0df0fe6f7dc7bb16000000000000000000004818",
                "nullable": true,
                "type": "string"
              }
            }
          }
        ],
        "description": "Source partner.",
        "nullable": true,
        "properties": {
          "hostname": {
            "description": "IP address or hostname of partner interface. This must be the partner's Group Management IP address. String of up to 64 alphanumeric characters, - and . and colon are allowed after first character.",
            "example": "15.213.204.163",
            "type": "string"
          },
          "name": {
            "description": "Name of the replication partner. String of up to 63 alphanumeric and can include hyphens characters but cannot start with hyphen.",
            "example": "replicationPartner1",
            "type": "string"
          },
          "subnet_label": {
            "description": "Label of the subnet used to replicate to this partner. String of up to 64 alphanumeric characters, - and . and colon are allowed after first character.",
            "example": "myobject-5",
            "type": "string"
          },
          "subnet_type": {
            "description": "Type of the subnet used to replicate to this partner. Possible values are 'invalid', 'unconfigured', 'mgmt', 'data', 'mgmt_data'.",
            "example": "mgmt",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditSupportSettings": {
        "nullable": true,
        "properties": {
          "allow_analytics_gui": {
            "description": "Enable or disable Analytics in Nimble GUI. The data gathered is used to evaluate and improve the product.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "allow_support_tunnel": {
            "description": "Enable or disable support tunnel.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "autosupport_enabled": {
            "description": "Enable or disable autosupport.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "EditSyslogdSettings": {
        "nullable": true,
        "properties": {
          "syslogd_enabled": {
            "description": "Enable or disable syslogd in system",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "syslogd_port": {
            "description": "Port number for syslogd server. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 1080,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "syslogd_server": {
            "description": "Hostname of the syslogd server. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "example": "sysloghost-1.com",
            "nullable": true,
            "type": "string"
          },
          "syslogd_servers": {
            "description": "syslogd server info.",
            "items": {
              "$ref": "#/components/schemas/NimbleSyslogdServerInfo"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "EditSystemParameters": {
        "nullable": true,
        "properties": {
          "alarms_enabled": {
            "description": "Enable or disable alarm feature.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "default_volume_limit": {
            "description": "Default limit for a volume space usage as a percentage of volume size. Volume will be taken offline/made non-writable on exceeding its limit. Percentage as integer from 0 to 100.",
            "example": 10,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "fc_enabled": {
            "description": "Enable or disable FC.This flag can be modified only on the physical array which supports FC.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "group_target_enabled": {
            "description": "Enable or disable group target.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "iscsi_enabled": {
            "description": "Enable or disable iSCSI.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "repl_throttle_list": {
            "description": "All the replication bandwidth limits on the system. All the throttles for the partner.",
            "items": {
              "$ref": "#/components/schemas/EditThrottle"
            },
            "nullable": true,
            "type": "array"
          },
          "vss_validation_timeout": {
            "description": "The amount of time in seconds to validate Microsoft VSS application synchronization before timing out. VSS validation timeout in second, valid range is from 1 to 3600 (60 minutes).",
            "example": 60,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EditTargetPartner": {
        "anyOf": [
          {
            "properties": {
              "pool_id": {
                "description": "prop0 is \"pool_id\". The pool ID where volumes replicated from this partner will be created. Replica volumes created as clones ignore this parameter and are always created in the same pool as their parent volume. A 42 digit hexadecimal number.",
                "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
                "nullable": true,
                "type": "string"
              }
            }
          },
          {
            "properties": {
              "folder_id": {
                "description": "prop1 is \"folder_id\". The Folder ID within the pool where volumes replicated from this partner will be created. A 42 digit hexadecimal number. example: 2a0df0fe6f7dc7bb16000000000000000000004818",
                "nullable": true,
                "type": "string"
              }
            }
          }
        ],
        "description": "Target partner.",
        "nullable": true,
        "properties": {
          "hostname": {
            "description": "IP address or hostname of partner interface. This must be the partner's Group Management IP address. String of up to 64 alphanumeric characters, - and . and colon are allowed after first character.",
            "example": "15.213.204.164",
            "type": "string"
          },
          "name": {
            "description": "Name of the replication partner. String of up to 63 alphanumeric and can include hyphens characters but cannot start with hyphen.",
            "example": "replicationPartner2",
            "type": "string"
          },
          "subnet_label": {
            "description": "Label of the subnet used to replicate to this partner. String of up to 64 alphanumeric characters, - and . and colon are allowed after first character.",
            "example": "myobject-5",
            "type": "string"
          },
          "subnet_type": {
            "description": "Type of the subnet used to replicate to this partner. Possible values are 'invalid', 'unconfigured', 'mgmt', 'data', 'mgmt_data'.",
            "example": "mgmt",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditThrottle": {
        "description": "A single throttle for the partner.",
        "nullable": true,
        "properties": {
          "days": {
            "description": "Comma separated list of days of the week or 'all'.",
            "example": "monday,tuesday",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Description of the throttle.",
            "example": "Throttle one",
            "nullable": true,
            "type": "string"
          },
          "thr_at_time": {
            "description": "Start time for the throttle.",
            "example": 10800,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "thr_bandwidth": {
            "description": "Bandwidth for the throttle in megabits per second or as the largest possible 64-bit signed integer (9223372036854775807) to indicate that there is no limit. This attribute is superseded by thr_bandwidth_limit_kbps. Use either thr_bandwidth or thr_bandwidth_kbps to set throttle bandwidth.",
            "example": 14,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "thr_bandwidth_kbps": {
            "description": "Bandwidth for the throttle in kilobits per second or as the largest possible 64-bit signed integer (9223372036854775807) to indicate that there is no limit. This atttibute is superseded by thr_bandwidth_limit_kbps. Use either thr_bandwidth or thr_bandwidth_kbps to set throttle bandwidth.",
            "example": 1400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "thr_bandwidth_limit_kbps": {
            "description": "Bandwidth for the throttle in kilobits per second or -1 to indicate that there is no limit.",
            "example": 1400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "thr_until_time": {
            "description": "End time for the throttle.",
            "example": 14400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EncryptionCipher": {
        "description": "Type of encryption cipher used. Possible values: 'aes_256_xts', 'none'.",
        "example": "none",
        "nullable": true,
        "type": "string"
      },
      "EncryptionKeyManager": {
        "description": "Is the master key on local or external key manager (output only). Possible values: 'external', 'local'.",
        "example": "local",
        "nullable": true,
        "type": "string"
      },
      "EncryptionMode": {
        "description": "Mode of encryption. Possible values: 'available', 'none', 'secure'.",
        "example": "none",
        "nullable": true,
        "type": "string"
      },
      "EncryptionScope": {
        "description": "Encryption scope. Possible values: 'volume', 'pool', 'none', 'group'.",
        "example": "none",
        "nullable": true,
        "type": "string"
      },
      "EncryptionSettings": {
        "description": "How encryption is configured for this group. Group encryption settings.",
        "nullable": true,
        "properties": {
          "cipher": {
            "$ref": "#/components/schemas/EncryptionCipher"
          },
          "encryption_active": {
            "description": "Is encryption active (output only).",
            "nullable": true,
            "type": "boolean"
          },
          "encryption_key_manager": {
            "$ref": "#/components/schemas/EncryptionKeyManager"
          },
          "master_key_set": {
            "description": "Is the master key set (output only).",
            "nullable": true,
            "type": "boolean"
          },
          "mode": {
            "$ref": "#/components/schemas/EncryptionMode"
          },
          "scope": {
            "$ref": "#/components/schemas/EncryptionScope"
          }
        },
        "type": "object"
      },
      "Error": {
        "properties": {
          "error": {
            "description": "Description of the error",
            "type": "string"
          },
          "errorCode": {
            "description": "Internal error code",
            "type": "string"
          }
        }
      },
      "ErrorCount": {
        "description": "Number of errors",
        "nullable": true,
        "properties": {
          "correctable": {
            "description": "correctable errors",
            "example": 0,
            "format": "Uint32",
            "nullable": true,
            "type": "integer"
          },
          "uncorrectable": {
            "description": "uncorrectable errors",
            "example": 0,
            "format": "Uint32",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "properties": {
          "error": {
            "description": "A user friendly error message",
            "example": "An example error message.",
            "type": "string"
          },
          "errorCode": {
            "description": "A machine-friendly identifier for the error response",
            "type": "string"
          },
          "traceId": {
            "description": "A unique identifier for the request",
            "example": "f57dcca3345820eb579c9317ce36dd92",
            "type": "string"
          }
        },
        "required": [
          "error",
          "errorCode",
          "traceId"
        ]
      },
      "FailoverMode": {
        "description": "Failover mode of the group Management Service. Possible values: 'Manual', 'Automatic'.",
        "example": "Manual",
        "nullable": true,
        "type": "string"
      },
      "FcInterfaceFilterableFields": {
        "nullable": true,
        "properties": {
          "controller_name": {
            "description": "Name (A or B) of the controller where the interface is hosted. Plain string. `Filter`",
            "example": "A",
            "nullable": true,
            "type": "string"
          },
          "fc_port_id": {
            "description": "ID of the port with which the interface is associated. `Filter`",
            "example": "1f01167316131",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the interface. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the interface. `Filter, Sort`",
            "example": "interface1.1",
            "nullable": true,
            "type": "string"
          },
          "wwnn": {
            "description": "World Wide Node Name for this Fibre Channel interface. `Filter, Sort`",
            "example": "56:c9:ce:90:9b:84:c9:00",
            "nullable": true,
            "type": "string"
          },
          "wwpn": {
            "description": "World Wide Port Name for this Fibre Channel interface. `Filter, Sort`",
            "example": "56:c9:ce:90:9b:84:c9:01",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FcPortSfp": {
        "nullable": true,
        "properties": {
          "fwVersion": {
            "nullable": true,
            "type": "string"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "nullable": true,
            "type": "string"
          },
          "qualified": {
            "nullable": true,
            "type": "boolean"
          },
          "rxLossPin": {
            "nullable": true,
            "type": "string"
          },
          "rxPowerLow": {
            "nullable": true,
            "type": "boolean"
          },
          "speed": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "txDisablePin": {
            "nullable": true,
            "type": "string"
          },
          "txFaultPin": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FcPortSfpSingle": {
        "nullable": true,
        "properties": {
          "fwVersion": {
            "nullable": true,
            "type": "string"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "nullable": true,
            "type": "string"
          },
          "qualified": {
            "nullable": true,
            "type": "boolean"
          },
          "rxLossPin": {
            "nullable": true,
            "type": "string"
          },
          "rxPowerLow": {
            "nullable": true,
            "type": "boolean"
          },
          "speed": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "txDisablePin": {
            "nullable": true,
            "type": "string"
          },
          "txFaultPin": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FieldsWithFilter": {
        "properties": {
          "hostname": {
            "description": "Application server hostname. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; Hypen and  colon are allowed after the first and before the last character. `Filter, Sort`",
            "example": "nimble-appserver.com",
            "type": "string"
          },
          "id": {
            "description": "Identifier for the application server. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "type": "string"
          },
          "name": {
            "description": "Name of the volume. String of up to 64 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. `Filter, Sort`",
            "example": "AppServer101",
            "type": "string"
          },
          "server_type": {
            "description": "Application server type. Possible values: 'vss', 'vmware'. `Filter, Sort`",
            "example": "vmware",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FieldsWithoutFilter": {
        "properties": {
          "hostname": {
            "description": "Application server hostname. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; Hypen and  colon are allowed after the first and before the last character.",
            "example": "nimble-appserver.com",
            "type": "string"
          },
          "id": {
            "description": "Identifier for the application server. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "type": "string"
          },
          "name": {
            "description": "Name of the volume. String of up to 64 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period.",
            "example": "AppServer101",
            "type": "string"
          },
          "server_type": {
            "description": "Application server type. Possible values: 'vss', 'vmware'.",
            "example": "vmware",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FleetPoolDetails": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/fleetAssociatedLinks"
          },
          "capacityUsed": {
            "description": "Capacity Used",
            "example": 56446,
            "type": "integer"
          },
          "customerId": {
            "description": "The customer application identifier",
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource          ",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "type": "string"
          },
          "name": {
            "description": "Name of the resource",
            "example": "Vega_7_test",
            "maxLength": 255,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed storage-pool object                ",
            "example": "/api/storage-systems/device-type1/7CE809P009/storage-pools/8fdba044f8d90c7922c17b9340b65178",
            "type": "string"
          },
          "systemId": {
            "description": "SystemID of the array",
            "example": "7CE809P009",
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FleetPoolList": {
        "nullable": true,
        "properties": {
          "capacityUsed": {
            "description": "Capacity Used",
            "example": 56446,
            "type": "integer"
          },
          "customerId": {
            "description": "The customer application identifier",
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource          ",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "type": "string"
          },
          "name": {
            "description": "Name of the resource",
            "example": "Vega_7_test",
            "maxLength": 255,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed storage-pool object       ",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/storage-pools/8fdba044f8d90c7922c17b9340b65178",
            "type": "string"
          },
          "systemId": {
            "description": "SystemID of the array",
            "example": "7CE809P009",
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GroupAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/controllers/010df0fe6f7dc7bb16000000000000000000000007",
            "type": "controllers"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "GroupState": {
        "description": "Group state. State of the array in the group. Possible values: 'invalid', 'initialized', 'unused', 'removing'.",
        "example": "initialized",
        "nullable": true,
        "type": "string"
      },
      "HPLLEDSINGLE": {
        "description": "LED state.",
        "enum": [
          "LED_UNKNOWN",
          "LED_OFF",
          "LED_GREEN",
          "LED_GREEN_BLNK",
          "LED_AMBER",
          "LED_AMBER_BLNK",
          "LED_BLUE",
          "LED_BLUE_BLNK",
          null
        ],
        "nullable": true,
        "type": "string"
      },
      "HostAgent": {
        "description": "Primera Host Agent",
        "nullable": true,
        "properties": {
          "IPAddr": {
            "description": "Ip Address",
            "example": "10.15.12.136",
            "nullable": true,
            "type": "string"
          },
          "architecture": {
            "description": "Architecture Name",
            "example": "SAN",
            "nullable": true,
            "type": "string"
          },
          "bootFromSan": {
            "description": "Boot from SAN",
            "example": "yes",
            "nullable": true,
            "type": "string"
          },
          "clusterID": {
            "description": "Cluster ID ",
            "example": "113245",
            "nullable": true,
            "type": "string"
          },
          "clusterName": {
            "description": "Cluster Cluster",
            "example": "SAN-cluster",
            "nullable": true,
            "type": "string"
          },
          "clusterSoftware": {
            "description": "Cluster OS",
            "example": "Linux",
            "nullable": true,
            "type": "string"
          },
          "clusterVersion": {
            "description": "Cluster Version ",
            "example": "v1.0.0",
            "nullable": true,
            "type": "string"
          },
          "hostApps": {
            "description": "Host Applications",
            "example": "mysql",
            "nullable": true,
            "type": "string"
          },
          "lastUpdated": {
            "description": "Primera Host Agent",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "Epoch Time",
                "example": 101780,
                "format": "Uint64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "String Time",
                "example": "123545",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "multiPathSoftware": {
            "description": "Multipath Software",
            "example": "OS",
            "nullable": true,
            "type": "string"
          },
          "multiPathSoftwareVersion": {
            "description": "MultiPath Software Version",
            "example": "v1.0.0",
            "nullable": true,
            "type": "string"
          },
          "os": {
            "description": "Operating System Name",
            "example": "Linux",
            "nullable": true,
            "type": "string"
          },
          "osPatch": {
            "description": "Os patch",
            "example": "v1.0.0",
            "nullable": true,
            "type": "string"
          },
          "osVersion": {
            "description": "Os version",
            "example": "v1.0.0",
            "nullable": true,
            "type": "string"
          },
          "reportedName": {
            "description": "Reported Name",
            "example": "slvs",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostDescriptors": {
        "description": "Host Descriptors",
        "nullable": true,
        "properties": {
          "IPAddr": {
            "description": "Ip Address",
            "example": "1.1.1.1",
            "nullable": true,
            "type": "string"
          },
          "comment": {
            "description": "Comment",
            "example": "Comments",
            "nullable": true,
            "type": "string"
          },
          "contact": {
            "description": "Contact",
            "example": "1234567788e",
            "nullable": true,
            "type": "string"
          },
          "location": {
            "description": "Location",
            "example": "US",
            "nullable": true,
            "type": "string"
          },
          "model": {
            "description": "Model",
            "example": "AIX",
            "nullable": true,
            "type": "string"
          },
          "os": {
            "description": "Operating System Name",
            "example": "Linux",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostDetails": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/scAssociatedLinks"
          },
          "associatedSystems": {
            "description": "system IDs to which the host belongs to.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "comment": {
            "description": "Comment",
            "example": "comment1",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "/data-ops-manager/host-initiators/0951b6508ec9f8747f08daf68925d81d",
            "nullable": true,
            "type": "string"
          },
          "contact": {
            "description": "Contact information",
            "example": "sanjay@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "type": "string"
          },
          "editStatus": {
            "description": "Host Update or Delete progress status. Possible status are: Update_In_Progress,Update_Success,Update_Failed,Delete_In_Progress,Delete_Failed,Not_Applicable.",
            "example": "Delete_Failed",
            "nullable": true,
            "type": "string"
          },
          "fqdn": {
            "description": "Fully qualified domain name of the host.",
            "example": "host1.hpe.com",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627534116,
            "format": "int64",
            "type": "integer"
          },
          "hostGroups": {
            "description": "Host group to which the host belongs to",
            "items": {
              "$ref": "#/components/schemas/HostGroupSummaryObject"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Identifier for host.",
            "example": "d548ef683c27403e96caa51816ddc72c",
            "nullable": true,
            "type": "string"
          },
          "initiators": {
            "description": "Host initiator list this host is associated with.",
            "items": {
              "$ref": "#/components/schemas/InitiatorSummary"
            },
            "nullable": true,
            "type": "array"
          },
          "ipAddress": {
            "description": "IP address of the host.",
            "example": "15.212.100.100",
            "nullable": true,
            "type": "string"
          },
          "location": {
            "description": "location.",
            "example": "India",
            "nullable": true,
            "type": "string"
          },
          "markedForDelete": {
            "description": "Indicates whether host group is marked for deletion or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "model": {
            "description": "Model",
            "example": "model1",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the host.",
            "example": "host1",
            "nullable": true,
            "type": "string"
          },
          "operatingSystem": {
            "description": "Host operating system.",
            "example": "Windows",
            "nullable": true,
            "type": "string"
          },
          "persona": {
            "description": "Host persona details.",
            "example": "AIX-Legacy",
            "nullable": true,
            "type": "string"
          },
          "protocol": {
            "description": "protocol supported are : FC ,iSCSI or NVMe",
            "example": "FC",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for host initiators",
            "example": "/api/v1/host-initiators/1",
            "nullable": true,
            "type": "string"
          },
          "subnet": {
            "description": "subnet.",
            "example": "255.255.255.0",
            "nullable": true,
            "type": "string"
          },
          "systems": {
            "description": "system IDs to which the host belongs to",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "The type of resource.",
            "example": "host-initiator",
            "type": "string"
          },
          "userCreated": {
            "description": "Indicates whether user created host or discovered host",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "HostGroupDetails": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/scAssociatedLinks"
          },
          "associatedSystems": {
            "description": "system IDs to which the host group belongs to.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "comment": {
            "description": "Comment",
            "example": "host-group-comment",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object ",
            "example": "/data-ops-manager/host-initiator-groups/a8c087fa6e95dd22cdf402c64e4bbe61",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "type": "string"
          },
          "editStatus": {
            "description": "Host group Update or Delete progress status. Possible status are: Update_In_Progress,Update_Success,Update_Failed,Delete_In_Progress,Delete_Failed,Not_Applicable",
            "example": "Delete_Failed",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627534116,
            "format": "int64",
            "type": "integer"
          },
          "hosts": {
            "description": "List of hosts.",
            "items": {
              "$ref": "#/components/schemas/HostSummaryForHSObject"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Identifier for host group.",
            "example": "e987ef683c27403e96caa51816ddc72c",
            "nullable": true,
            "type": "string"
          },
          "markedForDelete": {
            "description": "Indicates whether host group is marked for deletion or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the host group",
            "example": "host-group1",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for host initiator groups",
            "example": "/api/v1/host-initiator-groups/1",
            "nullable": true,
            "type": "string"
          },
          "systems": {
            "description": "system IDs to which the host group belongs to",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "The type of resource.",
            "example": "host-initiator-groups",
            "type": "string"
          },
          "userCreated": {
            "description": "Idicates whether user created host or discovered host",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "HostGroupObject": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/scAssociatedLinks"
          },
          "associatedSystems": {
            "description": "system IDs to which the host group belongs to.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "comment": {
            "description": "Comment",
            "example": "host-group-comment",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "/data-ops-manager/host-initiator-groups/a8c087fa6e95dd22cdf402c64e4bbe61",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "type": "string"
          },
          "editStatus": {
            "description": "Host Update or Delete progress status. Possible status are: Update_In_Progress,Update_Success,Update_Failed,Delete_In_Progress,Delete_Failed,Not_Applicable. `Filter`",
            "example": "Delete_Failed",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627534116,
            "format": "int64",
            "type": "integer"
          },
          "hosts": {
            "description": "List of hosts. `Filter` by hostId.",
            "items": {
              "$ref": "#/components/schemas/HostSummaryForHSObject"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Identifier for host group. `Filter`",
            "example": "d548ef683c27403e96caa51816ddc72c",
            "nullable": true,
            "type": "string"
          },
          "markedForDelete": {
            "description": "Indicates whether host group is marked for deletion or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the host group. `Filter, Sort`",
            "example": "host-group1",
            "nullable": true,
            "type": "string"
          },
          "systems": {
            "description": "system IDs to which the host group belongs to. `Filter`",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "The type of resource.",
            "example": "host-initiator-group",
            "type": "string"
          },
          "userCreated": {
            "description": "Indicates whether user created host or discovered host",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "HostGroupSummaryObject": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier for host group.",
            "example": "d548ef683c27403e96caa51816ddc72c",
            "nullable": true,
            "type": "string"
          },
          "markedForDelete": {
            "description": "Indicates whether host group is marked for deletion or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the host group",
            "example": "host-group1",
            "nullable": true,
            "type": "string"
          },
          "systems": {
            "description": "system IDs to which the host group belongs to",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "userCreated": {
            "description": "Idicates whether user created host or discovered host",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "HostGroupsList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/HostGroupObject"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "Page Limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "Page Offset",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for host initiator groups",
            "example": "/api/v1/host-initiator-groups",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of hosts",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "HostObject": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/scAssociatedLinks"
          },
          "associatedSystems": {
            "description": "system IDs to which the host belongs to.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "comment": {
            "description": "Comment",
            "example": "a sample host comment",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "/data-ops-manager/host-initiators/0951b6508ec9f8747f08daf68925d81d",
            "nullable": true,
            "type": "string"
          },
          "contact": {
            "description": "Contact information",
            "example": "sanjay@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "type": "string"
          },
          "editStatus": {
            "description": "Host Update or Delete progress status. Possible status are: Update_In_Progress,Update_Success,Update_Failed,Delete_In_Progress,Delete_Failed,Not_Applicable. `Filter`",
            "example": "Delete_Failed",
            "nullable": true,
            "type": "string"
          },
          "fqdn": {
            "description": "Fully qualified domain name of the host.",
            "example": "host1.hpe.com",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627534116,
            "format": "int64",
            "type": "integer"
          },
          "hostGroups": {
            "description": "Host group to which the host belongs to. `Filter` by hostGroupId.",
            "items": {
              "$ref": "#/components/schemas/HostGroupSummaryObject"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Identifier for host. `Filter`",
            "example": "6848ef683c27403e96caa51816ddc72c",
            "nullable": true,
            "type": "string"
          },
          "initiators": {
            "description": "Host initiator list this host is associated with. `Filter` by initiatorId.",
            "items": {
              "$ref": "#/components/schemas/InitiatorSummary"
            },
            "nullable": true,
            "type": "array"
          },
          "ipAddress": {
            "description": "IP address of the host.",
            "example": "15.212.100.100",
            "nullable": true,
            "type": "string"
          },
          "location": {
            "description": "location.",
            "example": "India",
            "nullable": true,
            "type": "string"
          },
          "markedForDelete": {
            "description": "Indicates whether host is marked for deletion or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "model": {
            "description": "Model",
            "example": "model1",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the host. `Filter, Sort`",
            "example": "host1",
            "nullable": true,
            "type": "string"
          },
          "operatingSystem": {
            "description": "Host operating system. `Filter`",
            "example": "Windows",
            "nullable": true,
            "type": "string"
          },
          "persona": {
            "description": "Host persona details.",
            "example": "AIX-Legacy",
            "nullable": true,
            "type": "string"
          },
          "protocol": {
            "description": "protocol supported are : FC ,iSCSI or NVMe",
            "example": "FC",
            "nullable": true,
            "type": "string"
          },
          "subnet": {
            "description": "subnet.",
            "example": "255.255.255.0",
            "nullable": true,
            "type": "string"
          },
          "systems": {
            "description": "system IDs to which the host belongs to. `Filter`",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "The type of resource.",
            "example": "host-initiator",
            "type": "string"
          },
          "userCreated": {
            "description": "Indicates whether user created host or discovered host",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "HostProximityInput": {
        "nullable": false,
        "properties": {
          "hostName": {
            "description": "Name of the host of which proximity setting is getting changed.",
            "example": "tstHost",
            "nullable": false,
            "type": "string"
          },
          "proximity": {
            "description": "Host proximity setting for Active Peer Persistence configuration. Supported values are - PRIMARY, SECONDARY and ALL",
            "enum": [
              "PRIMARY",
              "SECONDARY",
              "ALL"
            ],
            "example": "PRIMARY",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "hostName",
          "proximity"
        ],
        "type": "object"
      },
      "HostProximityValue": {
        "nullable": true,
        "properties": {
          "groupName": {
            "description": "Replication Group Name",
            "example": "RCGName",
            "nullable": true,
            "type": "string"
          },
          "groupUid": {
            "description": "Replication Group ID",
            "example": "rcg1",
            "nullable": true,
            "type": "string"
          },
          "hostId": {
            "description": "Host ID",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "hostName": {
            "description": "Host name",
            "example": "host1",
            "nullable": true,
            "type": "string"
          },
          "proximitySystemName": {
            "description": "Host proximity value",
            "example": "primary",
            "nullable": true,
            "type": "string"
          },
          "systemName": {
            "description": "Source system name",
            "example": "system1",
            "nullable": true,
            "type": "string"
          },
          "systemUid": {
            "description": "Source system serial number",
            "example": "SGH014XGSP",
            "nullable": true,
            "type": "string"
          },
          "targetName": {
            "description": "Target system name",
            "example": "system2",
            "nullable": true,
            "type": "string"
          },
          "targetSystemId": {
            "description": "Target system serial number",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostSummaryForHSObject": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier for host.",
            "example": "6848ef683c27403e96caa51816ddc72c",
            "nullable": true,
            "type": "string"
          },
          "initiators": {
            "description": "Initiator to which the host belongs to.",
            "items": {
              "$ref": "#/components/schemas/InitiatorSummary"
            },
            "nullable": true,
            "type": "array"
          },
          "ipAddress": {
            "description": "IP address of the host.",
            "example": "15.212.100.100",
            "nullable": true,
            "type": "string"
          },
          "markedForDelete": {
            "description": "Indicates whether host is marked for deletion or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the host.",
            "example": "host1",
            "nullable": true,
            "type": "string"
          },
          "systems": {
            "description": "system IDs to which the host belongs to",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "userCreated": {
            "description": "Indicates whether user created host or discovered host",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "HostSummaryForInitiatorObject": {
        "nullable": true,
        "properties": {
          "hostGroups": {
            "description": "Host group to which the host belongs to.",
            "items": {
              "$ref": "#/components/schemas/HostGroupSummaryObject"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Identifier for host.",
            "example": "6848ef683c27403e96caa51816ddc72c",
            "nullable": true,
            "type": "string"
          },
          "ipAddress": {
            "description": "IP address of the host.",
            "example": "15.212.100.100",
            "nullable": true,
            "type": "string"
          },
          "markedForDelete": {
            "description": "Indicates whether host is marked for deletion or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the host.",
            "example": "host1",
            "nullable": true,
            "type": "string"
          },
          "systems": {
            "description": "system IDs to which the host belongs to",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "userCreated": {
            "description": "Indicates whether user created host or discovered host",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "HostsList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/HostObject"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "Page Limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "Page Offset",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for host initiators",
            "example": "/api/v1/host-initiators",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of hosts",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "IPAddressObject": {
        "nullable": true,
        "properties": {
          "ip_addr": {
            "description": "An IP Address.",
            "example": "10.0.0.11",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImportCertificateInput": {
        "description": "Import Certificate input.",
        "properties": {
          "authorityChain": {
            "description": "The authority chain for the new certificate.",
            "example": "-----BEGIN CERTIFICATE REQUEST-----abc----END CERTIFICATE REQUEST----- \\n-----BEGIN CERTIFICATE REQUEST-----pqr----END CERTIFICATE REQUEST-----",
            "nullable": false,
            "type": "string"
          },
          "certificate": {
            "description": "The certificate that results from the Certificate Signing Request (CSR).",
            "example": "-----BEGIN CERTIFICATE REQUEST-----abc----END CERTIFICATE REQUEST-----",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "authorityChain",
          "certificate"
        ],
        "type": "object"
      },
      "Initiator": {
        "nullable": true,
        "properties": {
          "address": {
            "description": "Address of the initiator. `Filter`",
            "example": "100008F1EABFE61C",
            "nullable": true,
            "type": "string"
          },
          "associatedLinks": {
            "$ref": "#/components/schemas/scAssociatedLinks"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "type": "string"
          },
          "driverVersion": {
            "description": "Driver version of the host initiator.",
            "example": "4.1",
            "nullable": true,
            "type": "string"
          },
          "firmwareVersion": {
            "description": "Firmware version of the host initiator.",
            "example": "10.0",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627534116,
            "format": "int64",
            "type": "integer"
          },
          "hbaModel": {
            "description": "Host bus adaptor model of the host initiator",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "hostSpeed": {
            "description": "Host speed",
            "example": 1000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "hosts": {
            "description": "List of hosts. `Filter` by hostId.",
            "items": {
              "$ref": "#/components/schemas/HostSummaryForInitiatorObject"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Identifier for an initiator. `Filter`",
            "example": "d548ef683c27403e96caa51816ddc72c",
            "nullable": true,
            "type": "string"
          },
          "ipAddress": {
            "description": "IP address of the initiator.",
            "example": "15.212.100.100",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the initiator. `Filter, Sort`",
            "example": "init1",
            "nullable": true,
            "type": "string"
          },
          "protocol": {
            "description": "protocol supported are : FC ,iSCSI or NVMe",
            "example": "FC",
            "nullable": true,
            "type": "string"
          },
          "systems": {
            "description": "system IDs to which the host initiator is linked to. `Filter`",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "The type of resource.",
            "example": "initiator",
            "type": "string"
          },
          "vendor": {
            "description": "Vendor of the host initiator",
            "example": "hpe",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "InitiatorDetails": {
        "nullable": true,
        "properties": {
          "address": {
            "description": "Address of the initiator. ",
            "example": "100008F1EABFE61C",
            "nullable": true,
            "type": "string"
          },
          "associatedLinks": {
            "$ref": "#/components/schemas/scAssociatedLinks"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "type": "string"
          },
          "driverVersion": {
            "description": "Driver version of the host initiator.",
            "example": "4.1",
            "nullable": true,
            "type": "string"
          },
          "firmwareVersion": {
            "description": "Firmware version of the host initiator.",
            "example": "10.0",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627534116,
            "format": "int64",
            "type": "integer"
          },
          "hbaModel": {
            "description": "Host bus adaptor model of the host initiator",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "hostSpeed": {
            "description": "Host speed",
            "example": 1000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "hosts": {
            "description": "List of hosts. `Filter` by hostId.",
            "items": {
              "$ref": "#/components/schemas/HostSummaryForInitiatorObject"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Identifier for an initiator.",
            "example": "e748ef683c27403e96caa51816ddc72c",
            "nullable": true,
            "type": "string"
          },
          "ipAddress": {
            "description": "IP address of the initiator.",
            "example": "15.212.100.100",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the initiator.",
            "example": "init1",
            "nullable": true,
            "type": "string"
          },
          "protocol": {
            "description": "protocol supported are : FC ,iSCSI or NVMe",
            "example": "FC",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for initiators",
            "example": "/api/v1/initiators/1",
            "nullable": true,
            "type": "string"
          },
          "systems": {
            "description": "system IDs to which the host initiator is linked to",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "The type of resource.",
            "example": "initiator",
            "type": "string"
          },
          "vendor": {
            "description": "Vendor of the host initiator",
            "example": "hpe",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "InitiatorGroupFilterableFields": {
        "nullable": true,
        "properties": {
          "access_protocol": {
            "description": "Initiator group access protocol. Possible values: 'iscsi', 'fc'.`Filter, Sort`",
            "example": "iscsi",
            "nullable": true,
            "type": "string"
          },
          "app_uuid": {
            "description": "Application identifier of initiator group. String of up to 255 alphanumeric characters, hyphen, colon, dot and underscore are allowed.`Filter, Sort`",
            "example": "rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18",
            "nullable": true,
            "type": "string"
          },
          "host_type": {
            "description": "Initiator group host type. Available options are auto and hpux. The default option is auto. This attribute will be applied to all the initiators in the initiator group. Initiators with different host OSes should not be kept in the same initiator group having a non-default host type attribute. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for initiator group. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of initiator group. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.`Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "InitiatorGroupFilterableFieldsWithoutFilter": {
        "nullable": true,
        "properties": {
          "access_protocol": {
            "description": "Initiator group access protocol. Possible values: 'iscsi', 'fc'.",
            "example": "iscsi",
            "nullable": true,
            "type": "string"
          },
          "app_uuid": {
            "description": "Application identifier of initiator group. String of up to 255 alphanumeric characters, hyphen, colon, dot and underscore are allowed",
            "example": "rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18",
            "nullable": true,
            "type": "string"
          },
          "host_type": {
            "description": "Initiator group host type. Available options are auto and hpux. The default option is auto. This attribute will be applied to all the initiators in the initiator group. Initiators with different host OSes should not be kept in the same initiator group having a non-default host type attribute. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for initiator group. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of initiator group. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "InitiatorInput": {
        "nullable": true,
        "properties": {
          "address": {
            "description": "Address of the initiator.",
            "example": "100008F1EABFE61C",
            "nullable": true,
            "type": "string"
          },
          "driverVersion": {
            "description": "Driver version of the host initiator.",
            "example": "4.1",
            "nullable": true,
            "type": "string"
          },
          "firmwareVersion": {
            "description": "Firmware version of the host initiator.",
            "example": "10.0",
            "nullable": true,
            "type": "string"
          },
          "hbaModel": {
            "description": "Host bus adaptor model of the host initiator",
            "example": "model-5",
            "nullable": true,
            "type": "string"
          },
          "hostSpeed": {
            "description": "Host speed",
            "example": 1000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ipAddress": {
            "description": "IP address of the initiator.",
            "example": "15.212.100.100",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the initiator.",
            "example": "init1",
            "nullable": true,
            "type": "string"
          },
          "protocol": {
            "description": "protocol supported are : iSCSI or NVMe",
            "example": "iSCSI",
            "nullable": true,
            "type": "string"
          },
          "vendor": {
            "description": "Vendor of the host initiator",
            "example": "hpe",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address",
          "protocol"
        ],
        "type": "object"
      },
      "InitiatorList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Initiator"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "Page Limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "Page Offset",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for initiators",
            "example": "/api/v1/initiators",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of host initiators",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InitiatorSummary": {
        "nullable": true,
        "properties": {
          "address": {
            "description": "Address of the initiator. ",
            "example": "100008F1EABFE61C",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for an initiator.",
            "example": "d548ef683c27403e96caa51816ddc72c",
            "nullable": true,
            "type": "string"
          },
          "ipAddress": {
            "description": "IP address of the initiator.",
            "example": "15.212.100.100",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the initiator.",
            "example": "init1",
            "nullable": true,
            "type": "string"
          },
          "protocol": {
            "description": "protocol supported are : FC ,iSCSI or NVMe",
            "example": "FC",
            "nullable": true,
            "type": "string"
          },
          "systems": {
            "description": "system IDs to which the initiator belongs to.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "IpListInfo": {
        "nullable": true,
        "properties": {
          "ip": {
            "description": "Associated ip address",
            "example": "xx.xx.xx",
            "nullable": true,
            "type": "string"
          },
          "vlan_id": {
            "description": "vlan id.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "IssueDetails": {
        "properties": {
          "additionalDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsoleReference"
              }
            ],
            "description": "A link to be displayed in the Issues UI."
          },
          "body": {
            "description": "Long description with more details including possible remediations.",
            "type": "string"
          },
          "category": {
            "description": "Category of the issue. PERFORMANCE, CAPACITY, etc",
            "type": "string"
          },
          "clearedAt": {
            "description": "Time when the issue was cleared. RFC 3339 timestamp",
            "format": "date-time",
            "type": "string"
          },
          "createdAt": {
            "description": "Time when the issue was created. RFC 3339 timestamp",
            "format": "date-time",
            "type": "string"
          },
          "customerId": {
            "description": "Primary identifier for the customer (UUID) associated with the issue.",
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value incremented every time the resource is updated",
            "type": "string"
          },
          "id": {
            "description": "Primary identifier for the issue.",
            "type": "string"
          },
          "issueType": {
            "description": "The type of the issue. Eg: ISSUE, RECOMMENDATION",
            "type": "string"
          },
          "lastOccurredAt": {
            "description": "Time when the issue last occurred. RFC 3339 timestamp",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "friendly name of the resource given by the system",
            "type": "string"
          },
          "occurrenceCount": {
            "description": "Indicates the number of occurrences of the issue",
            "type": "integer"
          },
          "relatedResource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceReference"
              }
            ],
            "description": "Details of the resource related to the issue"
          },
          "relatedResourceOwner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceReference"
              }
            ],
            "description": "Details of the owner of the resource related to the issue"
          },
          "resourceUri": {
            "description": "URI of the issue. Eg: /api/v1/issues/{id}",
            "type": "string"
          },
          "ruleId": {
            "description": "Indicates the problem associated with the issue. Disambiguated per system.",
            "type": "string"
          },
          "severity": {
            "description": "Severity of the issue. For issue: CRITICAL, WARNING, INFO. For reco: HIGH, MEDIUM, LOW",
            "type": "string"
          },
          "state": {
            "description": "State of the issue. Eg: CREATED, ASSIGNED, CLOSED, SNOOZED, DELETED, etc",
            "type": "string"
          },
          "title": {
            "description": "One line description of the issue",
            "type": "string"
          },
          "type": {
            "description": "Type of the resource. In this case - issue",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "IssuesList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/IssueDetails"
            },
            "type": "array"
          },
          "pageLimit": {
            "description": "The number of items retrieved from the pageOffset",
            "type": "integer"
          },
          "pageOffset": {
            "description": "The offset specified in the offset query parameter.",
            "type": "integer"
          },
          "total": {
            "description": "The total count of objects in the result set.",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "pageOffset",
          "pageLimit",
          "total"
        ]
      },
      "KeyValue": {
        "nullable": true,
        "properties": {
          "key": {
            "description": "Identifier of key-value pair.",
            "example": "key1",
            "nullable": true,
            "type": "string"
          },
          "value": {
            "description": "Value of key-value pair.",
            "example": "value1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "KpiMetrics": {
        "description": "kpi metrics with read, write and total average values",
        "nullable": true,
        "properties": {
          "read": {
            "$ref": "#/components/schemas/pmPerfData"
          },
          "total": {
            "$ref": "#/components/schemas/pmPerfData"
          },
          "write": {
            "$ref": "#/components/schemas/pmPerfData"
          }
        },
        "type": "object"
      },
      "LED": {
        "description": "LED state.",
        "enum": [
          "LED_UNKNOWN",
          "LED_OFF",
          "LED_GREEN",
          "LED_GREEN_BLNK",
          "LED_AMBER",
          "LED_AMBER_BLNK",
          "LED_BLUE",
          "LED_BLUE_BLNK",
          null
        ],
        "example": "LED_UNKNOWN",
        "nullable": true,
        "type": "string"
      },
      "LocateInput": {
        "nullable": true,
        "properties": {
          "locate": {
            "description": "Indicates if the locate beacon should be enabled or not",
            "example": true,
            "nullable": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ManagementServiceBackupStatus": {
        "description": "HA status of the group Management Service. Possible values: 'in_sync', 'remove_in_progress', 'yet_to_setup', 'unsetup_in_progress', 'setup_in_progress', 'out_of_sync', 'add_in_progress', 'setup_failed'.",
        "example": "setup_in_progress",
        "nullable": true,
        "type": "string"
      },
      "MergeState": {
        "description": "State of group merge. Possible values: 'dset_start', 'dest_DB', 'dest_DB_done', 'dest_reassigned', 'dest_relinquish', 'dest_DB_failed', 'src_start', 'src_quiesced', 'src_reassigned', 'src_quiesce_failed', 'src_reassign_failed', 'none'.",
        "example": "none",
        "nullable": true,
        "type": "string"
      },
      "NICDetails": {
        "nullable": true,
        "properties": {
          "data_ip": {
            "description": "Data IP address.",
            "example": "128.0.0.1",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of NIC.",
            "example": "NICName",
            "nullable": true,
            "type": "string"
          },
          "subnet_label": {
            "description": "Subnet label for this NIC.",
            "example": "255.255.255.0",
            "nullable": true,
            "type": "string"
          },
          "tagged": {
            "description": "Identify whether the NIC is tagged.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "NetworkInterfaceFilterableFields": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "Identifier for the array. A 42 digit hexadecimal number. `Filter`",
            "example": "0900000000000004d3000000000000000000000004",
            "nullable": true,
            "type": "string"
          },
          "controller_name": {
            "description": "Name (A or B) of the controller where the interface is hosted. Plain string. `Filter`",
            "example": "A",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the interface. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the interface. `Filter`",
            "example": "interface1.1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleAccessControlRecordDetails": {
        "nullable": true,
        "properties": {
          "apply_to": {
            "description": "External management agent type. Possible values:'volume', 'pe', 'vvol_volume', 'vvol_snapshot', 'snapshot', 'both'.",
            "example": "volume",
            "nullable": true,
            "type": "string"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/access-control-records/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "pe_ids": {
            "description": "List of candidate protocol endpoints that may be used to access the Virtual Volume. One of them will be selected for the access control record. This field is required only when creating an access control record for a Virtual Volume.",
            "items": {
              "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "snapluns": {
            "description": "Information about the snapshot LUNs associated with this access control record. This field is meaningful when the online snapshot can be accessed as a LUN in the group.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsSnapLunInfo"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "vol_agent_type": {
            "description": "External management agent type. Possible values:'smis', 'vvol', 'openstack', 'openstackv2', 'none'.",
            "example": "smis",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleAccessControlRecordDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleAccessControlRecordFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleAccessControlRecordDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed access-control-record object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/access-control-records/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleAccessControlRecordFieldsWithSortKey": {
        "nullable": true,
        "properties": {
          "access_protocol": {
            "description": "Access protocol of the volume. Possible values:'iscsi', 'fc'. `Filter, Sort`",
            "example": "fc",
            "nullable": true,
            "type": "string"
          },
          "chap_user_id": {
            "description": "Identifier for the CHAP user. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "chap_user_name": {
            "description": "Flag denoting if data in the associated volume should be compressed. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this access control record was created. `Filter, Sort`",
            "example": 1600169692,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Identifier for the access control record. `Filter`",
            "example": "0d4323bdd90b39c3a7000000000000000000000012",
            "nullable": true,
            "type": "string"
          },
          "initiator_group_id": {
            "description": "Identifier for the initiator group. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "initiator_group_name": {
            "description": "Name of the initiator group. `Filter, Sort`",
            "example": "3PAR-Host",
            "nullable": true,
            "type": "string"
          },
          "last_modified": {
            "description": "Time when this access control record was last modified. `Filter, Sort`",
            "example": 1600169692,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "lun": {
            "description": "If this access control record applies to a regular volume, this attribute is the volume's LUN (Logical Unit Number). If the access protocol is iSCSI, the LUN will be 0. However, if the access protocol is Fibre Channel, the LUN will be in the range from 0 to 2047. If this record applies to a Virtual Volume, this attribute is the volume's secondary LUN in the range from 0 to 399999, for both iSCSI and Fibre Channel. If the record applies to a OpenstackV2 volume, the LUN will be in the range from 0 to 2047, for both iSCSI and Fibre Channel. If this record applies to a protocol endpoint or only a snapshot, this attribute is not meaningful and is set to null. `Filter, Sort`",
            "example": 8,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pe_id": {
            "description": "Identifier for the protocol endpoint this access control record applies to. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "pe_lun": {
            "description": "LUN (Logical Unit Number) to associate with this protocol endpoint. Valid LUNs are in the 0-2047 range. `Filter, Sort`",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pe_name": {
            "description": "Name of the protocol endpoint this access control record applies to. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "snap_id": {
            "description": "Identifier for the snapshot this access control record applies to. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "snap_name": {
            "description": "Name of the snapshot this access control record applies to. `Filter, Sort`",
            "example": "snap_test",
            "nullable": true,
            "type": "string"
          },
          "vol_id": {
            "description": "Identifier for the volume this access control record applies to. `Filter, Sort`",
            "example": "064323bdd90b39c3a7000000000000000000000016",
            "nullable": true,
            "type": "string"
          },
          "vol_name": {
            "description": "Name of the volume this access control record applies to. `Filter, Sort`",
            "example": "vv1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleAccessControlRecordFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "access_protocol": {
            "description": "Access protocol of the volume. Possible values:'iscsi', 'fc'.",
            "example": "fc",
            "nullable": true,
            "type": "string"
          },
          "chap_user_id": {
            "description": "Identifier for the CHAP user.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "chap_user_name": {
            "description": "Flag denoting if data in the associated volume should be compressed.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this access control record was created.",
            "example": 1600169692,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Identifier for the access control record.",
            "example": "0d4323bdd90b39c3a7000000000000000000000012",
            "nullable": true,
            "type": "string"
          },
          "initiator_group_id": {
            "description": "Identifier for the initiator group.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "initiator_group_name": {
            "description": "Name of the initiator group.",
            "example": "3PAR-Host",
            "nullable": true,
            "type": "string"
          },
          "last_modified": {
            "description": "Time when this access control record was last modified.",
            "example": 1600169692,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "lun": {
            "description": "If this access control record applies to a regular volume, this attribute is the volume's LUN (Logical Unit Number). If the access protocol is iSCSI, the LUN will be 0. However, if the access protocol is Fibre Channel, the LUN will be in the range from 0 to 2047. If this record applies to a Virtual Volume, this attribute is the volume's secondary LUN in the range from 0 to 399999, for both iSCSI and Fibre Channel. If the record applies to a OpenstackV2 volume, the LUN will be in the range from 0 to 2047, for both iSCSI and Fibre Channel. If this record applies to a protocol endpoint or only a snapshot, this attribute is not meaningful and is set to null.",
            "example": 8,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pe_id": {
            "description": "Identifier for the protocol endpoint this access control record applies to.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "pe_lun": {
            "description": "LUN (Logical Unit Number) to associate with this protocol endpoint. Valid LUNs are in the 0-2047 range.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pe_name": {
            "description": "Name of the protocol endpoint this access control record applies to.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "snap_id": {
            "description": "Identifier for the snapshot this access control record applies to.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "snap_name": {
            "description": "Name of the snapshot this access control record applies to.",
            "example": "snap_test",
            "nullable": true,
            "type": "string"
          },
          "vol_id": {
            "description": "Identifier for the volume this access control record applies to.",
            "example": "064323bdd90b39c3a7000000000000000000000016",
            "nullable": true,
            "type": "string"
          },
          "vol_name": {
            "description": "Name of the volume this access control record applies to.",
            "example": "vv1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleAccessControlRecordList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleAccessControlRecordFieldsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleAccessControlRecordDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for Access Control Record objects",
            "example": "api/v1/storage-systems/nimble/2a0df0fe6f7dc7bb16000000000000000000004817/access-control-records",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of Access Control Records.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleAddVolumeToVolumeCollectionInput": {
        "description": "Add volume to volume collection input.",
        "properties": {
          "volume_ids": {
            "description": "Volume ids that need to be added to volume collections.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        }
      },
      "NimbleAlarmsDetails": {
        "nullable": true,
        "properties": {
          "activity": {
            "description": "Description of the alarms. String of 1-1476 printable characters.",
            "example": "Created snapshot % of volume %",
            "nullable": true,
            "type": "string"
          },
          "alarm_type": {
            "description": "Identifier for type of alarm. Non-negative integer in range [0,2147483647].",
            "example": 10,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/alarms/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "summary": {
            "description": "Summary of the alarm. Plain string.",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleAlarmsFieldsWithSortKey": {
        "nullable": true,
        "properties": {
          "ack_time": {
            "description": "Time when this alarm was acknowledged. Seconds since last epoch i.e. 00:00 January 1, 1970. `Filter, Sort`",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "activity": {
            "description": "Description of activity performed and recorded in alarm. String of 1-1476 printable characters. `Filter, Sort`",
            "example": "Created snapshot % of volume %",
            "nullable": true,
            "type": "string"
          },
          "array": {
            "description": "The array name where the alarm is generated.  Possible values: array serial number, or '-'. `Filter, Sort`",
            "example": "AC-109084",
            "nullable": true,
            "type": "string"
          },
          "category": {
            "description": "Category of the alarm. Possible values: 'unknown', 'hardware', 'service', 'replication', 'volume', 'update', 'configuration', 'test', 'security', 'array_upgrade',cloud_console `Filter, Sort`",
            "example": "unknown",
            "nullable": true,
            "type": "string"
          },
          "curr_onset_event_id": {
            "description": "Identifier for the current onset event. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the alarm record. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "next_notification_time": {
            "description": "Time when next reminder for the alarm will be sent. Signed 64-bit integer. `Filter, Sort`",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "object_id": {
            "description": "Identifier of object operated upon. A 42 digit hexadecimal number.  `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "object_name": {
            "description": "Name of object operated upon. String of up to 400 alphanumeric characters, - and . and : and \" \" are allowed after first character.  `Filter, Sort`",
            "example": "volumes in performance policy default",
            "nullable": true,
            "type": "string"
          },
          "object_type": {
            "description": "Type of the object being operated upon. Possible values: 'active_directory', 'group', 'chapuser', 'initiatorgrp', 'perfpolicy', 'snapshot', 'snapcoll', 'vol', 'volcoll', 'partner', 'array', 'pool', 'initiator', 'protsched', 'volacl', 'throttle', 'sshkey', 'user', 'protpol', 'prottmpl', 'branch', 'route', 'role', 'privilege', 'netconfig', 'events', 'session', 'subnet', 'array_netconfig', 'nic', 'initiatorgrp_subnet', 'fc_initiator_alias', 'fc_port', 'fc_interface_collection', 'fc', 'event_dipatcher', 'fc_target_port_group', 'encrypt_key', 'encrypt_config', 'snapshot_lun', 'syslog', 'async_job', 'application_server', 'audit_log', 'ip address', 'disk', 'shelf', 'protocol_endpoint', 'folder', 'pe_acl', 'vvol', 'vvol_acl', 'alarm' ,'folset','hc_cluster_config','user group', 'user_policy', 'witness', 'support', 'keymanager', 'trusted_oauth_issuer', 'client_credential'. `Filter, Sort`",
            "example": "group",
            "nullable": true,
            "type": "string"
          },
          "onset_time": {
            "description": "Time when this alarm was triggered. Seconds since last epoch i.e. 00:00 January 1, 1970. `Filter, Sort`",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "remind_every": {
            "description": "Frequency of notification. This number and the remind_every_unit define how frequent one alarm notification is sent. `Filter, Sort`",
            "example": 10,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "remind_every_unit": {
            "description": "Time unit over which to send the number of notification specified in 'remind_every'. For example, a value of 'days' with a 'remind_every' of '1' results in one notification every day. Possible values: 'minutes', 'hours', 'days', 'weeks'. `Filter, Sort`",
            "example": "remind_every",
            "nullable": true,
            "type": "string"
          },
          "severity": {
            "description": "Severity level of the event. Possible values: 'warning', 'critical'. `Filter, Sort`",
            "example": "info",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Status of the operation -- open or acknowledged. Possible values: 'open', 'acknowledged'. `Filter, Sort`",
            "example": "open",
            "nullable": true,
            "type": "string"
          },
          "user_full_name": {
            "description": "Full name of the user who acknowledged the alarm. Alphanumeric string of up to 64 chars, starts with letter, can include space, apostrophe('), hyphen(-). `Filter, Sort`",
            "example": "User-13 Peterson",
            "nullable": true,
            "type": "string"
          },
          "user_id": {
            "description": "Identifier of the user who acknowledged the alarm. A 42 digit hexadecimal number.  `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "user_name": {
            "description": "Username of the user who acknowledged the alarm. String of up to 80 alphanumeric characters, beginning with a letter. For Active Directory users, it can include backslash (\\), dash (-), period (.), underscore (_) and space.  `Filter, Sort`",
            "example": "user1, companydomain\\user",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleAlarmsFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "ack_time": {
            "description": "Time when this alarm was acknowledged. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "activity": {
            "description": "Description of activity performed and recorded in alarm. String of 1-1476 printable characters.",
            "example": "Created snapshot % of volume %",
            "nullable": true,
            "type": "string"
          },
          "alarm_type": {
            "description": "Identifier for type of alarm. Non-negative integer in range [0,2147483647].",
            "example": 10,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "array": {
            "description": "The array name where the alarm is generated.  Possible values: array serial number, or '-'.",
            "example": "AC-109084",
            "nullable": true,
            "type": "string"
          },
          "category": {
            "description": "Category of the alarm. Possible values: 'unknown', 'hardware', 'service', 'replication', 'volume', 'update', 'configuration', 'test', 'security', 'array_upgrade',cloud_console",
            "example": "unknown",
            "nullable": true,
            "type": "string"
          },
          "curr_onset_event_id": {
            "description": "Identifier for the current onset event. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the alarm record. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "next_notification_time": {
            "description": "Time when next reminder for the alarm will be sent. Signed 64-bit integer.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "object_id": {
            "description": "Identifier of object operated upon. A 42 digit hexadecimal number.",
            "example": "volumes in performance policy default",
            "nullable": true,
            "type": "string"
          },
          "object_name": {
            "description": "Name of object operated upon. String of up to 400 alphanumeric characters, - and . and : and \" \" are allowed after first character.",
            "example": "volumes in performance policy default",
            "nullable": true,
            "type": "string"
          },
          "object_type": {
            "description": "Type of the object being operated upon. Possible values: 'active_directory', 'group', 'chapuser', 'initiatorgrp', 'perfpolicy', 'snapshot', 'snapcoll', 'vol', 'volcoll', 'partner', 'array', 'pool', 'initiator', 'protsched', 'volacl', 'throttle', 'sshkey', 'user', 'protpol', 'prottmpl', 'branch', 'route', 'role', 'privilege', 'netconfig', 'events', 'session', 'subnet', 'array_netconfig', 'nic', 'initiatorgrp_subnet', 'fc_initiator_alias', 'fc_port', 'fc_interface_collection', 'fc', 'event_dipatcher', 'fc_target_port_group', 'encrypt_key', 'encrypt_config', 'snapshot_lun', 'syslog', 'async_job', 'application_server', 'audit_log', 'ip address', 'disk', 'shelf', 'protocol_endpoint', 'folder', 'pe_acl', 'vvol', 'vvol_acl', 'alarm' ,'folset','hc_cluster_config','user group', 'user_policy', 'witness', 'support', 'keymanager', 'trusted_oauth_issuer', 'client_credential'.",
            "example": "group",
            "nullable": true,
            "type": "string"
          },
          "onset_time": {
            "description": "Time when this alarm was triggered. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "remind_every": {
            "description": "Frequency of notification. This number and the remind_every_unit define how frequent one alarm notification is sent.",
            "example": 10,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "remind_every_unit": {
            "description": "Time unit over which to send the number of notification specified in 'remind_every'. For example, a value of 'days' with a 'remind_every' of '1' results in one notification every day. Possible values: 'minutes', 'hours', 'days', 'weeks'.",
            "example": "minutes",
            "nullable": true,
            "type": "string"
          },
          "severity": {
            "description": "Severity level of the event. Possible values: 'warning', 'critical'.",
            "example": "info",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Status of the operation -- open or acknowledged. Possible values: 'open', 'acknowledged'.",
            "example": "open",
            "nullable": true,
            "type": "string"
          },
          "user_full_name": {
            "description": "Full name of the user who acknowledged the alarm. Alphanumeric string of up to 64 chars, starts with letter, can include space, apostrophe('), hyphen(-).",
            "example": "User-13 Peterson",
            "nullable": true,
            "type": "string"
          },
          "user_id": {
            "description": "Identifier of the user who acknowledged the alarm. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "user_name": {
            "description": "Username of the user who acknowledged the alarm. String of up to 80 alphanumeric characters, beginning with a letter. For Active Directory users, it can include backslash (\\), dash (-), period (.), underscore (_) and space.",
            "example": "user1, companydomain\\user",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleAlarmsList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleAlarmsFieldsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleAlarmsDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for Alarms objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/alarms",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of Alarms.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleAlarmsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleAlarmsFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleAlarmsDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed alarms object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/alarms/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleApiSeverityLevel": {
        "description": "Severity of the error. Possible values: 'warn', 'debug', 'error', 'fatal', 'info'.",
        "example": "info",
        "nullable": true,
        "type": "string"
      },
      "NimbleArrSummary": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "Identifier for array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "array_name": {
            "description": "The user provided name of the array. It is also the array's hostname. String of up to 63 alphanumeric and can include hyphens characters but cannot start with hyphen.",
            "example": "Array1",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The user provided name of the array. It is also the array's hostname. String of up to 63 alphanumeric and can include hyphens characters but cannot start with hyphen.",
            "example": "Array1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleArray": {
        "nullable": true,
        "properties": {
          "all_flash": {
            "description": "Whether it is an all-flash array.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "allow_lower_limits": {
            "description": "Setting this field to 'true'  will allow the addition of an array with lower limits to a pool with higher limits.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "available_bytes": {
            "description": "The available space of the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "create_pool": {
            "description": "Whether to create associated pool during array create.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "creation_time": {
            "description": "Time when this array object was created. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ctrlr_a_support_ip": {
            "description": "Controller A Support IP address.",
            "example": "128.0.0.1",
            "nullable": true,
            "type": "string"
          },
          "ctrlr_b_support_ip": {
            "description": "Controller B Support IP address.",
            "example": "128.0.0.1",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dedupe_capacity_bytes": {
            "description": "The dedupe capacity of a hybrid array. Does not apply to all-flash arrays.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "dedupe_usage_bytes": {
            "description": "The dedupe usage of a hybrid array. Does not apply to all-flash arrays.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "extended_model": {
            "description": "Extended model of the array. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "fc_port_count": {
            "description": "Count of Fibre Channel Ports installed on the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "force": {
            "deprecated": true,
            "description": "Forcibly delete the specified array.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "full_name": {
            "description": "The array's fully qualified name. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "gig_nic_port_count": {
            "description": "Count of 1G NIC Ports installed on the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "group_state": {
            "$ref": "#/components/schemas/GroupState"
          },
          "id": {
            "description": "Identifier for array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "is_fully_dedupe_capable": {
            "description": "Flag specifies if the array fully capable to dedupe its usable capacity or not.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_sfa": {
            "description": "Flag specifies if the array is sfa or not.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_supported_hw_config": {
            "description": "Whether it is a supported hardware config.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "last_modified": {
            "description": "Time when this array object was last modified. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "model": {
            "description": "Array model. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "model_sub_type": {
            "description": "Array model sub-type.",
            "example": "VMWare",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The user provided name of the array. It is also the array's hostname. String of up to 63 alphanumeric and can include hyphens characters but cannot start with hyphen.",
            "example": "NimbleArray",
            "nullable": true,
            "type": "string"
          },
          "nic_list": {
            "deprecated": true,
            "description": "List of NICs information. Used while creating an array.",
            "items": {
              "$ref": "#/components/schemas/NICDetails"
            },
            "nullable": true,
            "type": "array"
          },
          "pending_delete_bytes": {
            "description": "The pending delete bytes in he tarray.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pool_description": {
            "description": "Text description of the pool to be created during array creation. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "pool_id": {
            "description": "ID of pool to which this is a member. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "pool_name": {
            "description": "Name of pool to which this is a member. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "public_key": {
            "$ref": "#/components/schemas/PublicKeyDetails"
          },
          "raw_capacity_bytes": {
            "description": "The raw capacity bytes of the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "role": {
            "$ref": "#/components/schemas/NimbleArrayRole"
          },
          "search_name": {
            "description": "The array name used for object search. Alphanumeric string, up to 64 characters including hyphen, period, colon.",
            "example": "vol:1",
            "nullable": true,
            "type": "string"
          },
          "secondary_mgmt_ip": {
            "description": "Secondary management IP address for the Group.",
            "example": "128.0.0.1",
            "nullable": true,
            "type": "string"
          },
          "serial": {
            "description": "Serial number of the array.",
            "example": "AC-109084",
            "nullable": true,
            "type": "string"
          },
          "snap_compression": {
            "description": "The compression rate of snapshots in the array expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "snap_saved_bytes": {
            "description": "The saved space of snapshots in the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_space_reduction": {
            "description": "The space reduction rate of snapshots in the array expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "snap_usage_bytes": {
            "description": "The compressed usage of snapshots in array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_usage_uncompressed_bytes": {
            "description": "Snap usage uncompressed bytes.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "ten_gig_sfp_nic_port_count": {
            "description": "Count of 10G SFP NIC Ports installed on the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ten_gig_t_nic_port_count": {
            "description": "Count of 10G BaseT NIC Ports installed on the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "upgrade": {
            "$ref": "#/components/schemas/UpgradeDetails"
          },
          "usable_cache_capacity_bytes": {
            "description": "Usable cache capacity in bytes.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usable_capacity_bytes": {
            "description": "The usable capacity bytes of the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage": {
            "description": "Used space of the array in bytes.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage_valid": {
            "description": "Indicates whether the usage of the array is valid.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "version": {
            "description": "Software version of the array. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "vol_compression": {
            "description": "The compression rate of volumes in the array expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "vol_saved_bytes": {
            "description": "The saved space of volumes in the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vol_usage_bytes": {
            "description": "The compressed usage of volumes in the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vol_usage_uncompressed_bytes": {
            "description": "The volume usage uncompressed bytes.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "zconf_ipaddrs": {
            "description": "List of link-local zero-configuration addresses of the array.",
            "items": {
              "$ref": "#/components/schemas/ZConfIPaddrs"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleArrayDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleArrSummary"
          }
        ],
        "nullable": true,
        "properties": {
          "evac_time": {
            "description": "Start time of array evacuation.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "evac_usage": {
            "description": "Initial data in the array.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "migrate": {
            "description": "Migrate status of array. Possible values: 'in', 'none', 'out'.",
            "example": "in",
            "nullable": true,
            "type": "string"
          },
          "snap_usage_compressed_bytes": {
            "description": "Usage of snapshots in the array.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usable_capacity": {
            "description": "Usable capacity of the array.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage": {
            "description": "Usage of the array.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage_valid": {
            "description": "Indicate whether usage of the array is valid.",
            "nullable": true,
            "type": "boolean"
          },
          "vol_usage_compressed_bytes": {
            "description": "Usage of volumes in the array.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleArrayDetails": {
        "nullable": true,
        "properties": {
          "all_flash": {
            "description": "Whether it is an all-flash array.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "allow_lower_limits": {
            "description": "Setting this field to 'true'  will allow the addition of an array with lower limits to a pool with higher limits.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "available_bytes": {
            "description": "The available space of the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "brand": {
            "description": "Brand of the array. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "create_pool": {
            "description": "Whether to create associated pool during array create.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "creation_time": {
            "description": "Time when this array object was created. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ctrlr_a_support_ip": {
            "description": "Controller A Support IP address.",
            "example": "128.0.0.1",
            "nullable": true,
            "type": "string"
          },
          "ctrlr_b_support_ip": {
            "description": "Controller B Support IP address.",
            "example": "128.0.0.1",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dedupe_capacity_bytes": {
            "description": "The dedupe capacity of a hybrid array. Does not apply to all-flash arrays.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "dedupe_usage_bytes": {
            "description": "The dedupe usage of a hybrid array. Does not apply to all-flash arrays.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "extended_model": {
            "description": "Extended model of the array. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "fc_port_count": {
            "description": "Count of Fibre Channel Ports installed on the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "force": {
            "deprecated": true,
            "description": "Forcibly delete the specified array.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "full_name": {
            "description": "The array's fully qualified name. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "gig_nic_port_count": {
            "description": "Count of 1G NIC Ports installed on the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "group_state": {
            "$ref": "#/components/schemas/GroupState"
          },
          "is_fully_dedupe_capable": {
            "description": "Flag specifies if the array fully capable to dedupe its usable capacity or not.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_sfa": {
            "description": "Flag specifies if the array is sfa or not.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_supported_hw_config": {
            "description": "Whether it is a supported hardware config.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "last_modified": {
            "description": "Time when this array object was last modified. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "model_sub_type": {
            "description": "Array model sub-type.",
            "example": "VMWare",
            "nullable": true,
            "type": "string"
          },
          "nic_list": {
            "deprecated": true,
            "description": "List of NICs information. Used while creating an array.",
            "items": {
              "$ref": "#/components/schemas/NICDetails"
            },
            "nullable": true,
            "type": "array"
          },
          "oem": {
            "description": "OEM brand of the array. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "pending_delete_bytes": {
            "description": "The pending delete bytes in he tarray.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pool_description": {
            "description": "Text description of the pool to be created during array creation. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "pool_name": {
            "description": "Name of pool to which this is a member. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "public_key": {
            "$ref": "#/components/schemas/PublicKeyDetails"
          },
          "raw_capacity_bytes": {
            "description": "The raw capacity bytes of the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "role": {
            "$ref": "#/components/schemas/NimbleArrayRole"
          },
          "search_name": {
            "description": "The array name used for object search. Alphanumeric string, up to 64 characters including hyphen, period, colon.",
            "example": "vol:1",
            "nullable": true,
            "type": "string"
          },
          "secondary_mgmt_ip": {
            "description": "Secondary management IP address for the Group.",
            "example": "128.0.0.1",
            "nullable": true,
            "type": "string"
          },
          "snap_compression": {
            "description": "The compression rate of snapshots in the array expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "snap_saved_bytes": {
            "description": "The saved space of snapshots in the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_space_reduction": {
            "description": "The space reduction rate of snapshots in the array expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "snap_usage_bytes": {
            "description": "The compressed usage of snapshots in array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_usage_uncompressed_bytes": {
            "description": "Snap usage uncompressed bytes.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "ten_gig_sfp_nic_port_count": {
            "description": "Count of 10G SFP NIC Ports installed on the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ten_gig_t_nic_port_count": {
            "description": "Count of 10G BaseT NIC Ports installed on the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "upgrade": {
            "$ref": "#/components/schemas/UpgradeDetails"
          },
          "usable_cache_capacity_bytes": {
            "description": "Usable cache capacity in bytes.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usable_capacity_bytes": {
            "description": "The usable capacity bytes of the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage": {
            "description": "Used space of the array in bytes.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage_valid": {
            "description": "Indicates whether the usage of the array is valid.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "version": {
            "description": "Software version of the array. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "vol_compression": {
            "description": "The compression rate of volumes in the array expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "vol_saved_bytes": {
            "description": "The saved space of volumes in the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vol_usage_bytes": {
            "description": "The compressed usage of volumes in the array.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vol_usage_uncompressed_bytes": {
            "description": "The volume usage uncompressed bytes.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "zconf_ipaddrs": {
            "description": "List of link-local zero-configuration addresses of the array.",
            "items": {
              "$ref": "#/components/schemas/ZConfIPaddrs"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleArrayDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleArrayFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleArrayDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed performance-policy object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/arrays/09613c5e2b99b74e4b000000000000000000000001",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleArrayFailoverInput": {
        "properties": {
          "force": {
            "description": "Initiate failover without performing any precheck.",
            "example": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "NimbleArrayFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier for array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "model": {
            "description": "Array model. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The user provided name of the array. It is also the array's hostname. String of up to 63 alphanumeric and can include hyphens characters but cannot start with hyphen.",
            "example": "NimbleArray",
            "nullable": true,
            "type": "string"
          },
          "pool_id": {
            "description": "ID of pool to which this is a member. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "serial": {
            "description": "Serial number of the array.",
            "example": "AC-109084",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleArrayList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NimbleArray"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "total": {
            "description": "Number of systems",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleArrayNet": {
        "nullable": true,
        "properties": {
          "ctrlr_a_support_ip": {
            "description": "IP address of controller A.",
            "example": "127.0.0.102",
            "nullable": true,
            "type": "string"
          },
          "ctrlr_b_support_ip": {
            "description": "IP address of controller B.",
            "example": "127.0.0.103",
            "nullable": true,
            "type": "string"
          },
          "member_gid": {
            "description": "GID of member.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the array.",
            "example": "g1a16",
            "nullable": true,
            "type": "string"
          },
          "nic_list": {
            "description": "List of NICs.",
            "items": {
              "$ref": "#/components/schemas/NimbleNIC"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleArrayRole": {
        "description": "Role of an array in the group. Possible values: 'leader', 'non_member', 'invalid', 'backup_leader', 'member', 'failed'.",
        "example": "leader",
        "nullable": true,
        "type": "string"
      },
      "NimbleArraySummary": {
        "nullable": true,
        "properties": {
          "model": {
            "description": "Array model.",
            "example": "CS3000",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The user provided name of the array.",
            "example": "NimbleArray45",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleArraysList": {
        "nullable": true,
        "properties": {
          "array-name": {
            "description": "Name of the  array . String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "array_id": {
            "description": "Identifier for the array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "ctrlr_a_fc_config": {
            "$ref": "#/components/schemas/NimbleControllerConfig"
          },
          "ctrlr_b_fc_config": {
            "$ref": "#/components/schemas/NimbleControllerConfig"
          },
          "id": {
            "description": "Identifier for the array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the  array list. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleChanges": {
        "description": "Changes",
        "nullable": true,
        "properties": {
          "newlyCreated": {
            "description": "Newly created information",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "warning": {
            "enum": [
              "PERSONA_MISMATCH",
              "ADDITIONAL_INITIATORS",
              "OTHER",
              null
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleCloneSnapshotCollectionsInput": {
        "description": "Clone snapshot collections input {DeviceType-2}. Clone a snapshot collection.",
        "properties": {
          "clone_volumes": {
            "description": "List of clone volumes.",
            "items": {
              "$ref": "#/components/schemas/CloneVolumesInput"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "clone_volumes"
        ],
        "type": "object"
      },
      "NimbleCloneVolumeInput": {
        "description": "Create Nimble clone volume input.",
        "properties": {
          "clone_volume_name": {
            "description": "Name of the clone volume.",
            "example": "clone_volume",
            "nullable": false,
            "type": "string"
          },
          "host_group_id": {
            "description": "Identifier for the host group.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "lun": {
            "description": "Custom LUN ID for the host group. Specify integer in the range 0 to 2047.",
            "example": 100,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "clone_volume_name"
        ],
        "type": "object"
      },
      "NimbleControllerConfig": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleFcInterfaceList"
          },
          {
            "$ref": "#/components/schemas/NimbleFcPortList"
          }
        ],
        "nullable": true,
        "type": "object"
      },
      "NimbleControllerDetails": {
        "nullable": true,
        "properties": {
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "asup_time": {
            "description": "Time of the last autosupport by the controller.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/controllers/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "ctrlr_side": {
            "description": "Identifies which controller this is on its array. Possible values: 'A', 'B'.",
            "example": "A",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "fan_status": {
            "description": "Overall fan status for the controller. Possible values: 'fan_failed', 'fan_okay', 'fan_alerted', 'fan_unknown'.",
            "example": "fan_okay",
            "nullable": true,
            "type": "string"
          },
          "fans": {
            "description": "Status for each fan in the controller.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsCtrlrHwSensorInfo"
            },
            "nullable": true,
            "type": "array"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "hostname": {
            "description": "Host name for the controller.",
            "example": "myobject-5-A",
            "nullable": true,
            "type": "string"
          },
          "nvme_cards": {
            "description": "List of NVMe accelerator cards.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsCtrlrNvmeCard"
            },
            "nullable": true,
            "type": "array"
          },
          "nvme_cards_enabled": {
            "description": "Indicates if the NVMe accelerator card is enabled.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "partial_response_ok": {
            "description": "Indicate that it is ok to provide partially available response.",
            "nullable": true,
            "type": "boolean"
          },
          "partition_status": {
            "description": "Status of the system's raid partitions.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsCtrlrRaidInfo"
            },
            "nullable": true,
            "type": "array"
          },
          "power_status": {
            "description": "Overall power supply status for the controller. Possible values: 'ps_alerted', 'ps_okay', 'ps_failed', 'ps_unknown'.",
            "example": "ps_okay",
            "nullable": true,
            "type": "string"
          },
          "power_supplies": {
            "description": "Status for each power supply in the controller.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsCtrlrHwSensorInfo"
            },
            "nullable": true,
            "type": "array"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "state": {
            "description": "Indicates whether this controller is active or not. Possible values: 'start_active', 'start_standby', 'stale', 'standby', 'active', 'solo', 'none'.",
            "example": "active",
            "nullable": true,
            "type": "string"
          },
          "support_address": {
            "description": "IP address used for support.",
            "example": "128.0.0.1",
            "nullable": true,
            "type": "string"
          },
          "support_netmask": {
            "description": "IP netmask used for support.",
            "example": "255.255.248.0",
            "nullable": true,
            "type": "string"
          },
          "support_nic": {
            "description": "Network card used for support.",
            "example": "eth1",
            "nullable": true,
            "type": "string"
          },
          "temperature_sensors": {
            "description": "Status for temperature sensor in the controller.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsCtrlrHwSensorInfo"
            },
            "nullable": true,
            "type": "array"
          },
          "temperature_status": {
            "description": "Overall temperature status for the controller. Possible values: 'temperature_unknown', 'temperature_alerted', 'temperature_okay', 'temperature_fail'.",
            "example": "temperature_okay",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "update_end_time": {
            "description": "End time of last update. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "update_error_code": {
            "description": "If the software update has failed, this indicates the error code corresponding to the failure. Non-negative integer in range [0,9000].",
            "example": "SM_ok",
            "nullable": true,
            "type": "string"
          },
          "update_progress_msg": {
            "description": "Group update detailed progress message. Plain string.",
            "example": "example progress message",
            "nullable": true,
            "type": "string"
          },
          "update_start_time": {
            "description": "Start time of last update. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "update_state": {
            "$ref": "#/components/schemas/UpdateState"
          },
          "version_current": {
            "description": "Version of software running on the group.",
            "example": "5.3.0.0-746508-opt",
            "nullable": true,
            "type": "string"
          },
          "version_rollback": {
            "description": "Rollback software version for the group.",
            "example": "v1",
            "nullable": true,
            "type": "string"
          },
          "version_target": {
            "description": "Desired software version for the group.",
            "example": "v1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleControllerDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleControllerFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleControllerDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed controller object",
            "example": "api/v1/storage-systems/devicetype2/2a0df0fe6f7dc7bb16000000000000000000004817/controllers/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleControllerFieldsWithSortKey": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "Rest ID of the array containing this controller. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "array_name": {
            "description": "Name of the array containing this controller. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier of the controller. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the controller. `Filter, Sort`",
            "example": "A",
            "nullable": true,
            "type": "string"
          },
          "serial": {
            "description": "Serial number for this controller. `Filter, Sort`",
            "example": "AC-109084",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleControllerFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "Rest ID of the array containing this controller.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "array_name": {
            "description": "Name of the array containing this controller.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier of the controller.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the controller.",
            "example": "A",
            "nullable": true,
            "type": "string"
          },
          "serial": {
            "description": "Serial number for this controller.",
            "example": "AC-109084",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleControllerList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleControllerFieldsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleControllerDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for controller objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/controllers",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of controllers.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleCreateAccessControlRecordInput": {
        "description": "Create Nimble access-control record input.",
        "properties": {
          "apply_to": {
            "description": "External management agent type. Possible values:'volume', 'pe', 'vvol_volume', 'vvol_snapshot', 'snapshot', 'both'.",
            "example": "pe",
            "nullable": true,
            "type": "string"
          },
          "chap_user_id": {
            "description": "Identifier for the CHAP user.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "initiator_group_id": {
            "description": "Identifier for the initiator group.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "lun": {
            "description": "If this access control record applies to a regular volume, this attribute is the volume's LUN (Logical Unit Number). If the access protocol is iSCSI, the LUN will be 0. However, if the access protocol is Fibre Channel, the LUN will be in the range from 0 to 2047. If this record applies to a Virtual Volume, this attribute is the volume's secondary LUN in the range from 0 to 399999, for both iSCSI and Fibre Channel. If the record applies to a OpenstackV2 volume, the LUN will be in the range from 0 to 2047, for both iSCSI and Fibre Channel. If this record applies to a protocol endpoint or only a snapshot, this attribute is not meaningful and is set to null.",
            "example": 8,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pe_id": {
            "description": "Identifier for the protocol endpoint this access control record applies to.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "pe_ids": {
            "description": "List of candidate protocol endpoints that may be used to access the Virtual Volume. One of them will be selected for the access control record. This field is required only when creating an access control record for a Virtual Volume.",
            "items": {
              "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "snap_id": {
            "description": "Identifier for the snapshot this access control record applies to.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "vol_id": {
            "description": "Identifier for the volume this access control record applies to.",
            "example": "064323bdd90b39c3a7000000000000000000000016",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleCreateArrayInput": {
        "description": "Create Nimble array input",
        "properties": {
          "allow_lower_limits": {
            "description": "Whether to create associated pool during array create. Possible values: 'true', 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "create_pool": {
            "description": "Whether to create associated pool during array create. Possible values: 'true', 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "ctrlr_a_support_ip": {
            "description": "Controller A Support IP address.",
            "example": "128.0.0.1",
            "type": "string"
          },
          "ctrlr_b_support_ip": {
            "description": "Controller B Support IP address.",
            "example": "128.0.0.1",
            "type": "string"
          },
          "dedupe_disabled": {
            "description": "Is data deduplication disabled for this array. Possible values: 'true', 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "The user provided name of the array. It is also the array's hostname. String of up to 63 alphanumeric and can include hyphens characters but cannot start with hyphen.",
            "example": "NimbleArray",
            "type": "string"
          },
          "nic_list": {
            "description": "List of NICs information. Used while creating an array.",
            "items": {
              "$ref": "#/components/schemas/NICDetails"
            },
            "type": "array"
          },
          "pool_description": {
            "description": "Text description of the pool to be created during array creation. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "pool_name": {
            "description": "Name of pool to which this is a member. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "type": "string"
          },
          "secondary_mgmt_ip": {
            "description": "Secondary management IP address for the Group.",
            "example": "128.0.0.1",
            "type": "string"
          },
          "serial": {
            "description": "Serial number of the array.",
            "example": "AC-109084",
            "type": "string"
          }
        },
        "required": [
          "name",
          "pool_name",
          "serial",
          "ctrlr_a_support_ip",
          "ctrlr_b_support_ip",
          "nic_list"
        ],
        "type": "object"
      },
      "NimbleCreateFolderInput": {
        "description": "Create Nimble / Alletra 6K Folder input.",
        "properties": {
          "access_protocol": {
            "description": "Access protocol of the folder. This attribute is used by the VASA Provider to determine the access protocol of the bind request. If not specified in the creation request, it will be the access protocol supported by the group. If the group supports multiple protocols, the default will be Fibre Channel. This field is meaningful only to VVol folder. Possible values: 'iscsi', 'fc'.",
            "example": "iscsi",
            "nullable": true,
            "type": "string"
          },
          "agent_type": {
            "description": "External management agent type. Possible values: 'none', 'smis', 'vvol', 'openstack'.",
            "example": "openstack",
            "nullable": true,
            "type": "string"
          },
          "appserver_id": {
            "description": "Identifier of the application server associated with the folder.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of folder.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "inherited_vol_perfpol_id": {
            "description": "Identifier of the default performance policy for a newly created volume.",
            "example": "030a259996ae869835000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "limit_iops": {
            "description": "IOPS limit for this folder. If limit_iops is not specified when a folder is created, or if limit_iops is set to -1, then the folder has no IOPS limit. IOPS limit should be in range [256, 4294967294] or -1 for unlimited.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_mbps": {
            "description": "Throughput limit for this folder in MB/s. If limit_mbps is not specified when a folder is created, or if limit_mbps is set to -1, then the folder has no throughput limit. MBPS limit should be in range [1, 4294967294] or -1 for unlimited.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_size_bytes": {
            "description": "Folder size limit in bytes. If limit_size_bytes is not specified when a folder is created, or if limit_size_bytes is set to -1, then the folder has no limit. Otherwise, a limit smaller than the capacity of the pool can be set. Folders with an agent_type of 'smis' or 'vvol' must have a size limit.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the folder.",
            "example": "myobject-5",
            "type": "string"
          },
          "overdraft_limit_pct": {
            "description": "Amount of space to consider as overdraft range for this folder as a percentage of folder used limit. Valid values are from 0% - 200%. This is the limit above the folder usage limit beyond which enforcement action(volume offline/non-writable) is issued.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pool_id": {
            "description": "ID of the pool where the folder resides.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "type": "string"
          },
          "provisioned_limit_size_bytes": {
            "description": "Limit on the provisioned size of volumes in a folder. If provisioned_limit_size_bytes is not specified when a folder is created, or if provisioned_limit_size_bytes is set to -1, then the folder has no provisioned size limit.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "name",
          "pool_id"
        ],
        "type": "object"
      },
      "NimbleCreateInitiatorGroupInput": {
        "description": "Create Nimble intiator group input.",
        "properties": {
          "access_protocol": {
            "description": "Initiator group access protocol.",
            "example": "iscsi",
            "type": "string"
          },
          "app_uuid": {
            "description": "Application identifier of initiator group. String of up to 255 alphanumeric characters, hyphen, colon, dot and underscore are allowed",
            "example": "rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of initiator group. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "fc_initiators": {
            "description": "List of FC initiators. When create/update fc_initiators, wwpn is required. List of Fibre Channel initiators.",
            "items": {
              "$ref": "#/components/schemas/NimbleFCInitiator"
            },
            "nullable": true,
            "type": "array"
          },
          "fc_tdz_ports": {
            "description": "List of target Fibre Channel ports with Target Driven Zoning configured on this initiator group. List of target ports.",
            "items": {
              "$ref": "#/components/schemas/NimbleFCTdzPorts"
            },
            "nullable": true,
            "type": "array"
          },
          "host_type": {
            "description": "Initiator group host type. Available options are auto and hpux. The default option is auto. This attribute will be applied to all the initiators in the initiator group. Initiators with different host OSes should not be kept in the same initiator group having a non-default host type attribute. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "iscsi_initiators": {
            "description": "List of iSCSI initiators. When create/update iscsi_initiators, either iqn or ip_address is always required with label.",
            "items": {
              "$ref": "#/components/schemas/NimbleISCSIInitiator"
            },
            "nullable": true,
            "type": "array"
          },
          "metadata": {
            "description": "Key-value pairs that augment an initiator group's attributes.",
            "items": {
              "$ref": "#/components/schemas/NimbleMetadata"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of initiator group. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "type": "string"
          },
          "target_subnets": {
            "description": "List of target subnet labels. If specified, discovery and access to volumes will be restricted to",
            "items": {
              "$ref": "#/components/schemas/NimbleTargetSubnets"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "name",
          "access_protocol"
        ],
        "type": "object"
      },
      "NimbleCreateInitiatorInput": {
        "description": "Create Nimble initiator input.",
        "properties": {
          "access_protocol": {
            "description": "Access protocol used by the initiator. Possible values: 'iscsi', 'fc'.",
            "example": "iscsi",
            "type": "string"
          },
          "alias": {
            "description": "Alias of the Fibre Channel initiator. Maximum alias length is 32 characters. Each initiator alias must have an associated WWPN specified using the 'wwpn' attribute.You can choose not to enter the WWPN for an initiator when using previously saved initiator alias.String of up to 32 alphanumeric characters, or one of $^-_.: cannot begin with non-alphanumeric character.`Filter, Sort`",
            "example": "my_initiator-4",
            "nullable": true,
            "type": "string"
          },
          "chapuser_id": {
            "description": "Identifier for the CHAP user.",
            "example": "011c9973433673c3db000000000000000000000000",
            "nullable": true,
            "type": "string"
          },
          "initiator_group_id": {
            "description": "Identifier of the initiator group that this initiator is assigned to. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "type": "string"
          },
          "ip_address": {
            "description": "IP address of the iSCSI initiator. Each initiator IP address must have an associated name specified using 'name' attribute.You can choose not to enter the name for an initiator if you prefer not to authenticate using both name and IP address, in this case the IQN name will be returned as '*'. Alphanumeric, hyphenated, colon or period separated string of up to 255 characters or '*'",
            "example": "iqn.2007-11.com.storage:zmytestvol1-v0df0fe6f7dc7bb16.0000016b.70374579",
            "nullable": true,
            "type": "string"
          },
          "iqn": {
            "description": "IQN name of the iSCSI initiator. Each initiator IQN name must have an associated IP address specified using the 'ip_address' attribute.You can choose not to enter the IP address for an initiator if you prefer not to authenticate using both name and IP address,in this case the IP address will be returned as '*'.",
            "example": "iqn.2007-11.com.storage:zmytestvol1-v0df0fe6f7dc7bb16.0000016b.70374579",
            "nullable": true,
            "type": "string"
          },
          "label": {
            "description": "Unique Identifier of the iSCSI initiator. Label is required when creating iSCSI initiator. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "override_existing_alias": {
            "description": "Forcibly add Fibre Channel initiator to initiator group by updating or removing conflicting Fibre Channel initiator aliases.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "wwpn": {
            "description": "WWPN (World Wide Port Name) of the Fibre Channel initiator. WWPN is required when creating a Fibre Channel initiator. Each initiator WWPN can have an associated alias specified using the 'alias' attribute. You can choose not to enter the alias for an initiator if you prefer not to assign an initiator alias. Eight bytes expressed in hex separated by colons.",
            "example": "af:32:f1:20:bc:ba:43:1a",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "access_protocol",
          "initiator_group_id"
        ],
        "type": "object"
      },
      "NimbleCreatePerformancePolicyInput": {
        "description": "Create Device Type 2 performance policy.",
        "properties": {
          "app_category": {
            "description": "Specifies the application category of the associated volume. Plain string. Defaults to 'Unassigned'.",
            "example": "Unassigned",
            "nullable": true,
            "type": "string"
          },
          "block_size": {
            "description": "Block Size in bytes to be used by the volumes created with this specific performance policy. Supported block sizes are 4096 bytes (4 KB), 8192 bytes (8 KB), 16384 bytes(16 KB), and 32768 bytes (32 KB). Block size of a performance policy cannot be changed once the performance policy is created. Defaults to 4096.",
            "example": 4096,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "cache": {
            "description": "Flag denoting if data in the associated volume should be cached. Defaults to 'true'.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "cache_policy": {
            "description": "Specifies how data of associated volume should be cached. Supports two policies, 'normal' and 'aggressive'. 'normal' policy caches data but skips in certain conditions such as sequential I/O. 'aggressive' policy will accelerate caching of all data belonging to this volume, regardless of sequentiality. Possible values:'normal', 'no_write', 'aggressive_read_no_write', 'disabled', 'aggressive'. Defaults to 'normal'.",
            "example": "normal",
            "nullable": true,
            "type": "string"
          },
          "compress": {
            "description": "Flag denoting if data in the associated volume should be compressed. Defaults to 'true'.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "dedupe_enabled": {
            "description": "Specifies if dedupe is enabled for volumes created with this performance policy.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "Description of a performance policy. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the Performance Policy. String of up to 64 alphanumeric characters, - and . and : and space are allowed after first character.",
            "example": "SQL Server Logs",
            "type": "string"
          },
          "space_policy": {
            "description": "Specifies the state of the volume upon space constraint violation such as volume limit violation or volumes above their volume reserve, if the pool free space is exhausted. Supports two policies, 'offline' and 'non_writable'. Possible values:'offline', 'login_only', 'non_writable', 'read_only', 'invalid'. Defaults to 'offline'.",
            "example": "offline",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "NimbleCreatePoolInput": {
        "description": "Create a pool with given input.",
        "properties": {
          "array_list": {
            "description": "List of arrays identified by their IDs, in the pool.",
            "items": {
              "$ref": "#/components/schemas/CreatePoolNimbleArrayDetail"
            },
            "type": "array"
          },
          "dedupe_all_volumes": {
            "description": "Indicates if dedupe is enabled by default for new volumes on this pool. Defaults to false.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "Text description of pool. String of up to 255 printable ASCII characters. Defaults to empty string.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of pool. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "pool-1",
            "type": "string"
          }
        },
        "required": [
          "name",
          "array_list"
        ],
        "type": "object"
      },
      "NimbleCreateProtectionTemplateInput": {
        "description": "Create Protection Template input on {Device-Type2}.",
        "properties": {
          "app_cluster_name": {
            "description": "If the application is running within a Windows cluster environment then this is the cluster name. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "xyz.net",
            "nullable": true,
            "type": "string"
          },
          "app_id": {
            "description": "Application ID running on the server. Application ID can only be specified if application synchronization is VSS. Possible values: 'inval', 'exchange', 'exchange_dag', 'hyperv', 'sql2005', 'sql2008', 'sql2012', 'sql2014', 'sql2016', 'sql2017'.",
            "example": "sql2005",
            "nullable": true,
            "type": "string"
          },
          "app_server": {
            "description": "Application server hostname. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "abc.com",
            "nullable": true,
            "type": "string"
          },
          "app_service_name": {
            "description": "If the application is running within a Windows cluster environment then this is the instance name of the service running within the cluster environment. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "Service1",
            "nullable": true,
            "type": "string"
          },
          "app_sync": {
            "description": "Application synchronization. Possible values: 'none', 'vss'.",
            "example": "none",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of protection template. String of up to 255 printable ASCII characters.",
            "example": "Every day",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the protection template. User provided identifier. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "nullable": false,
            "type": "string"
          },
          "schedules": {
            "description": "List of protection schedules.",
            "items": {
              "$ref": "#/components/schemas/ProtectionScheduleInput"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleCreateReplicationPartnerInput": {
        "description": "Create Replication Partner input on {Device-Type2}.",
        "properties": {
          "replicationPartners": {
            "description": "List of replication partners.",
            "items": {
              "$ref": "#/components/schemas/ReplicationPartnerObj"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "replicationPartners"
        ],
        "type": "object"
      },
      "NimbleCreateSnapshotCollectionsInput": {
        "description": "Create {DeviceType-2} snapshot collections input. Create a snapshot collection. VSS application-synchronized snapshot collection must specify the 'allow_writes' parameter ans set it to 'true'.",
        "properties": {
          "agent_type": {
            "description": "External management agent type for snapshots being created as part of snapshot collection. Possible values: 'none', 'smis', 'vvol', 'openstack', 'openstackv2'.",
            "nullable": true,
            "type": "string"
          },
          "allow_writes": {
            "description": "Atollow applications to write to created snapshot(s). Mandatory and must be set to 'true' for VSS application synchronized snapshots. Possible values: 'true', 'false'.",
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "Text description of snapshot collection. String of up to 255 printable ASCII characters. Example: '99.9999% availability'.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "disable_appsync": {
            "description": "Do not perform application synchronization for this snapshot, create a crash-consistent snapshot instead. Possible values: 'true', 'false'.",
            "nullable": true,
            "type": "boolean"
          },
          "invoke_on_upstream_partner": {
            "description": "Invoke snapshot request on upstream partner. Possible values: 'true', 'false'.",
            "nullable": true,
            "type": "boolean"
          },
          "is_external_trigger": {
            "description": "Is externally triggered. Possible values: 'true', 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "metadata": {
            "description": "Key-value pairs that augment a snapshot collection's attributes. List of key-value pairs. Keys must be unique and non-empty. When creating an object, values must be non-empty. When updating an object, an empty value causes the corresponding key to be removed.",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of snapshot collection. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. This type is used for object sets containing volumes, snapshots, snapshot collections and protocol endpoints.",
            "example": "snap1",
            "type": "string"
          },
          "replicate": {
            "description": "True if this snapshot collection has been marked for replication. Possible values: 'true', 'false'.",
            "nullable": true,
            "type": "boolean"
          },
          "replicate_to": {
            "description": "Specifies the partner name that the snapshots in this snapshot collection are replicated to. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. Example: 'myobject-5'.",
            "nullable": true,
            "type": "string"
          },
          "skip_db_consistency_check": {
            "description": "Skip consistency check for database files on this snapshot. This option only applies to volume collections with application synchronization set to VSS, application ID set to MS Exchange 2010 or later with Database Availability Group (DAG), snap_verify option set to true, and disable_appsync option set to false. Possible values: 'true', 'false'.",
            "nullable": true,
            "type": "boolean"
          },
          "snap_verify": {
            "description": "Run verification tool on this snapshot. This option can only be used with a volume collection that has application synchronization. Possible values: 'true', 'false'.",
            "nullable": true,
            "type": "boolean"
          },
          "start_online": {
            "description": "Start with snapshot set online. Possible values: 'true', 'false'.",
            "nullable": true,
            "type": "boolean"
          },
          "vol_snap_attr_list": {
            "description": "List of snapshot attributes for snapshots being created as part of snapshot collection creation. List of volumes with per snapshot attributes.",
            "items": {
              "$ref": "#/components/schemas/NimbleVolumeSnapAttr"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "NimbleCreateSnapshotInput": {
        "description": "Create Nimble snapshot input. Create a snapshot with the given attributes. VSS application-synchronized snapshot must specify the 'writable' parameter and set it to 'true'.",
        "properties": {
          "app_uuid": {
            "description": "Application identifier of snapshots. String of up to 255 alphanumeric characters, hyphen, colon, dot and underscore are allowed. Defaults to empty string.",
            "example": "rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of snapshot. String of up to 255 printable ASCII characters. Defaults to the empty string.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "description": "Key-value pairs that augment a volume's attributes. List of key-value pairs. Keys must be unique and non-empty. When creating an object, values must be non-empty. When updating an object, an empty value causes the corresponding key to be removed. Defaults to an empty array.",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of the snapshot. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. This type is used for object sets containing volumes, snapshots, snapshot collections and protocol endpoints.",
            "example": "snap1",
            "type": "string"
          },
          "online": {
            "description": "Online state for a snapshot means it could be mounted for data restore. Defaults to 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "writable": {
            "description": "Allow snapshot to be writable. Mandatory and must be set to 'true' for VSS application synchronized snapshots. Defaults to 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "NimbleCreateVolumeCollectionInput": {
        "description": "Create Nimble volume-collection input.",
        "properties": {
          "agent_hostname": {
            "description": "Generic backup agent hostname. Custom port number can be specified with agent hostname using \\\\\":\\\\\". String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "agent_username": {
            "description": "Generic backup agent username. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_cluster_name": {
            "description": "If the application is running within a Windows cluster environment, this is the cluster name. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_id": {
            "description": "Application ID running on the server. Application ID can only be specified if application synchronization is \\\\\"vss\\\\\". Possible values: 'inval', 'exchange', 'exchange_dag', 'hyperv', 'sql2005', 'sql2008', 'sql2012', 'sql2014', 'sql2016', 'sql2017'.",
            "example": "inval",
            "nullable": true,
            "type": "string"
          },
          "app_server": {
            "description": "Application server hostname. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_service_name": {
            "description": "If the application is running within a Windows cluster environment then this is the instance name of the service running within the cluster environment. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_sync": {
            "description": "Application Synchronization. Possible values: 'none', 'vss', 'vmware', 'generic'.",
            "example": "vss",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of volume collection. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "is_standalone_volcoll": {
            "description": "Indicates whether this is a standalone volume collection. Possible values: 'true', 'false'.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "metadata": {
            "description": "Key-value pairs that augment a volume collection's attributes. List of key-value pairs. Keys must be unique and non-empty. When creating an object, values must be non-empty. When updating an object, an empty value causes the corresponding key to be removed.",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of volume collection. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "type": "string"
          },
          "prottmpl_id": {
            "description": "Identifier of the protection template whose attributes will be used to create this volume collection. This attribute is only used for input when creating a volume collection and is not outputed. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "replication_type": {
            "description": "Type of replication configured for the volume collection. Possible values are periodic snapshot and synchronous. Default value is periodic_snapshot.",
            "example": "periodic_snapshot",
            "nullable": true,
            "type": "string"
          },
          "vcenter_hostname": {
            "description": "VMware vCenter hostname. Custom port number can be specified with vCenter hostname using \\\\\":\\\\\". String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "vcenter_username": {
            "description": "Application VMware vCenter username. String of up to 80 alphanumeric characters, beginning with a letter. It can include ampersand (@), backslash (\\), dash (-), period (.), and underscore (_).",
            "example": "administrator@vsphere.local",
            "nullable": true,
            "type": "string"
          },
          "volume_list": {
            "description": "List of volume id's that need to be added to the volume collection.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "NimbleCreateVolumeInput": {
        "description": "Create Nimble volume input.",
        "properties": {
          "agent_type": {
            "description": "External management agent type. Defaults to 'none'. Possible values: 'none', 'smis', 'vvol', 'openstack', 'openstackv2'",
            "example": "none",
            "nullable": true,
            "type": "string"
          },
          "app_uuid": {
            "description": "Application identifier of volume. String of up to 255 alphanumeric characters, hyphen, colon, dot and underscore are allowed. Defaults to the empty string.",
            "example": "rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18",
            "nullable": true,
            "type": "string"
          },
          "base_snap_id": {
            "description": "Base snapshot ID. This attribute is required together with name and clone when cloning a volume with the create operation. A 42 digit hexadecimal int64. Defaults to the empty string.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004017",
            "nullable": true,
            "type": "string"
          },
          "block_size": {
            "description": "Size in bytes of blocks in the volume. Defaults to 4096.",
            "example": 4096,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "cache_pinned": {
            "description": "If set to true, all the contents of this volume are kept in flash cache. This provides for consistent performance guarantees for all types of workloads. The amount of flash needed to pin the volume is equal to the limit for the volume. Defaults to 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "clone": {
            "description": "Whether this volume is a clone. Use this attribute in combination with name and base_snap_id to create a clone by setting clone = true. Defaults to 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "dedupe_enabled": {
            "description": "Indicate whether dedupe is enabled. Defaults to 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "Text description of volume. String of up to 255 printable ASCII characters. Defaults to the empty string.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "dest_pool_id": {
            "description": "ID of the destination pool where the volume is moving to. A 42 digit hexadecimal int64. Defaults to the empty string.",
            "example": "0a00000000000004d3000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "encryption_cipher": {
            "description": "The encryption cipher of the volume. Defaults to 'none'. Possible values: 'none', 'aes_256_xts'",
            "example": "none",
            "nullable": true,
            "type": "string"
          },
          "folder_id": {
            "description": "ID of the folder holding this volume. An optional NsObjectID. A 42 digit hexadecimal int64 or the empty string. Defaults to the empty string.",
            "example": "1234123412341234123412341234123412341234cd",
            "nullable": true,
            "type": "string"
          },
          "limit": {
            "description": "Limit for the volume as a percentage of volume size. Percentage as integer from 0 to 100. Defaults to the default volume limit set on group, typically 100.",
            "example": 100,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_iops": {
            "description": "IOPS limit for this volume. If limit_iops is not specified when a volume is created, or if limit_iops is set to -1, then the volume has no IOPS limit. If limit_iops is not specified while creating a clone, IOPS limit of parent volume will be used as limit. IOPS limit should be in range [256, 4294967294] or -1 for unlimited. If both limit_iops and limit_mbps are specified, limit_mbps must not be hit before limit_iops. In other words, IOPS and MBPS limits should honor limit_iops _ampersand_amp;lt;= ((limit_mbps MB/s * 2^20 B/MB) / block_size B). By default the volume is created with unlimited iops.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_mbps": {
            "description": "Throughput limit for this volume in MB/s. If limit_mbps is not specified when a volume is created, or if limit_mbps is set to -1, then the volume has no MBPS limit. MBPS limit should be in range [1, 4294967294] or -1 for unlimited. If both limit_iops and limit_mbps are specified, limit_mbps must not be hit before limit_iops. In other words, IOPS and MBPS limits should honor limit_iops _ampersand_amp;lt;= ((limit_mbps MB/s * 2^20 B/MB) / block_size B). By default, the volume is created with unlimited throughput.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "metadata": {
            "description": "Key-value pairs that augment a volume's attributes. List of key-value pairs. Keys must be unique and non-empty. When creating an object, values must be non-empty. When updating an object, an empty value causes the corresponding key to be removed. Defaults to an empty array.",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            },
            "nullable": true,
            "type": "array"
          },
          "multi_initiator": {
            "description": "This indicates whether volume and its snapshots are multi-initiator accessible. This attribute applies only to volumes and snapshots available to iSCSI initiators. Defaults to 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the volume. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. This type is used for object sets containing volumes, snapshots, snapshot collections and protocol endpoints.",
            "example": "volume1",
            "type": "string"
          },
          "online": {
            "description": "Online state of volume, available for host initiators to establish connections. Defaults to 'true'.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "owned_by_group_id": {
            "description": "ID of group that currently owns the volume. A 42 digit hexadecimal int64. Defaults to the ID of the group that created the volume.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          },
          "perfpolicy_id": {
            "description": "Identifier of the performance policy. After creating a volume, performance policy for the volume can only be changed to another performance policy with same block size. A 42 digit hexadecimal int64. Defaults to ID of the 'default' performance policy.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "pool_id": {
            "description": "Identifier associated with the pool in the storage pool table. A 42 digit hexadecimal int64. Defaults to the ID of the 'default' pool.",
            "example": "0a00000000000004d3000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "read_only": {
            "description": "Volume is read-only. Defaults to 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "reserve": {
            "description": "Amount of space to reserve for this volume as a percentage of volume size. Percentage as integer from 0 to 100. Defaults to the default volume reservation set on the group, typically 0.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "size": {
            "description": "Volume size in megabytes. Size is required for creating a volume but not for cloning an existing volume.When creating a new volume, size is required. When cloning an existing volume, size defaults to that of the parent volume.",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_reserve": {
            "description": "Amount of space to reserve for snapshots of this volume as a percentage of volume size. Defaults to the default snapshot reserve set on the group, typically 0.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_warn_level": {
            "description": "Threshold for available space as a percentage of volume size below which an alert is raised. Defaults to the default snapshot warning level set on the group, typically 0.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "suffix": {
            "description": "suffix for customized volume name",
            "example": 4,
            "nullable": false,
            "type": "integer"
          },
          "warn_level": {
            "description": "Threshold for available space as a percentage of volume size below which an alert is raised. If this option is not specified, array default volume warn level setting is used to decide the warning level for this volume. Percentage as integer from 0 to 100. Defaults to the default volume warning level set on the group, typically 80.",
            "example": 80,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "NimbleCreateVolumesWorkflowInput": {
        "description": "Request body for create volume workflow",
        "properties": {
          "agent_type": {
            "description": "External management agent type. Defaults to 'none'. Possible values: 'none', 'smis', 'vvol', 'openstack', 'openstackv2'",
            "example": "none",
            "nullable": true,
            "type": "string"
          },
          "app_uuid": {
            "description": "Application identifier of volume. String of up to 255 alphanumeric characters, hyphen, colon, dot and underscore are allowed. Defaults to the empty string. ",
            "example": "rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18",
            "nullable": true,
            "type": "string"
          },
          "count": {
            "description": "Number of volumes to be created.",
            "example": 3,
            "type": "integer"
          },
          "dedupe_enabled": {
            "description": "Indicate whether dedupe is enabled. Defaults to 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "downstreamPartner": {
            "description": "Name of the downstream partner",
            "example": "<resource_name>",
            "nullable": true,
            "type": "string"
          },
          "downstreamPartnerId": {
            "description": "ID of the downstream partner",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "folder_id": {
            "description": "ID of the folder holding this volume. An optional NsObjectID. A 42 digit hexadecimal int64 or the empty string. Defaults to the empty string.",
            "example": "1234123412341234123412341234123412341234cd",
            "nullable": true,
            "type": "string"
          },
          "host_groups": {
            "description": "List of host group details.",
            "items": {
              "$ref": "#/components/schemas/NimbleHostGroupDetails"
            },
            "nullable": true,
            "type": "array"
          },
          "limit": {
            "description": "Limit for the volume as a percentage of volume size. Percentage as integer from 0 to 100. Defaults to the default volume limit set on group, typically 100.",
            "example": 100,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_iops": {
            "description": "IOPS limit for this volume. If limit_iops is not specified when a volume is created, or if limit_iops is set to -1, then the volume has no IOPS limit. If limit_iops is not specified while creating a clone, IOPS limit of parent volume will be used as limit. IOPS limit should be in range [256, 4294967294] or -1 for unlimited. If both limit_iops and limit_mbps are specified, limit_mbps must not be hit before limit_iops. In other words, IOPS and MBPS limits should honor limit_iops _ampersand_amp;lt;= ((limit_mbps MB/s * 2^20 B/MB) / block_size B). By default the volume is created with unlimited iops.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_mbps": {
            "description": "Throughput limit for this volume in MB/s. If limit_mbps is not specified when a volume is created, or if limit_mbps is set to -1, then the volume has no MBPS limit. MBPS limit should be in range [1, 4294967294] or -1 for unlimited. If both limit_iops and limit_mbps are specified, limit_mbps must not be hit before limit_iops. In other words, IOPS and MBPS limits should honor limit_iops _ampersand_amp;lt;= ((limit_mbps MB/s * 2^20 B/MB) / block_size B). By default, the volume is created with unlimited throughput.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the volume. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. This type is used for object sets containing volumes, snapshots, snapshot collections and protocol endpoints.",
            "example": "volume1",
            "type": "string"
          },
          "perfpolicy": {
            "$ref": "#/components/schemas/CustomApp"
          },
          "perfpolicy_id": {
            "description": "Identifier of the performance policy. After creating a volume, performance policy for the volume can only be changed to another performance policy with same block size. A 42 digit hexadecimal int64. Defaults to ID of the 'default' performance policy.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "pool_id": {
            "description": "Identifier associated with the pool in the storage pool table. A 42 digit hexadecimal int64. Defaults to the ID of the 'default' pool.",
            "example": "0a00000000000004d3000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "protectionPolicyId": {
            "description": "Protection policy ID",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "protectionPolicySchedules": {
            "description": "Protection Policy Schedule",
            "items": {
              "properties": {
                "name": {
                  "description": "Name",
                  "example": "<name>",
                  "nullable": true,
                  "type": "string"
                },
                "startTime": {
                  "description": "start time",
                  "example": "8:30",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "replicationStartTime": {
            "description": "Remote replication start time which  will be used to offset local snapshot start time",
            "example": 16384456,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "size": {
            "description": "Volume size in megabytes. Size is required for creating a volume but not for cloning an existing volume.When creating a new volume, size is required. When cloning an existing volume, size defaults to that of the parent volume.",
            "example": 16,
            "format": "int64",
            "type": "integer"
          },
          "volColId": {
            "description": "volume collection id",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "volColName": {
            "description": "volume collection Name",
            "example": "appset_1",
            "nullable": true,
            "type": "string"
          },
          "warn_level": {
            "description": "Threshold for available space as a percentage of volume size below which an alert is raised. If this option is not specified, array default volume warn level setting is used to decide the warning level for this volume. Percentage as integer from 0 to 100. Defaults to the default volume warning level set on the group, typically 80.",
            "example": 80,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "name",
          "size",
          "count"
        ],
        "type": "object"
      },
      "NimbleCreateWitnessInput": {
        "description": "Create a new witness configuration.",
        "properties": {
          "host": {
            "description": "Hostname or ip addresses of witness. Comma separated strings of up to 63 characters of hostname and/or ip addresses. Total length cannot exceed 255 characters.",
            "example": "witness-host9801.sjcvlab.com",
            "type": "string"
          },
          "password": {
            "description": "Password of witness. String of 0 to 255 characters.",
            "example": "password_25-24",
            "type": "string"
          },
          "port": {
            "description": "Port of witness. Positive integer value up to 65535 representing TCP/IP port. Defaults to 5395.",
            "example": 5395,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "username": {
            "description": "Username of witness. This has to be a non-root that can login to the witness host. String of up to 32 characters, beginning with a letter or number or period (.) or an underscore (_). It can include underscore (_), dash (-), period (.) and end with doller ($) sign.",
            "example": "witness9801",
            "type": "string"
          }
        },
        "required": [
          "username",
          "password",
          "host"
        ],
        "type": "object"
      },
      "NimbleDemoteVolumeCollectionsInput": {
        "description": "Perform demote action on a volume collection.",
        "properties": {
          "invoke_on_upstream_partner": {
            "description": "Invoke demote request on upstream partner. Default: 'false'. Possible values: 'true', 'false'.",
            "nullable": true,
            "type": "boolean"
          },
          "replication_partner_id": {
            "description": "Replication partner ID of the new owner. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "replication_partner_id"
        ],
        "type": "object"
      },
      "NimbleDisk": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DiskFilterableFields"
          },
          {
            "$ref": "#/components/schemas/NimbleDiskCommon"
          }
        ],
        "nullable": true,
        "type": "object"
      },
      "NimbleDiskCommon": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "bank": {
            "description": "Disk bank number.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "block_type": {
            "description": "Native block type of the disk. Possible values: 'block_512e', 'block_4Kn', 'block_none', 'block_512n'.",
            "example": "block_none",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/disks/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "disk_internal_stat1": {
            "description": "Internal disk statistic 1.",
            "example": "00cf9d220c",
            "nullable": true,
            "type": "string"
          },
          "firmware_version": {
            "description": "Firmware version on the disk.",
            "example": "01.01V01",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "hba": {
            "description": "HBA ID the disk is connected to.",
            "example": 2,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "is_dfc": {
            "description": "Is disk part of dual flash carrier.",
            "nullable": true,
            "type": "boolean"
          },
          "path": {
            "description": "Disk SCSI device path.",
            "example": "/dev/sdj",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "HBA port number the disk is connected to.",
            "example": 15,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "raid_id": {
            "description": "Raid ID.",
            "example": 10,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "raid_resync_average_speed": {
            "description": "Average RAID rebuild speed (bytes/sec).",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "raid_resync_current_speed": {
            "description": "Current RAID rebuild speed (bytes/sec).",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "raid_resync_percent": {
            "description": "Percentage RAID rebuild completed on this disk.",
            "example": 100,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "raid_state": {
            "description": "RAID status for the disk (N/A, okay, resynchronizing, spare, faulty). Disk RAID state. Possible values: 'N/A', 'okay', 'resynchronizing', 'spare', 'faulty'.",
            "example": "okay",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "shelf_location": {
            "description": "Identifies the controller, port, and chain position of the shelf the disk belongs to.",
            "example": "A.0",
            "nullable": true,
            "type": "string"
          },
          "shelf_location_id": {
            "description": "Identifies the position shelf the disk belongs to, as coded integer.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "size": {
            "description": "Disk size in bytes.",
            "example": 1000204886016,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "slot": {
            "description": "Disk slot number.",
            "example": 2,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "smart_attribute_list": {
            "description": "S.M.A.R.T. attributes for the disk. List of Smart attributes.",
            "items": {
              "$ref": "#/components/schemas/NimbleDiskSmartAttributes"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "vendor": {
            "description": "Vendor name of the disk manufacturer.",
            "example": "OEM",
            "nullable": true,
            "type": "string"
          },
          "vshelf_id": {
            "description": "Identifies the local shelf id the disk belongs to.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleDiskDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DiskFilterableFieldsWithoutFilter"
          },
          {
            "$ref": "#/components/schemas/NimbleDiskCommon"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed disk object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/disks/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleDiskSmartAttributes": {
        "nullable": true,
        "properties": {
          "cur_value": {
            "description": "Current value.",
            "example": 200,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "flags": {
            "description": "Smart flags.",
            "example": 47,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "last_updated_epoch_secs": {
            "description": "Last update time in epoch seconds.",
            "example": 1463324503,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the Smart attribute.",
            "example": "Raw read error rate",
            "nullable": true,
            "type": "string"
          },
          "raw_value": {
            "description": "Raw value.",
            "example": 2,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "smart_id": {
            "description": "Smart attribute ID.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "threshold": {
            "description": "Smart threshold.",
            "example": 51,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "worst_value": {
            "description": "Worst value.",
            "example": 20,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleDisksList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NimbleDisk"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for disk objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/disks",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of disks.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleDriveSetDetails": {
        "description": "List of Drive Sets for the respective shelf.",
        "properties": {
          "accept_dedupe_impact": {
            "description": "Accept the reduction or elimination of deduplication capability on the system as a result of activating a shelf that does not meet the necessary deduplication requirements. Possible values: 'true', 'false'.",
            "example": false,
            "type": "boolean"
          },
          "accept_foreign": {
            "description": "Accept the removal of data on the shelf disks and activate foreign shelf. Possible values: 'true', 'false'.",
            "example": false,
            "type": "boolean"
          },
          "driveset": {
            "description": "Driveset to activate.",
            "example": 0,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "driveset",
          "accept_foreign",
          "accept_dedupe_impact"
        ],
        "type": "object"
      },
      "NimbleEditArrayInput": {
        "description": "Edit Nimble array input",
        "properties": {
          "name": {
            "description": "The user provided name of the array. It is also the array's hostname. String of up to 63 alphanumeric and can include hyphens characters but cannot start with hyphen.",
            "example": "NimbleArray",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "NimbleEditArrayNet": {
        "nullable": true,
        "properties": {
          "ctrlr_a_support_ip": {
            "description": "IP address of controller A.",
            "example": "127.0.0.102",
            "nullable": true,
            "type": "string"
          },
          "ctrlr_b_support_ip": {
            "description": "IP address of controller B.",
            "example": "127.0.0.103",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the array.",
            "example": "g1a16",
            "nullable": true,
            "type": "string"
          },
          "nic_list": {
            "description": "List of NICs.",
            "items": {
              "$ref": "#/components/schemas/NimbleNIC"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleEditDiskInput": {
        "description": "Edit Nimble / Alletra 6K disk.",
        "properties": {
          "disk_op": {
            "description": "The intended operation to be performed on the specified disk. Disk operation. Possible values: 'add', 'remove'.",
            "example": "add",
            "nullable": false,
            "type": "string"
          },
          "force": {
            "description": "Forcibly add a disk. Possible values: 'true', 'false'.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "NimbleEditFCInterfaceInput": {
        "description": "Edit Nimble FC interface input.",
        "nullable": true,
        "properties": {
          "online": {
            "description": "Identify whether the Fibre Channel interface is online.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "NimbleEditFolderInput": {
        "description": "Edit Nimble / Alletra 6K Folder input.",
        "properties": {
          "appserver_id": {
            "description": "Identifier of the application server associated with the folder.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of folder.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "inherited_vol_perfpol_id": {
            "description": "Identifier of the default performance policy for a newly created volume.",
            "example": "030a259996ae869835000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "limit_iops": {
            "description": "IOPS limit for this folder. If limit_iops is not specified when a folder is created, or if limit_iops is set to -1, then the folder has no IOPS limit. IOPS limit should be in range [256, 4294967294] or -1 for unlimited.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_mbps": {
            "description": "Throughput limit for this folder in MB/s. If limit_mbps is not specified when a folder is created, or if limit_mbps is set to -1, then the folder has no throughput limit. MBPS limit should be in range [1, 4294967294] or -1 for unlimited.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_size_bytes": {
            "description": "Folder size limit in bytes. If limit_size_bytes is not specified when a folder is created, or if limit_size_bytes is set to -1, then the folder has no limit. Otherwise, a limit smaller than the capacity of the pool can be set. Folders with an agent_type of 'smis' or 'vvol' must have a size limit.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the folder.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "overdraft_limit_pct": {
            "description": "Amount of space to consider as overdraft range for this folder as a percentage of folder used limit. Valid values are from 0% - 200%. This is the limit above the folder usage limit beyond which enforcement action(volume offline/non-writable) is issued.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "provisioned_limit_size_bytes": {
            "description": "Limit on the provisioned size of volumes in a folder. If provisioned_limit_size_bytes is not specified when a folder is created, or if provisioned_limit_size_bytes is set to -1, then the folder has no provisioned size limit.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleEditGroupInput": {
        "properties": {
          "auto_switchover_enabled": {
            "description": "Whether automatic switchover of Group management services feature is enabled.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "autoclean_unmanaged_snapshots_enabled": {
            "description": "Whether auto-clean unmanaged snapshots feature is enabled.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "autoclean_unmanaged_snapshots_ttl_unit": {
            "description": "Unit for unmanaged snapshot time to live.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "cc_mode_enabled": {
            "description": "Enable or disable Common Criteria mode.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "date": {
            "description": "Unix epoch time local to the group. Seconds since last epoch i.e. 00:00 January 1, 1970. Setting this along with ntp_server causes ntp_server to be reset.",
            "example": 1598267193,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "default_iscsi_target_scope": {
            "description": "Newly created volumes are exported under iSCSI Group Target or iSCSI Volume Target.",
            "example": "group",
            "nullable": true,
            "type": "string"
          },
          "group_snapshot_ttl": {
            "description": "Snapshot Time-to-live(TTL) configured at group level for automatic deletion of unmanaged snapshots. Value 0 indicates unlimited TTL.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "group_target_name": {
            "description": "Iscsi target name for this group. Plain string.",
            "example": "iqn.2007-11.com.abc:g1a1-g00000000000004d3",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the group. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "ntp_server": {
            "description": "Either IP address or hostname of the NTP server for this group.",
            "example": "0.abc.pool.ntp.org",
            "nullable": true,
            "type": "string"
          },
          "tdz_enabled": {
            "description": "Is Target Driven Zoning (TDZ) enabled on this group.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "tdz_prefix": {
            "description": "Target Driven Zoning (TDZ) prefix for peer zones created by TDZ.",
            "example": "peerzone",
            "nullable": true,
            "type": "string"
          },
          "timezone": {
            "description": "Timezone in which this group is located. Plain string.",
            "example": "America/Los_Angeles",
            "nullable": true,
            "type": "string"
          },
          "tlsv1_enabled": {
            "description": "Enable or disable TLSv1.0 and TLSv1.1.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "NimbleEditInitiatorGroupInput": {
        "description": "Edit Nimble initiator group input.",
        "properties": {
          "app_uuid": {
            "description": "Application identifier of initiator group. String of up to 255 alphanumeric characters, hyphen, colon, dot and underscore are allowed.",
            "example": "rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of initiator group. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "fc_initiators": {
            "description": "List of FC initiators. When create/update fc_initiators, wwpn is required. List of Fibre Channel initiators.",
            "items": {
              "$ref": "#/components/schemas/NimbleFCInitiator"
            },
            "nullable": true,
            "type": "array"
          },
          "fc_tdz_ports": {
            "description": "List of target Fibre Channel ports with Target Driven Zoning configured on this initiator group. List of target ports.",
            "items": {
              "$ref": "#/components/schemas/NimbleFCTdzPorts"
            },
            "nullable": true,
            "type": "array"
          },
          "host_type": {
            "description": "Initiator group host type. Available options are auto and hpux. The default option is auto. This attribute will be applied to all the initiators in the initiator group. Initiators with different host OSes should not be kept in the same initiator group having a non-default host type attribute. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "iscsi_initiators": {
            "description": "List of iSCSI initiators. When create/update iscsi_initiators, either iqn or ip_address is always required with label.",
            "items": {
              "$ref": "#/components/schemas/NimbleISCSIInitiator"
            },
            "nullable": true,
            "type": "array"
          },
          "metadata": {
            "description": "Key-value pairs that augment an initiator group's attributes.",
            "items": {
              "$ref": "#/components/schemas/NimbleMetadata"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of initiator group. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "type": "string"
          },
          "target_subnets": {
            "description": "List of target subnet labels. If specified, discovery and access to volumes will be restricted to to the specified subnets. List of target subnet tables.",
            "items": {
              "$ref": "#/components/schemas/NimbleTargetSubnets"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleEditMultipleSnapshotInput": {
        "nullable": false,
        "properties": {
          "snapshot_list": {
            "items": {
              "$ref": "#/components/schemas/NimbleEditSnapshotInput"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "snapshot_list"
        ],
        "type": "object"
      },
      "NimbleEditNetworkSettings": {
        "description": "Edit Nimble network-settings input.",
        "nullable": false,
        "properties": {
          "array_list": {
            "description": "List of array network configs.",
            "items": {
              "$ref": "#/components/schemas/NimbleEditArrayNet"
            },
            "nullable": false,
            "type": "array"
          },
          "iscsi_automatic_connection_method": {
            "description": "Enable automatic connection method. Enabling this means means redirecting connections from the specified iSCSI discovery IP to the best data IP based on connection counts.",
            "example": true,
            "nullable": false,
            "type": "boolean"
          },
          "iscsi_connection_rebalancing": {
            "description": "Enable connection rebalancing. Enabling this means rebalancing iSCSI connections by periodically breaking existing connections that are out-of-balance, allowing the host to reconnect to a more appropriate data IP.",
            "example": true,
            "nullable": false,
            "type": "boolean"
          },
          "mgmt_ip": {
            "description": "Management IP for the Group. Four numbers in the range [0,255] separated by periods.",
            "example": "128.0.0.1",
            "nullable": false,
            "type": "string"
          },
          "name": {
            "description": "Name of the network configuration. Use the name 'draft' when creating a draft configuration. Possible values are 'active', 'backup' and 'draft'.",
            "example": "draft",
            "nullable": false,
            "type": "string"
          },
          "route_list": {
            "description": "List of static routes.",
            "items": {
              "$ref": "#/components/schemas/NimbleRoute"
            },
            "nullable": false,
            "type": "array"
          },
          "secondary_mgmt_ip": {
            "description": "Secondary management IP address for the Group. Four numbers in the range [0,255] separated by periods.",
            "example": "128.0.0.1",
            "nullable": true,
            "type": "string"
          },
          "subnet_list": {
            "description": "List of subnet configs.",
            "items": {
              "$ref": "#/components/schemas/NimbleSubnet"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleEditPerformancePolicyInput": {
        "description": "Edit Nimble / Alletra 6K performance policy.",
        "properties": {
          "app_category": {
            "description": "Specifies the application category of the associated volume. Plain string. Defaults to 'Unassigned'.",
            "example": "Unassigned",
            "nullable": true,
            "type": "string"
          },
          "cache": {
            "description": "Flag denoting if data in the associated volume should be cached. Defaults to 'true'.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "cache_policy": {
            "description": "Specifies how data of associated volume should be cached. Supports two policies, 'normal' and 'aggressive'. 'normal' policy caches data but skips in certain conditions such as sequential I/O. 'aggressive' policy will accelerate caching of all data belonging to this volume, regardless of sequentiality. Possible values:'normal', 'no_write', 'aggressive_read_no_write', 'disabled', 'aggressive'. Defaults to 'normal'.",
            "example": "normal",
            "nullable": true,
            "type": "string"
          },
          "compress": {
            "description": "Flag denoting if data in the associated volume should be compressed. Defaults to 'true'.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "dedupe_enabled": {
            "description": "Specifies if dedupe is enabled for volumes created with this performance policy.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "Description of a performance policy. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the Performance Policy. String of up to 64 alphanumeric characters, - and . and : and space are allowed after first character.",
            "example": "SQL Server Logs",
            "nullable": true,
            "type": "string"
          },
          "space_policy": {
            "description": "Specifies the state of the volume upon space constraint violation such as volume limit violation or volumes above their volume reserve, if the pool free space is exhausted. Supports two policies, 'offline' and 'non_writable'. Possible values:'offline', 'login_only', 'non_writable', 'read_only', 'invalid'. Defaults to 'offline'.",
            "example": "offline",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleEditPoolInput": {
        "description": "Update pool attributes",
        "properties": {
          "array_list": {
            "description": "List of arrays identified by their IDs, in the pool.",
            "items": {
              "$ref": "#/components/schemas/EditPoolNimbleArrayDetail"
            },
            "type": "array"
          },
          "dedupe_all_volumes": {
            "description": "Indicates if dedupe is enabled by default for new volumes on this pool.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "dedupe_capable": {
            "description": "Indicates whether the pool is capable of hosting deduped volumes.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "Text description of pool. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "force": {
            "description": "Forcibly delete the specified pool even if it contains deleted volumes whose space is being reclaimed. Forcibly remove an array from array_list via an update operation even if the array is not reachable. There should no volumes currently in the pool for the forced update operation to succeed.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_default": {
            "description": "Indicates if this is the default pool.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of pool. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "pool-1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleEditProtectionTemplateInput": {
        "description": "Edit Protection Template input on {Device-Type2}.",
        "properties": {
          "addSchedules": {
            "description": "List of protection schedules to be added.",
            "items": {
              "$ref": "#/components/schemas/ProtectionScheduleInput"
            },
            "nullable": true,
            "type": "array"
          },
          "app_cluster_name": {
            "description": "If the application is running within a Windows cluster environment then this is the cluster name. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "xyz.net",
            "nullable": true,
            "type": "string"
          },
          "app_id": {
            "description": "Application ID running on the server. Application ID can only be specified if application synchronization is VSS. Possible values: 'inval', 'exchange', 'exchange_dag', 'hyperv', 'sql2005', 'sql2008', 'sql2012', 'sql2014', 'sql2016', 'sql2017'.",
            "example": "sql2005",
            "nullable": true,
            "type": "string"
          },
          "app_server": {
            "description": "Application server hostname. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "abc.com",
            "nullable": true,
            "type": "string"
          },
          "app_service_name": {
            "description": "If the application is running within a Windows cluster environment then this is the instance name of the service running within the cluster environment. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "Service1",
            "nullable": true,
            "type": "string"
          },
          "app_sync": {
            "description": "Application synchronization. Possible values: 'none', 'vss'.",
            "example": "none",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of protection template. String of up to 255 printable ASCII characters.",
            "example": "Every day",
            "nullable": true,
            "type": "string"
          },
          "editSchedules": {
            "description": "List of protection schedules to be edited.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsSchedule"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of the protection template. User provided identifier. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "nullable": false,
            "type": "string"
          },
          "removeSchedules": {
            "description": "List of protection schedules to be removed.",
            "items": {
              "$ref": "#/components/schemas/ProtectionScheduleActionNimble"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleEditReplicationPartnerInput": {
        "description": "Edit Replication Partner input on {Device-Type2}.",
        "properties": {
          "replicationPartners": {
            "description": "List of replication partners.",
            "items": {
              "$ref": "#/components/schemas/EditReplicationPartner"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "replicationPartners"
        ],
        "type": "object"
      },
      "NimbleEditSnapshotInput": {
        "description": "Edit Nimble snapshot input. Edit a snapshot with the given attributes.",
        "nullable": false,
        "properties": {
          "app_uuid": {
            "description": "Application identifier of snapshots. String of up to 255 alphanumeric characters, hyphen, colon, dot and underscore are allowed. Defaults to empty string.",
            "example": "rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of snapshot. String of up to 255 printable ASCII characters. Defaults to the empty string.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the snapshot. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "description": "Key-value pairs that augment a volume's attributes. List of key-value pairs. Keys must be unique and non-empty. When creating an object, values must be non-empty. When updating an object, an empty value causes the corresponding key to be removed. Defaults to an empty array.",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            },
            "nullable": true,
            "type": "array"
          },
          "online": {
            "description": "Online state for a snapshot means it could be mounted for data restore. Defaults to 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "NimbleEditSystemSettings": {
        "description": "Edit Nimble system-settings input.",
        "nullable": true,
        "properties": {
          "alert_settings": {
            "$ref": "#/components/schemas/EditAlertSettings"
          },
          "date_timezone_settings": {
            "$ref": "#/components/schemas/EditDateTimezoneSettings"
          },
          "dns_settings": {
            "$ref": "#/components/schemas/EditDnsSettings"
          },
          "isns_settings": {
            "$ref": "#/components/schemas/EditIsnsSettings"
          },
          "name": {
            "description": "Name of the group. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "NimbleGroup55",
            "nullable": true,
            "type": "string"
          },
          "proxy_settings": {
            "$ref": "#/components/schemas/EditProxySettings"
          },
          "security_settings": {
            "$ref": "#/components/schemas/EditSecuritySettings"
          },
          "smtp_settings": {
            "$ref": "#/components/schemas/EditSmtpMailSettings"
          },
          "snmp_settings": {
            "$ref": "#/components/schemas/EditSnmpSettings"
          },
          "support_settings": {
            "$ref": "#/components/schemas/EditSupportSettings"
          },
          "syslogd_settings": {
            "$ref": "#/components/schemas/EditSyslogdSettings"
          },
          "system_parameters": {
            "$ref": "#/components/schemas/EditSystemParameters"
          }
        },
        "type": "object"
      },
      "NimbleEditVolumeCollectionInput": {
        "description": "Edit Nimble volume-collection input.",
        "properties": {
          "agent_hostname": {
            "description": "Generic backup agent hostname. Custom port number can be specified with agent hostname using \\\\\":\\\\\". String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "agent_username": {
            "description": "Generic backup agent username. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_cluster_name": {
            "description": "If the application is running within a Windows cluster environment, this is the cluster name. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_id": {
            "description": "Application ID running on the server. Application ID can only be specified if application synchronization is \\\\\"vss\\\\\". Possible values: 'inval', 'exchange', 'exchange_dag', 'hyperv', 'sql2005', 'sql2008', 'sql2012', 'sql2014', 'sql2016', 'sql2017'.",
            "example": "inval",
            "nullable": true,
            "type": "string"
          },
          "app_server": {
            "description": "Application server hostname. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_service_name": {
            "description": "If the application is running within a Windows cluster environment then this is the instance name of the service running within the cluster environment. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_sync": {
            "description": "Application Synchronization. Possible values: 'none', 'vss', 'vmware', 'generic'.",
            "example": "vss",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of volume collection. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of volume collection. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "vcenter_hostname": {
            "description": "VMware vCenter hostname. Custom port number can be specified with vCenter hostname using \\\\\":\\\\\". String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "vcenter_username": {
            "description": "Application VMware vCenter username. String of up to 80 alphanumeric characters, beginning with a letter. It can include ampersand (@), backslash (\\), dash (-), period (.), and underscore (_).",
            "example": "administrator@vsphere.local",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleEditVolumeInput": {
        "description": "Edit Nimble volume input.",
        "properties": {
          "app_uuid": {
            "description": "Application identifier of volume. String of up to 255 alphanumeric characters, hyphen, colon, dot and underscore are allowed.",
            "example": "rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18",
            "nullable": true,
            "type": "string"
          },
          "caching_enabled": {
            "description": "Indicate caching the volume is enabled.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "dedupe_enabled": {
            "description": "Indicate whether dedupe is enabled.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "Text description of volume. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "folder_id": {
            "description": "ID of the folder holding this volume. An optional NsObjectID. A 42 digit hexadecimal number or the empty string.",
            "example": "1234123412341234123412341234123412341234cd",
            "nullable": true,
            "type": "string"
          },
          "force": {
            "description": "Forcibly offline, reduce size or change read-only status a volume.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "limit": {
            "description": "Limit for the volume as a percentage of volume size. Percentage as integer from 0 to 100.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_iops": {
            "description": "IOPS limit for this volume. If limit_iops is not specified when a volume is created, or if limit_iops is set to -1, then the volume has no IOPS limit. If limit_iops is not specified while creating a clone, IOPS limit of parent volume will be used as limit. IOPS limit should be in range [256, 4294967294] or -1 for unlimited. If both limit_iops and limit_mbps are specified, limit_mbps must not be hit before limit_iops. In other words, IOPS and MBPS limits should honor limit_iops _ampersand_amp;lt;= ((limit_mbps MB/s * 2^20 B/MB) / block_size B).",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_mbps": {
            "description": "Throughput limit for this volume in MB/s. If limit_mbps is not specified when a volume is created, or if limit_mbps is set to -1, then the volume has no MBPS limit. MBPS limit should be in range [1, 4294967294] or -1 for unlimited. If both limit_iops and limit_mbps are specified, limit_mbps must not be hit before limit_iops. In other words, IOPS and MBPS limits should honor limit_iops _ampersand_amp;lt;= ((limit_mbps MB/s * 2^20 B/MB) / block_size B).",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the volume. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period.",
            "example": "volume1",
            "nullable": true,
            "type": "string"
          },
          "online": {
            "description": "Online state of volume, available for host initiators to establish connections.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "owned_by_group_id": {
            "description": "ID of group that currently owns the volume. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "perfpolicy_id": {
            "description": "Identifier of the performance policy. After creating a volume, performance policy for the volume can only be changed to another performance policy with same block size. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "size": {
            "description": "Volume size in megabytes. Size is required for creating a volume but not for cloning an existing volume.",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleErrorWithArguments": {
        "nullable": true,
        "properties": {
          "code": {
            "description": "Error code.",
            "example": 13,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "severity": {
            "$ref": "#/components/schemas/NimbleApiSeverityLevel"
          },
          "text": {
            "description": "Full error message with argument populated.",
            "example": "Error occurred.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleEventsDetails": {
        "nullable": true,
        "properties": {
          "activity": {
            "description": "Description of the event. String of 1-1476 printable characters.",
            "example": "Created snapshot % of volume %",
            "nullable": true,
            "type": "string"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/events/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "summary": {
            "description": "Summary of the event. Plain string.",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleEventsFieldsWithSortKey": {
        "nullable": true,
        "properties": {
          "alarm_id": {
            "description": "The alarm ID if the event is related to an alarm. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "category": {
            "description": "Category of the event record. Possible values: 'unknown', 'hardware', 'service', 'replication', 'volume', 'update', 'configuration', 'test', 'security', 'array_upgrade'. `Filter, Sort`",
            "example": "hardware",
            "nullable": true,
            "type": "string"
          },
          "event_type": {
            "description": "FType of the event record. Non-negative integer in range [0,2147483647]. `Filter, Sort`",
            "example": 10,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Identifier for the event record. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "scope": {
            "description": "The array name for array level event. Possible values: array serial number, or '-'. `Filter, Sort`",
            "example": "AC-109084",
            "nullable": true,
            "type": "string"
          },
          "severity": {
            "description": "Severity level of the event. Possible values: 'info', 'notice', 'warning', 'critical'. `Filter, Sort`",
            "example": "info",
            "nullable": true,
            "type": "string"
          },
          "target": {
            "description": "Name of object upon which the event occurred. String of up to 400 alphanumeric characters, - and . and : and \" \" are allowed after first character. `Filter, Sort`",
            "example": "volumes in performance policy default",
            "nullable": true,
            "type": "string"
          },
          "target_type": {
            "description": "Target type of the event record. Possible values: 'anon', 'array', 'controller', 'disk', 'nic', 'temperature', 'service', 'volume', 'protection_set', 'nvram', 'fan', 'power_supply', 'partner', 'raid', 'test', 'iscsi', 'pool', 'group', 'shelf', 'ntb', 'fc', 'initiator_group'. `Filter, Sort`",
            "example": "array",
            "nullable": true,
            "type": "string"
          },
          "timestamp": {
            "description": "Time when this event happened. Seconds since last epoch i.e. 00:00 January 1, 1970. `Filter, Sort`",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleEventsFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "alarm_id": {
            "description": "The alarm ID if the event is related to an alarm. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "category": {
            "description": "Category of the event record. Possible values: 'unknown', 'hardware', 'service', 'replication', 'volume', 'update', 'configuration', 'test', 'security', 'array_upgrade'.",
            "example": "hardware",
            "nullable": true,
            "type": "string"
          },
          "event_type": {
            "description": "Type of the event record. Non-negative integer in range [0,2147483647].",
            "example": 10,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Identifier for the event record. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "scope": {
            "description": "The array name for array level event. Possible values: array serial number, or '-'.",
            "example": "AC-109084",
            "nullable": true,
            "type": "string"
          },
          "severity": {
            "description": "Severity level of the event. Possible values: 'info', 'notice', 'warning', 'critical'.",
            "example": "info",
            "nullable": true,
            "type": "string"
          },
          "target": {
            "description": "Name of object upon which the event occurred. String of up to 400 alphanumeric characters, - and . and : and \" \" are allowed after first character.",
            "example": "volumes in performance policy default",
            "nullable": true,
            "type": "string"
          },
          "target_type": {
            "description": "Target type of the event record. Possible values: 'anon', 'array', 'controller', 'disk', 'nic', 'temperature', 'service', 'volume', 'protection_set', 'nvram', 'fan', 'power_supply', 'partner', 'raid', 'test', 'iscsi', 'pool', 'group', 'shelf', 'ntb', 'fc', 'initiator_group'.",
            "example": "array",
            "nullable": true,
            "type": "string"
          },
          "timestamp": {
            "description": "Time when this event happened. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleEventsList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleEventsFieldsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleEventsDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for Events objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/events",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of Events.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleEventsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleEventsFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleEventsDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed events object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/events/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFCConfigsList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleFibreChannelConfigsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleFibreChannelConfigsDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for  Fibre Channel Configs",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/fibre-channel-configs",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of Fibre Channel Configs.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleFCInitiator": {
        "nullable": true,
        "properties": {
          "alias": {
            "description": "Alias of the Fibre Channel initiator.",
            "example": "vegaalias",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the Fibre Channel initiator.",
            "example": "0b1c9973433673c3db000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "wwpn": {
            "description": "WWPN (World Wide Port Name) of the Fibre Channel initiator.",
            "example": "0b1c9973433673c3db000000000000000000000001",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFCInitiatorInfo": {
        "description": "Information about the Fibre Channel initiator.",
        "nullable": true,
        "properties": {
          "initiator_alias": {
            "description": "Alias of the Fibre Channel initiator.",
            "example": "port5",
            "nullable": true,
            "type": "string"
          },
          "initiator_fcid": {
            "description": "FCID assigned to the Fibre Channel initiator.",
            "example": "181800",
            "nullable": true,
            "type": "string"
          },
          "initiator_switch_name": {
            "description": "Name of the switch used by the Fibre Channel initiator.",
            "example": "MSDU_LS_E_CB2502",
            "nullable": true,
            "type": "string"
          },
          "initiator_switch_port": {
            "description": "Port on the switch used by the Fibre Channel initiator.",
            "example": "42",
            "nullable": true,
            "type": "string"
          },
          "initiator_symbolic_nodename": {
            "description": "Symbolic node name associated with the Fibre Channel initiator.",
            "example": "itor1_symbolic_portname",
            "nullable": true,
            "type": "string"
          },
          "initiator_symbolic_portname": {
            "description": "Symbolic port name associated with the Fibre Channel initiator.",
            "example": "itor1_symbolic_nodename",
            "nullable": true,
            "type": "string"
          },
          "initiator_wwpn": {
            "description": "WWPN (World Wide Port Name) of the Fibre Channel initiator.",
            "example": "10:00:9c:dc:71:72:9f:43",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFCSessionDetails": {
        "nullable": true,
        "properties": {
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/fibre-channel-sessions/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "initiator_info": {
            "$ref": "#/components/schemas/NimbleFCInitiatorInfo"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "target_info": {
            "$ref": "#/components/schemas/NimbleFCTargetInfo"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFCSessionDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleFCSessionFieldsWithoutFilterKey"
          },
          {
            "$ref": "#/components/schemas/NimbleFCSessionDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed Fibre Channel Session object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/fibre-channel-sessions/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFCSessionFieldsWithFilterKey": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Unique identifier of the Fibre Channel session. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFCSessionFieldsWithoutFilterKey": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Unique identifier of the Fibre Channel session. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFCSessionList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleFCSessionFieldsWithFilterKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleFCSessionDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for Fibre Channel Session objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/fibre-channel-sessions",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of Fibre Channel Sessions.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleFCTargetInfo": {
        "description": "Information about the Fibre Channel target.",
        "nullable": true,
        "properties": {
          "target_fcid": {
            "description": "FCID assigned to the Fibre Channel target port.",
            "example": "1b2300",
            "nullable": true,
            "type": "string"
          },
          "target_port_array_name": {
            "description": "Name of the array hosting the Fibre Channel target port.",
            "example": "CS2-AF40-3445",
            "nullable": true,
            "type": "string"
          },
          "target_port_ctrlr_name": {
            "description": "Name (A or B) of the controller to which the port belongs.",
            "example": "A",
            "nullable": true,
            "type": "string"
          },
          "target_port_interface_name": {
            "description": "Name of the interface hosted on the Fibre Channel target port.",
            "example": "fc3b.1",
            "nullable": true,
            "type": "string"
          },
          "target_wwnn": {
            "description": "WWNN (World Wide Node Name) of the Fibre Channel target port.",
            "example": "56:c9:ce:90:e0:f3:0f:00",
            "nullable": true,
            "type": "string"
          },
          "target_wwpn": {
            "description": "WWPN (World Wide Port Name) of the Fibre Channel target port.",
            "example": "56:c9:ce:90:e0:f3:0f:02",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFCTdzPorts": {
        "nullable": true,
        "properties": {
          "array_name": {
            "description": "Unique name of the array.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "fc_name": {
            "description": "Target port interface name.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFcInterfaceList": {
        "nullable": true,
        "properties": {
          "bus_location": {
            "description": "Bus location for the array.String of up to 64 alphanumeric characters",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the fibre channel config. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "online": {
            "description": "Online state of fibre channel config.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "port": {
            "description": "Port number for this interface.Unsigned 64-bit integer.",
            "example": 1234,
            "nullable": true,
            "type": "integer"
          },
          "slot": {
            "description": "Slot number for this fibre channel config. Unsigned 64-bit integer.",
            "example": 1234,
            "nullable": true,
            "type": "integer"
          },
          "wwnn": {
            "description": "WWNN (World Wide Node Name) of the Fibre Channel port.",
            "example": "56:c9:ce:90:e0:f3:0f:00",
            "nullable": true,
            "type": "string"
          },
          "wwpn": {
            "description": "WWPN (World Wide Port Name) of the Fibre Channel target port.",
            "example": "56:c9:ce:90:e0:f3:0f:02",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFcPortList": {
        "nullable": true,
        "properties": {
          "bus_location": {
            "description": "Bus location for the fibre channel config.String of up to 64 alphanumeric characters",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the fibre channel config. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "Port number for this fibre channel config.Unsigned 64-bit integer.",
            "example": 1234,
            "nullable": true,
            "type": "integer"
          },
          "slot": {
            "description": "Slot number for this fibre channel config. Unsigned 64-bit integer.",
            "example": 1234,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleFibreChannelConfigsDetails": {
        "nullable": true,
        "properties": {
          "array_list": {
            "description": "List of array Fibre Channel configs. List of array Fibre Channel configurations.",
            "items": {
              "$ref": "#/components/schemas/NimbleArraysList"
            },
            "nullable": true,
            "type": "array"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/network-interfaces/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "controller_name": {
            "description": "Name (A or B) of the controller where the interface is hosted. Plain string.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "group_leader_array": {
            "description": "Name of the group leader array. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFibreChannelConfigsWithSortKey": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier for the array. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFibreChannelConfigsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "group_leader_array": {
            "description": "Name of the group leader array. String of up to 64 alphanumeric characters, - and . and : are allowed after first character",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFibreChannelFabricInfo": {
        "nullable": true,
        "properties": {
          "fabric_switch_name": {
            "description": "Name of the Fibre Channel switch.",
            "example": "Switch_A1",
            "nullable": true,
            "type": "string"
          },
          "fabric_switch_port": {
            "description": "Port on the Fibre Channel switch to which connection is established.",
            "example": 10,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "fabric_switch_wwnn": {
            "description": "World Wide Node Name for the connected port on the fabric switch.",
            "example": "da:ad:da:ad:da:ad:da:ad",
            "nullable": true,
            "type": "string"
          },
          "fabric_switch_wwpn": {
            "description": "World Wide Port Name for the connected port on the fabric switch.",
            "example": "d0:0d:d0:0d:d0:0d:d0:0d",
            "nullable": true,
            "type": "string"
          },
          "fabric_wwn": {
            "description": "World Wide Node Name for the Fabric Switch.",
            "example": "fa:b4:1c:fa:b4:1c:fa:b4",
            "nullable": true,
            "type": "string"
          },
          "fc_id": {
            "description": "FCID assigned to the Fabric Channel fabric port.",
            "example": "1ceace",
            "nullable": true,
            "type": "string"
          },
          "logged_in": {
            "description": "Login information for interface. True if interface has logged in to the Fibre Channel fabric, else false.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "NimbleFibreChannelInterfaceDetails": {
        "nullable": true,
        "properties": {
          "array_name_or_serial": {
            "description": "Name or serial number of array where the interface is hosted.",
            "example": "g1a1",
            "nullable": true,
            "type": "string"
          },
          "bus_location": {
            "description": "PCI bus location of the HBA for this Fibre Channel port.",
            "example": "0000:81:00.0",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/ports/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "fabric_info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NimbleFibreChannelFabricInfo"
              }
            ],
            "description": "Fibre Channel fabric information."
          },
          "fc_port_name": {
            "description": "Name of Fibre Channel port.",
            "example": "fc1",
            "nullable": true,
            "type": "string"
          },
          "firmware_version": {
            "description": "Version of the Fibre Channel firmware.",
            "example": "1.1.59.0",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "link_info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NimbleFibreChannelLinkInfo"
              }
            ],
            "description": "Information about the Fibre Channel link at which interface is operating."
          },
          "logical_port_number": {
            "description": "Logical port number for the Fibre Channel port.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "online": {
            "description": "Identify whether the Fibre Channel interface is online.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "orientation": {
            "description": "Orientation of FC ports on a HBA. An orientation of 'right_to_left' indicates that ports are ordered as 3,2,1,0 on the slot. Possible values: 'left_to_right', 'right_to_left'.",
            "example": "left_to_right",
            "nullable": true,
            "type": "string"
          },
          "partial_response_ok": {
            "description": "Port response.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "peerzone": {
            "description": "Active peer zone for this Fibre Channel interface.",
            "example": "peerzone",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "HBA port number for this Fibre Channel port.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "slot": {
            "description": "HBA slot number for this Fibre Channel port.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFibreChannelLinkInfo": {
        "nullable": true,
        "properties": {
          "link_speed": {
            "description": "Speed of the Fibre Channel link.",
            "example": "link_speed_1000M",
            "nullable": true,
            "type": "string"
          },
          "link_status": {
            "description": "Status of the Fibre Channel link. Possible values: plat_fc_link_status_reset, plat_fc_link_status_down, plat_fc_link_status_up, plat_fc_link_status_error, plat_fc_link_status_unknown, plat_fc_link_status_not_connected",
            "example": "plat_fc_link_status_reset",
            "nullable": true,
            "type": "string"
          },
          "max_link_speed": {
            "description": "Maximum speed of the Fibre Channel link.",
            "example": "link_speed_10000M",
            "nullable": true,
            "type": "string"
          },
          "operational_status": {
            "description": "Operational status of the Fibre Channel link. Possible values: plat_fc_operational_status_admin_offline, plat_fc_operational_status_direct, plat_fc_operational_status_initializing, plat_fc_operational_status_configured, plat_fc_operational_status_fault, plat_fc_operational_status_operational, plat_fc_operational_status_unknown, plat_fc_operational_status_unconfigured",
            "example": "plat_fc_operational_status_admin_offline",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFolderDetails": {
        "nullable": true,
        "properties": {
          "access_protocol": {
            "description": "Access protocol of the folder. This attribute is used by the VASA Provider to determine the access protocol of the bind request. If not specified in the creation request, it will be the access protocol supported by the group. If the group supports multiple protocols, the default will be Fibre Channel. This field is meaningful only to VVol folder. Possible values: 'iscsi', 'fc'.",
            "example": "iscsi",
            "nullable": true,
            "type": "string"
          },
          "agent_type": {
            "description": "External management agent type. Possible values: 'none', 'smis', 'vvol', 'openstack'.",
            "example": "openstack",
            "nullable": true,
            "type": "string"
          },
          "app_uuid": {
            "description": "Application identifier of the folder.",
            "example": "00000002000040008a259996ae869835",
            "nullable": true,
            "type": "string"
          },
          "appserver_id": {
            "description": "Identifier of the application server associated with the folder.",
            "nullable": true,
            "type": "string"
          },
          "appserver_name": {
            "description": "Name of the application server associated with the folder.",
            "nullable": true,
            "type": "string"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "capacity_bytes": {
            "description": "Capacity of the folder in bytes. If the folder's size has a usage limit, capacity_bytes will be the folder's usage limit. If the folder's size does not have a usage limit, capacity_bytes will be the pool's capacity. This field is meaningful only when the usage_valid attribute is true.",
            "example": 244695092429,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "compressed_snap_usage_bytes": {
            "description": "Compressed usage of snapshots in the folder. This field is meaningful only when the usage_valid attribute is true.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "compressed_vol_usage_bytes": {
            "description": "Compressed usage of volumes in the folder. This field is meaningful only when the usage_valid attribute is true.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "compression_ratio": {
            "description": "Compression savings for the folder expressed as ratio. This field is meaningful only when the usage_valid attribute is true.",
            "example": 1,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/folders/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this folder was created.",
            "example": 1600169692,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of folder.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "folset_id": {
            "description": "Identifier of the folder set associated with the folder. Only VVol folder can be associated with the folder set. The folder and the containing folder set must be associated with the same application server.",
            "nullable": true,
            "type": "string"
          },
          "folset_name": {
            "description": "Name of the folder set associated with the folder. Only VVol folder can be associated with the folder set. The folder and the containing folder set must be associated with the same application server.",
            "nullable": true,
            "type": "string"
          },
          "fqn": {
            "description": "Fully qualified name of folder in the pool.",
            "example": "/path/to/folder",
            "nullable": true,
            "type": "string"
          },
          "free_space_bytes": {
            "description": "Free space in the folder in bytes. If the folder has a usage limit, free_space_bytes will be the folder's free space (the folder's usage limit minus the folder's space usage). If the folder does not have a usage limit, free_space_bytes will be the pool's free space. This field is meaningful only when the usage_valid attribute is true.",
            "example": 244695092429,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "full_name": {
            "description": "Fully qualified name of folder in the group.",
            "example": "default:/folder1",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "inherited_vol_perfpol_id": {
            "description": "Identifier of the default performance policy for a newly created volume.",
            "example": "030a259996ae869835000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "inherited_vol_perfpol_name": {
            "description": "Name of the default performance policy for a newly created volume.",
            "example": "default",
            "nullable": true,
            "type": "string"
          },
          "last_modified": {
            "description": "Identifier of the default performance policy for a newly created volume.",
            "example": 1600169692,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_bytes": {
            "description": "Folder limit size in bytes. By default, a folder (except SMIS and VVol types) does not have a limit. If limit_bytes is not specified when a folder is created, or if limit_bytes is set to the largest possible 64-bit signed integer (9223372036854775807), then the folder has no limit. Otherwise, a limit smaller than the capacity of the pool can be set. On output, if the folder has a limit, the limit_bytes_specified attribute will be true and limit_bytes will be the limit. If the folder does not have a limit, the limit_bytes_specified attribute will be false and limit_bytes will be interpreted based on the value of the usage_valid attribute. If the usage_valid attribute is true, limits_byte will be the capacity of the pool. Otherwise, limits_bytes is not meaningful and can be null. SMIS and VVol folders require a size limit. This attribute is superseded by limit_size_bytes.",
            "example": 244695092429,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_bytes_specified": {
            "description": "Indicates whether the folder has a limit.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "limit_iops": {
            "description": "IOPS limit for this folder. If limit_iops is not specified when a folder is created, or if limit_iops is set to -1, then the folder has no IOPS limit. IOPS limit should be in range [256, 4294967294] or -1 for unlimited.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_mbps": {
            "description": "Throughput limit for this folder in MB/s. If limit_mbps is not specified when a folder is created, or if limit_mbps is set to -1, then the folder has no throughput limit. MBPS limit should be in range [1, 4294967294] or -1 for unlimited.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_size_bytes": {
            "description": "Folder size limit in bytes. If limit_size_bytes is not specified when a folder is created, or if limit_size_bytes is set to -1, then the folder has no limit. Otherwise, a limit smaller than the capacity of the pool can be set. Folders with an agent_type of 'smis' or 'vvol' must have a size limit.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "num_snapcolls": {
            "description": "Number of snapshot collections inside the folder. This attribute is deprecated and has no meaningful value.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "num_snaps": {
            "description": "Number of snapshots inside the folder. This attribute is deprecated and has no meaningful value.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "overdraft_limit_pct": {
            "description": "Amount of space to consider as overdraft range for this folder as a percentage of folder used limit. Valid values are from 0% - 200%. This is the limit above the folder usage limit beyond which enforcement action(volume offline/non-writable) is issued.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "provisioned_bytes": {
            "description": "Sum of provisioned size of volumes in the folder.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "provisioned_limit_size_bytes": {
            "description": "Limit on the provisioned size of volumes in a folder. If provisioned_limit_size_bytes is not specified when a folder is created, or if provisioned_limit_size_bytes is set to -1, then the folder has no provisioned size limit.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "search_name": {
            "description": "Name of folder used for object search.",
            "example": "vol:1",
            "nullable": true,
            "type": "string"
          },
          "snap_compression_ratio": {
            "description": "Identifier of the default performance policy for a newly created volume.",
            "example": 1,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "tenant_id": {
            "description": "Tenant ID of the folder. This is used to determine what tenant context the folder belongs to.",
            "example": "2f0a259996ae869835000000000000000000000002",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "uncompressed_snap_usage_bytes": {
            "description": "Uncompressed usage of snapshots in the folder. This field is meaningful only when the usage_valid attribute is true.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "uncompressed_vol_usage_bytes": {
            "description": "Uncompressed usage of volumes in the folder. This field is meaningful only when the usage_valid attribute is true.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "unused_reserve_bytes": {
            "description": "Unused reserve of volumes in the folder in bytes. This field is meaningful only when the usage_valid attribute is true.",
            "example": "0",
            "nullable": true,
            "type": "string"
          },
          "unused_snap_reserve_bytes": {
            "description": "Unused reserve of snapshots of volumes in the folder in bytes. This field is meaningful only when the usage_valid attribute is true.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage_bytes": {
            "description": "Sum of mapped usage and snapshot uncompressed usage of volumes in the folder.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage_valid": {
            "description": "Indicate whether the space usage attributes of folder are valid.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "vol_compression_ratio": {
            "description": "Compression ratio of volumes in the folder. This field is meaningful only when the usage_valid attribute is true.",
            "example": 1,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "volume_list": {
            "description": "List of volumes contained by the folder.",
            "items": {
              "$ref": "#/components/schemas/NimbleVolumeSummary"
            },
            "nullable": true,
            "type": "array"
          },
          "volume_mapped_bytes": {
            "description": "Sum of mapped usage of volumes in the folder.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleFolderDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleFolderFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleFolderDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed folder object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/folders/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFolderFieldsWithSortKey": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier of the folder. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the folder. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "pool_id": {
            "description": "ID of the pool where the folder resides.`Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "pool_name": {
            "description": "Name of the pool where the folder resides.`Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFolderFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier of the folder.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the folder.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "pool_id": {
            "description": "ID of the pool where the folder resides.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "pool_name": {
            "description": "Name of the pool where the folder resides.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleFolderList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleFolderFieldsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleFolderDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for folder objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/folders",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of folders.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleFolderSummary": {
        "nullable": true,
        "properties": {
          "fqn": {
            "description": "Fully qualified name of folder.",
            "example": "Folder0",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier of folder. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleHCFContext": {
        "description": "Context for aggregating health check results. Possible values: 'all', 'failover', 'sw_update'.`Filter, Sort`",
        "example": "active",
        "nullable": true,
        "type": "string"
      },
      "NimbleHCFContexts": {
        "description": "Context for aggregating health check results. Possible values: 'all', 'failover', 'sw_update'.",
        "example": "all",
        "nullable": true,
        "type": "string"
      },
      "NimbleHCFResult": {
        "nullable": true,
        "properties": {
          "element_name": {
            "description": "Name of the element",
            "example": "nimblevega",
            "nullable": true,
            "type": "string"
          },
          "error_list": {
            "description": "List of health check errors for this element.",
            "items": {
              "example": "error1",
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "messages": {
            "description": "List of error or info messages.",
            "items": {
              "$ref": "#/components/schemas/NimbleErrorWithArguments"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleHCFScope": {
        "description": "Scope at which the health check is to be run.Possible values: 'controller', 'array', 'group'.`Filter, Sort`",
        "example": "array",
        "nullable": true,
        "type": "string"
      },
      "NimbleHCFScopes": {
        "description": "Scope at which the health check is to be run.Possible values: 'controller', 'array', 'group'.",
        "example": "array",
        "nullable": true,
        "type": "string"
      },
      "NimbleHandoverVolumeCollectionsInput": {
        "description": "Perform handover action on a volume collection input.",
        "properties": {
          "invoke_on_upstream_partner": {
            "description": "Invoke handover request on upstream partner. Default: 'false'. This operation is not supported for synchronous replication volume vollections. Possible values: 'true', 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "no_reverse": {
            "description": "Do not automatically reverse direction of replication. Using this argument will prevent the new owner from automatically replicating the volume collection to this node when the handover completes. The default behavior is to enable replication back to this node. Default: 'false'. Possible values: 'true', 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "override_upstream_down": {
            "description": "Allow the handover request to proceed even if upstream array is down. The default behavior is to return an error when upstream is down. This option is applicable for synchronous replication only. Default: 'false'. Possible values: 'true', 'false'.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "replication_partner_id": {
            "description": "Replication partner ID of the new owner. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "replication_partner_id"
        ],
        "type": "object"
      },
      "NimbleHealthStatusDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleHealthStatusWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleHealthStatusWithDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed health status object",
            "example": "api/v1/storage-systems/devicetype2/2a0df0fe6f7dc7bb16000000000000000000004817/health-status/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleHealthStatusList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleHealthStatusWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleHealthStatusWithDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for health status objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/health-status",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number ofhealth checks.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleHealthStatusWithDetails": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "element_result": {
            "$ref": "#/components/schemas/NimbleHCFResult"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "on_demand": {
            "description": "Flag to indicate running the health checks and then report results.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          }
        },
        "type": "object"
      },
      "NimbleHealthStatusWithSortKey": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "Identifier of the array to which this result belongs.`Filter, Sort`",
            "example": "active",
            "nullable": true,
            "type": "string"
          },
          "context": {
            "$ref": "#/components/schemas/NimbleHCFContext"
          },
          "ctrlr_id": {
            "description": "Identifier of the controller to which this result belongs.`Filter, Sort`",
            "example": "active",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the health check. `Filter`",
            "example": "1300000000000004d30000000000000001",
            "nullable": true,
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/NimbleHCFScope"
          }
        },
        "type": "object"
      },
      "NimbleHealthStatusWithoutSortKey": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "Identifier of the array to which this result belongs.",
            "example": "1300000000000004d30000000000000001",
            "nullable": true,
            "type": "string"
          },
          "context": {
            "$ref": "#/components/schemas/NimbleHCFContexts"
          },
          "ctrlr_id": {
            "description": "Identifier of the controller to which this result belongs.",
            "example": "1300000000000004d30000000000000001",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the health check.",
            "example": "1300000000000004d30000000000000001",
            "nullable": true,
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/NimbleHCFScopes"
          }
        },
        "type": "object"
      },
      "NimbleHostGroupDetails": {
        "description": "Host group details for the volumes to be exported for data access.",
        "nullable": true,
        "properties": {
          "host_group_id": {
            "description": "Identifier for the host group.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "lun": {
            "description": "Custom LUN ID for the host group. Specify integer in the range 0 to 2047.",
            "example": 100,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleHostReview": {
        "description": "host review",
        "nullable": true,
        "properties": {
          "changes": {
            "$ref": "#/components/schemas/NimbleChanges"
          },
          "initiators": {
            "description": "list of initiator reviews",
            "items": {
              "$ref": "#/components/schemas/NimbleInitiatorReview"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleHostReviewInput": {
        "description": "Request body for provisioning review post call",
        "properties": {
          "hostGroups": {
            "description": "list of hostGroups",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleHostReviewOutput": {
        "description": "Provisioning review response",
        "items": {
          "$ref": "#/components/schemas/NimbleHostReviewSingle"
        },
        "nullable": true,
        "type": "array"
      },
      "NimbleHostReviewSingle": {
        "description": "Provisioning review response",
        "nullable": true,
        "properties": {
          "hostGroupId": {
            "description": "Host group ID",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "hosts": {
            "description": "list of hosts",
            "items": {
              "$ref": "#/components/schemas/NimbleHostReview"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleISCSIInitiator": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Unique identifier of the iSCSI initiator.",
            "example": "021c9973433673c3db000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "ip_address": {
            "description": "IP address of the iSCSI initiator.",
            "example": "xx.xxx.xx.xx",
            "nullable": true,
            "type": "string"
          },
          "iqn": {
            "description": "IQN name of the iSCSI initiator.",
            "example": "vegaiqn",
            "nullable": true,
            "type": "string"
          },
          "label": {
            "description": "Unique label of the iSCSI initiator.",
            "example": "vega",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleInitiator": {
        "nullable": true,
        "properties": {
          "access_protocol": {
            "description": "Access protocol used by the initiator. Possible values: 'iscsi', 'fc'. `Filter, Sort`",
            "example": "iscsi",
            "nullable": true,
            "type": "string"
          },
          "alias": {
            "description": "Alias of the Fibre Channel initiator. Maximum alias length is 32 characters. Each initiator alias must have an associated WWPN specified using the 'wwpn' attribute.You can choose not to enter the WWPN for an initiator when using previously saved initiator alias.String of up to 32 alphanumeric characters, or one of $^-_.: cannot begin with non-alphanumeric character.`Filter, Sort`",
            "example": "my_initiator-4",
            "nullable": true,
            "type": "string"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "chapuser_id": {
            "description": "Identifier for the CHAP user.`Filter, Sort`",
            "example": "011c9973433673c3db000000000000000000000000",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/host-initiators/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this initiator group was created. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Identifier for initiator. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "initiator_group_id": {
            "description": "Identifier of the initiator group that this initiator is assigned to. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "initiator_group_name": {
            "description": "Name of the initiator group that this initiator is assigned to. String of up to 64 alphanumeric characters, - and . and : are allowed after first character `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "ip_address": {
            "description": "IP address of the iSCSI initiator. Each initiator IP address must have an associated name specified using 'name' attribute.You can choose not to enter the name for an initiator if you prefer not to authenticate using both name and IP address, in this case the IQN name will be returned as '*'. Alphanumeric, hyphenated, colon or period separated string of up to 255 characters or '*' `Filter, Sort`",
            "example": "iqn.2007-11.com.storage:zmytestvol1-v0df0fe6f7dc7bb16.0000016b.70374579",
            "nullable": true,
            "type": "string"
          },
          "iqn": {
            "description": "IQN name of the iSCSI initiator. Each initiator IQN name must have an associated IP address specified using the 'ip_address' attribute.You can choose not to enter the IP address for an initiator if you prefer not to authenticate using both name and IP address,in this case the IP address will be returned as '*'. `Filter, Sort`",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "label": {
            "description": "Unique Identifier of the iSCSI initiator. Label is required when creating iSCSI initiator. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "last_modified": {
            "description": "Time when this initiator group was last modified.Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "override_existing_alias": {
            "description": "Forcibly add Fibre Channel initiator to initiator group by updating or removing conflicting Fibre Channel initiator aliases.",
            "example": null,
            "nullable": true,
            "type": "boolean"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "sc_HostInitiatorId": {
            "description": "Host Service Initiator Id",
            "example": "1223f5s",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "wwpn": {
            "description": "WWPN (World Wide Port Name) of the Fibre Channel initiator. WWPN is required when creating a Fibre Channel initiator. Each initiator WWPN can have an associated alias specified using the 'alias' attribute. You can choose not to enter the alias for an initiator if you prefer not to assign an initiator alias. Eight bytes expressed in hex separated by colons.`Filter, Sort`",
            "example": "af:32:f1:20:bc:ba:43:1a",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleInitiatorDetails": {
        "nullable": true,
        "properties": {
          "access_protocol": {
            "description": "Access protocol used by the initiator. Possible values: 'iscsi', 'fc'.",
            "nullable": true,
            "type": "string"
          },
          "alias": {
            "description": "Alias of the Fibre Channel initiator. Maximum alias length is 32 characters. Each initiator alias must have an associated WWPN specified using the 'wwpn' attribute.You can choose not to enter the WWPN for an initiator when using previously saved initiator alias.String of up to 32 alphanumeric characters, or one of $^-_.: cannot begin with non-alphanumeric character.",
            "example": "my_initiator-4",
            "nullable": true,
            "type": "string"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "chapuser_id": {
            "description": "Identifier for the CHAP user.",
            "example": "011c9973433673c3db000000000000000000000000",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this initiator group was created. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Identifier for initiator. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "initiator_group_id": {
            "description": "Identifier of the initiator group that this initiator is assigned to. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "initiator_group_name": {
            "description": "Name of the initiator group that this initiator is assigned to. String of up to 64 alphanumeric characters, - and . and : are allowed after first character",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "ip_address": {
            "description": "IP address of the iSCSI initiator. Each initiator IP address must have an associated name specified using 'name' attribute.You can choose not to enter the name for an initiator if you prefer not to authenticate using both name and IP address, in this case the IQN name will be returned as '*'. Alphanumeric, hyphenated, colon or period separated string of up to 255 characters or '*'",
            "example": "iqn.2007-11.com.storage:zmytestvol1-v0df0fe6f7dc7bb16.0000016b.70374579",
            "nullable": true,
            "type": "string"
          },
          "iqn": {
            "description": "IQN name of the iSCSI initiator. Each initiator IQN name must have an associated IP address specified using the 'ip_address' attribute.You can choose not to enter the IP address for an initiator if you prefer not to authenticate using both name and IP address,in this case the IP address will be returned as '*'.",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "label": {
            "description": "Unique Identifier of the iSCSI initiator. Label is required when creating iSCSI initiator. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "last_modified": {
            "description": "Time when this initiator group was last modified.Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "override_existing_alias": {
            "description": "Forcibly add Fibre Channel initiator to initiator group by updating or removing conflicting Fibre Channel initiator aliases.",
            "example": null,
            "nullable": true,
            "type": "boolean"
          },
          "requestUri": {
            "description": "requestUri for detailed initiators object",
            "example": "api/v1/storage-systems/devicetype2/2a0df0fe6f7dc7bb16000000000000000000004817/host-initiators/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          },
          "wwpn": {
            "description": "WWPN (World Wide Port Name) of the Fibre Channel initiator. WWPN is required when creating a Fibre Channel initiator. Each initiator WWPN can have an associated alias specified using the 'alias' attribute. You can choose not to enter the alias for an initiator if you prefer not to assign an initiator alias. Eight bytes expressed in hex separated by colons.",
            "example": "af:32:f1:20:bc:ba:43:1a",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleInitiatorGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InitiatorGroupFilterableFields"
          },
          {
            "$ref": "#/components/schemas/NimbleInitiatorGroupCommon"
          }
        ],
        "nullable": true,
        "type": "object"
      },
      "NimbleInitiatorGroupCommon": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/host-groups/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this initiator group was created. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of initiator group. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "fc_initiators": {
            "description": "List of FC initiators. When create/update fc_initiators, wwpn is required. List of Fibre Channel initiators.",
            "items": {
              "$ref": "#/components/schemas/NimbleFCInitiator"
            },
            "nullable": true,
            "type": "array"
          },
          "fc_sessions": {
            "description": "List of FC sessions.",
            "items": {
              "$ref": "#/components/schemas/NimbleFCSessionDetails"
            },
            "nullable": true,
            "type": "array"
          },
          "fc_tdz_ports": {
            "description": "List of target Fibre Channel ports with Target Driven Zoning configured on this initiator group.",
            "items": {
              "$ref": "#/components/schemas/NimbleFCTdzPorts"
            },
            "nullable": true,
            "type": "array"
          },
          "full_name": {
            "description": "Initiator group's full name. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "iscsi_initiators": {
            "description": "List of ISCSI initiators. When create/update iscsi_initiators, either iqn or ip_address is always required with label.",
            "items": {
              "$ref": "#/components/schemas/NimbleISCSIInitiator"
            },
            "nullable": true,
            "type": "array"
          },
          "last_modified": {
            "description": "Time when this initiator group was last modified. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "metadata": {
            "description": "Key-value pairs that augment an initiator group's attributes.",
            "items": {
              "$ref": "#/components/schemas/NimbleMetadata"
            },
            "nullable": true,
            "type": "array"
          },
          "num_connections": {
            "description": "Total number of connections from initiators in the initiator group.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "sc_HostId": {
            "description": "Host Service Host Id",
            "example": "132b493352ca3141456333edf403be0c",
            "type": "string"
          },
          "search_name": {
            "description": "Initiator group name used for search. Alphanumeric string, up to 64 characters including hyphen, period, colon.",
            "example": "vol:1",
            "nullable": true,
            "type": "string"
          },
          "target_subnets": {
            "description": "List of target subnet labels. If specified, discovery and access to volumes will be restricted to the specified subnets. List of target subnet tables.",
            "items": {
              "$ref": "#/components/schemas/NimbleTargetSubnets"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "volume_count": {
            "description": "Number of volumes that are accessible by the initiator group.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "volume_list": {
            "description": "List of volumes that are accessible by the initiator group. List of volumes.",
            "items": {
              "$ref": "#/components/schemas/NimbleVolList"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleInitiatorGroupDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InitiatorGroupFilterableFieldsWithoutFilter"
          },
          {
            "$ref": "#/components/schemas/NimbleInitiatorGroupCommon"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed initiator groups object",
            "example": "api/v1/storage-systems/devicetype2/2a0df0fe6f7dc7bb16000000000000000000004817/host-groups/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleInitiatorGroupList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NimbleInitiatorGroup"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed initiator groups object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/host-groups",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of initiator groups.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleInitiatorReview": {
        "description": "initiator review",
        "nullable": true,
        "properties": {
          "address": {
            "description": "address",
            "nullable": true,
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/NimbleChanges"
          }
        },
        "type": "object"
      },
      "NimbleInitiatorsList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NimbleInitiator"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for nimble initiator objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/host-initiators",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of initiators.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleKpiMetrics": {
        "description": "kpi metrics with read, write and total average values",
        "nullable": true,
        "properties": {
          "read": {
            "$ref": "#/components/schemas/nimbleperfData"
          },
          "total": {
            "$ref": "#/components/schemas/nimbleperfData"
          },
          "write": {
            "$ref": "#/components/schemas/nimbleperfData"
          }
        },
        "type": "object"
      },
      "NimbleMailSettingInput": {
        "description": "Nimble mail-settings input.",
        "nullable": true,
        "properties": {
          "smtp_port": {
            "description": "Port number of SMTP Server. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 25,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "smtp_server": {
            "description": "Hostname or IP Address of SMTP Server. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "example": "example-1.com",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleMergeGroupsInput": {
        "description": "Perform group merge with the specified group.",
        "properties": {
          "force": {
            "description": "Ignore warnings and forcibly merge specified group with this group. Possible values: 'true', 'false'.",
            "example": true,
            "type": "boolean"
          },
          "skip_secondary_mgmt_ip": {
            "description": "Skip check for secondary management IP address. Possible values: 'true', 'false'.",
            "example": true,
            "type": "boolean"
          },
          "src_group_ip": {
            "description": "IP address of the source group. Four numbers in the range [0,255] separated by periods. Example: '128.0.0.1'.",
            "example": "123.12.12.32",
            "nullable": true,
            "type": "string"
          },
          "src_group_name": {
            "description": "Name of the source group. String of up to 64 alphanumeric characters, - is allowed after first character. Example: 'g1-exchange'.",
            "example": "group1",
            "nullable": true,
            "type": "string"
          },
          "src_passphrase": {
            "description": "Source group encryption passphrase. Encryption passphrase. String with size from 8 to 64 printable characters. Example: 'passphrase-91'.",
            "example": "passphrase-91",
            "type": "string"
          },
          "src_password": {
            "description": "Password of the source group. String of 8 to 255 printable characters excluding ampersand and ;[]`. Example: 'password-91'.",
            "example": "password1",
            "nullable": true,
            "type": "string"
          },
          "src_username": {
            "description": "Username of the source group. String of up to 80 alphanumeric characters, beginning with a letter. For Active Directory users, it can include backslash (\\), dash (-), period (.), underscore (_) and space. Example: 'user1', 'companydomain\\user1'.",
            "example": "admin",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "src_group_name",
          "src_group_ip",
          "src_username",
          "src_password"
        ],
        "type": "object"
      },
      "NimbleMergePoolInput": {
        "description": "Merge the specified pool into the target pool. All volumes on the specified pool are moved to the target pool and the specified pool is then deleted. All the arrays in the pool are assigned to the target pool.",
        "properties": {
          "force": {
            "description": "Forcibly merge the specified pool into target pool. Defaults to false.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "target_pool_id": {
            "description": "ID of the target pool. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004801",
            "type": "string"
          }
        },
        "required": [
          "target_pool_id"
        ],
        "type": "object"
      },
      "NimbleMetadata": {
        "nullable": true,
        "properties": {
          "key": {
            "description": "Identifier of key-value pair.",
            "example": "vega-key",
            "nullable": true,
            "type": "string"
          },
          "value": {
            "description": "Value of key-value pair.",
            "example": "vega-value",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleMoveVolumeToAnotherPoolInput": {
        "description": "Input to move Nimble volume to another pool.",
        "properties": {
          "dest_pool_id": {
            "description": "ID of the destination pool or folder. Specify a pool ID when the volumes should not be in a folder; otherwise, specify a folder ID and the pool will be derived from the folder. A 42 digit hexadecimal number",
            "example": "0a00000000000004d3000000000000000000000001",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "dest_pool_id"
        ],
        "type": "object"
      },
      "NimbleNIC": {
        "nullable": true,
        "properties": {
          "data_ip": {
            "description": "Data IP address.",
            "example": "127.0.0.102",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of NIC.",
            "example": "eth1",
            "nullable": true,
            "type": "string"
          },
          "subnet_label": {
            "description": "Subnet label for this NIC.",
            "example": "subnet1",
            "nullable": true,
            "type": "string"
          },
          "tagged": {
            "description": "Identify whether the NIC is tagged.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "NimbleNetworkFieldsWithSortKey": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier for network settings. `Filter`",
            "example": "1300000000000004d30000000000000001",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the network configuration. Possible values: 'active', 'backup', 'draft'. `Filter, Sort`",
            "example": "active",
            "nullable": true,
            "type": "string"
          },
          "role": {
            "description": "Role of network configuration. Possible values: 'active', 'backup', 'draft'.  `Filter, Sort`",
            "example": "active",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNetworkFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier for network settings.",
            "example": "1300000000000004d30000000000000001",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the network configuration. Possible values: 'active', 'backup', 'draft'",
            "example": "active",
            "nullable": true,
            "type": "string"
          },
          "role": {
            "description": "Role of network configuration. Possible values: 'active', 'backup', 'draft'",
            "example": "active",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNetworkIP": {
        "nullable": true,
        "properties": {
          "ip": {
            "description": "Associated ip address.",
            "example": "127.0.0.1",
            "nullable": true,
            "type": "string"
          },
          "vlan_id": {
            "description": "vlan id.",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleNetworkInterfaceDetails": {
        "nullable": true,
        "properties": {
          "array_name_or_serial": {
            "description": "Name or serial of the array where the interface is hosted. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myarray",
            "nullable": true,
            "type": "string"
          },
          "controller_id": {
            "description": "Identifier of the controller where the interface is hosted. A 42 digit hexadecimal number.",
            "example": "c300000000000004d3000000000000000400000000",
            "nullable": true,
            "type": "string"
          },
          "ip_list": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IpListInfo"
              }
            ],
            "description": "Information about the Fibre Channel link at which interface is operating."
          },
          "is_present": {
            "description": "Whether this interface is present on this controller. Possible values: true, false.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "link_speed": {
            "description": "Speed of the link. Possible values: link_speed_unknown, link_speed_10M, link_speed_100M, link_speed_1000M, link_speed_10000M.",
            "example": "link_speed_1000M",
            "nullable": true,
            "type": "string"
          },
          "link_status": {
            "description": "Status of the link. Possible values: link_status_unknown, link_status_down, link_status_up.",
            "example": "link_status_up",
            "nullable": true,
            "type": "string"
          },
          "mac": {
            "description": "MAC address of the interface. Mac address of an interface.",
            "example": "11:33:55:77:99:BB",
            "nullable": true,
            "type": "string"
          },
          "max_link_speed": {
            "description": "Maximum speed of the link. Possible values: link_speed_unknown, link_speed_10M, link_speed_100M, link_speed_1000M, link_speed_10000M.",
            "example": "link_speed_1000M",
            "nullable": true,
            "type": "string"
          },
          "mtu": {
            "description": "MTU on the link.",
            "example": 1500,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nic_type": {
            "description": "Interface type. Possible values: nic_type_unknown, nic_type_tp, nic_type_sfp.",
            "example": "nic_type_tp",
            "nullable": true,
            "type": "string"
          },
          "partial_response_ok": {
            "description": "Port response.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "port": {
            "description": "Port number for this interface.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "slot": {
            "description": "Slot number for this interface.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleNetworkInterfaceFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "Identifier for the array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "array_name_or_serial": {
            "description": "Name or serial of the array where the interface is hosted String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "mac": {
            "description": "MAC address of the interface. Mac address of an interfaces.",
            "example": "11:33:55:77:99:BB",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNetworkInterfaceList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleNetworkInterfacesWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleNetworkInterfacesDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for  Network Interfaces",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/network-interfaces",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of Network Interfaces.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleNetworkInterfaceWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleNetworkInterfaceFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleNetworkInterfacesDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed network interfaces object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/network-interfaces/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNetworkInterfacesDetails": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "Identifier for the array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "array_name_or_serial": {
            "description": "Name or serial of the array where the interface is hosted.String of up to 64 alphanumeric characters.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/network-interfaces/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "controller_id": {
            "description": "Identifier of the controller where the interface is hosted. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "controller_name": {
            "description": "Name (A or B) of the controller where the interface is hosted. Plain string.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Identifier for the array. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "ip_list": {
            "description": "List of IP addresses assigned to this network interface. List of IP address assignment details to network interface.",
            "items": {
              "$ref": "#/components/schemas/NimbleNetworkIP"
            },
            "nullable": true,
            "type": "array"
          },
          "is_present": {
            "description": "Whether this interface is present on this controller. Possible values : true, false.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "link_speed": {
            "description": "Speed of the link. Possible values: link_speed_unknown, link_speed_10M,link_speed_100M, link_speed_1000M, link_speed_10000M..",
            "example": "link_speed_1000M",
            "nullable": true,
            "type": "string"
          },
          "link_status": {
            "description": "Status of the link. Possible values: link_status_unknown,link_status_down, link_status_up",
            "example": "link_status_up",
            "nullable": true,
            "type": "string"
          },
          "mac": {
            "description": "MAC address of the interface. Mac address of an interface.",
            "example": "11:33:55:77:99:BB",
            "nullable": true,
            "type": "string"
          },
          "max_link_speed": {
            "description": "Maximum speed of the link. Possible values: 'link_speed_unknown', 'link_speed_10M','link_speed_100M', 'link_speed_1000M', 'link_speed_10000M', 'link_speed_25000M','link_speed_40000M', 'link_speed_50000M', 'link_speed_100000M'.",
            "example": "link_speed_1000M",
            "nullable": true,
            "type": "string"
          },
          "mtu": {
            "description": "MTU on the link. Unsigned 64-bit integer.",
            "example": 1234,
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the interface. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "nic_type": {
            "description": "Interface type. Possible values: nic_type_unknown, nic_type_tp, nic_type_sfp",
            "example": "nic_type_tp",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "Port number for this interface.Unsigned 64-bit integer.",
            "example": 1234,
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "slot": {
            "description": "Slot number for this interface. Unsigned 64-bit integer.",
            "example": 1234,
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNetworkInterfacesWithSortKey": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "Identifier for the array. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "array_name_or_serial": {
            "description": "Name or serial of the array where the interface is hosted String of up to 64 alphanumeric characters, - and . and : are allowed after first character.`Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the array. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "mac": {
            "description": "MAC address of the interface. Mac address of an interface. `Filter, Sort`",
            "example": "11:33:55:77:99:BB",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNetworkSettingDetails": {
        "nullable": true,
        "properties": {
          "active_since": {
            "description": "Start time of activity.",
            "example": 1591599112000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "array_list": {
            "description": "List of array network configs.",
            "items": {
              "$ref": "#/components/schemas/NimbleArrayNet"
            },
            "nullable": true,
            "type": "array"
          },
          "associatedLinks": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/network-settings/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this net configuration was created.",
            "example": 1591599192000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "group_leader_array": {
            "description": "Name of the group leader array.",
            "example": "Array12",
            "nullable": true,
            "type": "string"
          },
          "iscsi_automatic_connection_method": {
            "description": "Indicates whether automatic connection method is enabled.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "iscsi_connection_rebalancing": {
            "description": "Indicates whether rebalancing is enabled.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "last_active": {
            "description": "Time of last activity.",
            "example": 1591599122000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "last_modified": {
            "description": "Time when this network configuration was last modified.",
            "example": 1591599102000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "mgmt_ip": {
            "description": "Management IP address for the Group.",
            "example": "127.0.0.101",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "route_list": {
            "description": "List of static routes.",
            "items": {
              "$ref": "#/components/schemas/NimbleRoute"
            },
            "nullable": true,
            "type": "array"
          },
          "secondary_mgmt_ip": {
            "description": "Secondary management IP address for the Group.",
            "example": "127.0.0.102",
            "nullable": true,
            "type": "string"
          },
          "subnet_list": {
            "description": "List of subnet configs.",
            "items": {
              "$ref": "#/components/schemas/NimbleSubnet"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNetworkSettingsDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleNetworkFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleNetworkSettingDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed network setting object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/network-settings/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNetworkSettingsList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleNetworkFieldsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleNetworkSettingDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for network setting objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/network-settings",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of network settings.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleNewArrayList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleArrayFieldsWithoutSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleArrayDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "total": {
            "description": "Number of systems",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleNsCtrlrHwSensorInfo": {
        "nullable": true,
        "properties": {
          "ctrlr_owner": {
            "description": "The controller owning this sensor. Possible values: 'A', 'B', 'independent'.",
            "example": "independent",
            "nullable": true,
            "type": "string"
          },
          "current_reading": {
            "description": "A sensor type specific reading (RPM for fans, degrees celsius for temperature).",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "display_name": {
            "description": "A human readable name for the sensor.",
            "example": "sensor-1",
            "nullable": true,
            "type": "string"
          },
          "location": {
            "description": "The location of this sensor.",
            "example": "left rear",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "A uniquely identifying name.",
            "example": "sensor-1",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "The current state of this sensor. Possible values: 'sensor_ok', 'sensor_alert_cond', 'sensor_missing', 'sensor_reading_unavail', 'sensor_failed'.",
            "example": "sensor_ok",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNsCtrlrNvmeCard": {
        "nullable": true,
        "properties": {
          "serial_number": {
            "description": "Serial number.",
            "example": "AC-109084",
            "nullable": true,
            "type": "string"
          },
          "size": {
            "description": "NVMe card cache size in bytes.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "state": {
            "description": "Online state. Possible values: 'valid', 'in use', 'failed'.",
            "example": "valid",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNsCtrlrRaidInfo": {
        "properties": {
          "cur_copies": {
            "description": "Current number of copies.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "is_resyncing": {
            "description": "Is this raid array resynchronizing.",
            "nullable": true,
            "type": "boolean"
          },
          "max_copies": {
            "description": "Maximum number of copies.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "raid_id": {
            "description": "Raid ID for this raid array.",
            "example": 18,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "raid_type": {
            "description": "Type of raid for this array.",
            "example": "raid0",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNsDiskSetAttr": {
        "nullable": true,
        "properties": {
          "ave_mb_ps": {
            "description": "Average evacuation speed in MB/s; valid only when sw_state is evacuating, ie. evacuation is underway.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ave_segment_ps": {
            "description": "Average evacuation speed in segments/sec; valid only when sw_state is evacuating, ie. evacuation is underway.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ave_ttc": {
            "description": "Average time to complete in seconds; valid only when sw_state is evacuating, ie. evacuation is underway.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "driveset": {
            "description": "Driveset index for this shelf.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "is_capacity_valid": {
            "description": "Is the capacity fields in this data struct valid.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_flash_shelf": {
            "description": "Is this a all-flash-shelf.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "pause_state": {
            "description": "State of evacuation, paused or in-progress; valid only when sw_state is evacuating, ie. evacuation is underway.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pct_completion": {
            "description": "Evacuation percent completion; valid only when sw_state is evacuating, ie. evacuation is underway.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "raw_cache_capacity": {
            "description": "Raw cache capacity for this shelf.",
            "example": 34359738368,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "raw_capacity": {
            "description": "Hdd raw capacity for this shelf.",
            "example": 476741369856,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "sw_state": {
            "description": "Software state. Possible values:'available', 'online', 'foreign', 'unknown'.",
            "example": "online",
            "nullable": true,
            "type": "string"
          },
          "usable_cache_capacity": {
            "description": "Estimated usable cache capacity for this shelf.",
            "example": 244695092429,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usable_capacity": {
            "description": "Estimated usable capacity for this shelf.",
            "example": 244695092429,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleNsKeyValue": {
        "nullable": true,
        "properties": {
          "key": {
            "description": "Identifier of key-value pair.",
            "example": "name",
            "nullable": true,
            "type": "string"
          },
          "value": {
            "description": "Value of key-value pair.",
            "example": "AA-100373",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNsPoolSummary": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "ID of pool.",
            "example": "0a1c9973433673c3db000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of pool.",
            "example": "default",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNsSchedule": {
        "nullable": true,
        "properties": {
          "active": {
            "description": "A schedule is active only if it is owned by the same owner as the volume collection. Only active schedules of a volume collection participate in the creation of snapshots and replication.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "at_time": {
            "description": "Time of day when snapshot should be taken.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "days": {
            "description": "Which days snapshots should be taken.",
            "example": "all",
            "nullable": true,
            "type": "string"
          },
          "disable_appsync": {
            "description": "Disables application synchronized snapshots and creates crash consistent snapshots instead.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "downstream_partner": {
            "description": "Partner name if snapshots created by this schedule should be replicated.",
            "example": "abc",
            "nullable": true,
            "type": "string"
          },
          "downstream_partner_id": {
            "description": "Partner ID if snapshots created by this schedule should be replicated.",
            "example": "0c1c9973433673c3db000000000000000000000008",
            "nullable": true,
            "type": "string"
          },
          "downstream_partner_name": {
            "description": "Partner name if snapshots created by this schedule should be replicated.",
            "example": "abc",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "ID of protection schedule.",
            "example": "0c1c9973433673c3db000000000000000000000008",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of protection schedule.",
            "example": "daily",
            "nullable": true,
            "type": "string"
          },
          "num_retain": {
            "description": "Number of snapshots to retain.",
            "example": 30,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "num_retain_replica": {
            "description": "Number of snapshots to retain on the replica.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "period": {
            "description": "Frequency of snapshots.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "period_unit": {
            "description": "Units for repeat frequency -- minutes, hours, days or weeks. Possible values: 'hours', 'weeks', 'minutes', 'days'.",
            "example": "days",
            "nullable": true,
            "type": "string"
          },
          "repl_alert_thres": {
            "description": "Replication alert threshold.",
            "example": 86400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "replicate_every": {
            "description": "Which snapshots should be replicated.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "schedule_id": {
            "description": "ID of protection schedule.",
            "example": "0c1c9973433673c3db000000000000000000000008",
            "nullable": true,
            "type": "string"
          },
          "schedule_name": {
            "description": "Name of protection schedule.",
            "example": "daily",
            "nullable": true,
            "type": "string"
          },
          "schedule_type": {
            "description": "regular or external_trigger. Possible values: 'external_trigger', 'regular'.",
            "example": "regular",
            "nullable": true,
            "type": "string"
          },
          "skip_db_consistency_check": {
            "description": "Skip consistency check for database files on snapshots created by this schedule.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "snap_verify": {
            "description": "Run verification tool on snapshot created by this schedule.",
            "nullable": true,
            "type": "boolean"
          },
          "until_time": {
            "description": "Time of day to stop taking snapshots.",
            "example": 86399,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleNsShelfCtrlr": {
        "nullable": true,
        "properties": {
          "cached_serial": {
            "description": "CachedSerial - Cached serial.",
            "example": "cs-18bb66",
            "nullable": true,
            "type": "string"
          },
          "ctrlr_attrset_list": {
            "description": "List of ctrlr attribute set for each logical controller.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsShelfCtrlrAttrSet"
            },
            "nullable": true,
            "type": "array"
          },
          "ctrlr_hw_model": {
            "description": "Controller hardware model. Possible values:'head_x9', 'head_x8', 'head_gen5_2u', 'es2_4u', 'head_vmware', 'es1_3u', 'head_x9_2u', 'head_x10', 'head_gen5', 'es3_4u', 'unknown'.",
            "example": "head_x8",
            "nullable": true,
            "type": "string"
          },
          "ctrlr_sensor_last_run": {
            "description": "The time of last valid sensor reading, in epoch seconds.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ctrlr_sensors": {
            "description": "The list of individual sensor reading in this controller.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsShelfSensor"
            },
            "nullable": true,
            "type": "array"
          },
          "ctrlr_side": {
            "description": "Position of this controller in the chassis. Possible values:'A', 'B', 'unknown'.",
            "example": "A",
            "nullable": true,
            "type": "string"
          },
          "enc_loc_id": {
            "description": "Location ID based on SAS topology.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "exp_sas_addr": {
            "description": "Expander SAS address.",
            "example": "0x5003048000b0567f",
            "nullable": true,
            "type": "string"
          },
          "extra_attributes": {
            "description": "Extra attributes as attribute value pairs.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "fan_overall_status": {
            "description": "The overall status for the fans on this controller. Possible values:'Missing', 'Failed', 'OK', 'Alerted'.",
            "example": "Missing",
            "nullable": true,
            "type": "string"
          },
          "hw_master_state": {
            "description": "SES device hardware mastership state. Possible values:'not master', 'failed', 'unknown', 'master'.",
            "example": "master",
            "nullable": true,
            "type": "string"
          },
          "hw_mship_failure": {
            "description": "SES device hardware mastership failure.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "identify_status": {
            "description": "Status of chassis identifier.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "port_info": {
            "description": "Port info for each SAS port.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsShelfPortInfo"
            },
            "nullable": true,
            "type": "array"
          },
          "psu_overall_status": {
            "description": "The overall status for the PSU on this controller.. Possible values: 'OK', 'Alerted', 'Failed', 'Missing'.",
            "example": "Failed",
            "nullable": true,
            "type": "string"
          },
          "sw_master_state": {
            "description": "SES device software mastership state. Possible values:'not master', 'want master', 'unknown', 'master', 'release master'.",
            "example": "release master",
            "nullable": true,
            "type": "string"
          },
          "temp_overall_status": {
            "description": "The overall status for the temperature of this controller.  Possible values:'Missing', 'Failed', 'OK', 'Alerted'.",
            "example": "Missing",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNsShelfCtrlrAttrSet": {
        "nullable": true,
        "properties": {
          "cached_serial": {
            "description": "Cached serial.",
            "example": "AA-100373",
            "nullable": true,
            "type": "string"
          },
          "disk_serials": {
            "description": "Comma separated list of disk serials connected to this logical controller.",
            "example": "disk_sdf:2:0:0:0,disk_sdg:2:0:1:0,disk_sdh:2:0:2:0,disk_sdi:2:0:3:0,disk_sdj:2:0:4:0,disk_sdk:2:0:5:0,disk_sdb:1:0:0:0,disk_sdc:1:0:1:0,disk_sdd:1:0:2:0,disk_sde:1:0:3:0,disk_sdl:2:0:6:0,disk_sdm:2:0:8:0,disk_sdn:2:0:9:0,disk_sdo:2:0:10:0,disk_sdp:2:0:11:0,disk_sdq:2:0:12:0",
            "nullable": true,
            "type": "string"
          },
          "disk_types": {
            "description": "Comma separated list of disk types (H for HDD, S for SSD).",
            "example": "WD-WCAW31074925,WD-WCAW31562278,WD-WCAW31543481,WD-WCAW31546957,CVPO105101AQ080JGN,CVPO1051023B080JGN,WD-WCAW31507140,WD-WCAW31545053,WD-WCAW31549016,WD-WCAW31544371",
            "nullable": true,
            "type": "string"
          },
          "hw_state": {
            "description": "The hardware state for this logical controller. Possible values:'discovering', 'disconnected', 'void','ready','faulty'.",
            "example": "ready",
            "nullable": true,
            "type": "string"
          },
          "session_serial": {
            "description": "Session serial.",
            "example": "shelf_0_0x5003048000b0567f_1456884624.213307",
            "nullable": true,
            "type": "string"
          },
          "sw_type": {
            "description": "The software type of this logical controller. Possible values:'Disk Shelf', 'unknown shelf software type', 'All Flash Shelf','Head Shelf'.",
            "example": "Disk Shelf",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNsShelfPortInfo": {
        "nullable": true,
        "properties": {
          "port_errors": {
            "description": "Comma separated list of integers to indicate error conditions.",
            "nullable": true,
            "type": "string"
          },
          "port_idx": {
            "description": "Index of the port, starting from 0.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "port_name": {
            "description": "Name of the port.",
            "example": "SAS PORT1",
            "nullable": true,
            "type": "string"
          },
          "port_status": {
            "description": "Status of the port. Possible values:'connected', 'disconnected', 'unknown','disabled'.",
            "example": "disconnected",
            "nullable": true,
            "type": "string"
          },
          "port_type": {
            "description": "Type of the sas port (e.g. upstream/downstream). Possible values:'upstream', 'downstream', 'unknown'.",
            "example": "downstream",
            "nullable": true,
            "type": "string"
          },
          "remote_loc_id": {
            "description": "The location ID of the controller that connects to this port.",
            "example": 4294967295,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "remote_port_id": {
            "description": "The pord_id of the remote SAS port that connects to this port.",
            "example": 4294967295,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "remote_sas_addr": {
            "description": "SAS address for the connected.",
            "nullable": true,
            "type": "string"
          },
          "remote_sas_domain": {
            "description": "The sas domain (A or B side) it connects to. Possible values:'A', 'B', 'unknown'.",
            "example": "A",
            "nullable": true,
            "type": "string"
          },
          "remote_sas_phy_id": {
            "description": "Comma separated list of phy ids that this port connects to.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleNsShelfSensor": {
        "nullable": true,
        "properties": {
          "cid": {
            "description": "Which controller this sensor applies to. Possible values:'A', 'B', 'unknown'.",
            "example": "A",
            "nullable": true,
            "type": "string"
          },
          "display_name": {
            "description": "Name for display purpose.",
            "example": "motherboard",
            "nullable": true,
            "type": "string"
          },
          "location": {
            "description": "Location of the sensor.",
            "example": "motherboard",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Internal name of the sensor.",
            "example": "motherboard",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Sensor status. Possible values:'Missing', 'Failed', 'OK', 'Alerted'.",
            "example": "OK",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Type of the sensor. Possible values:'fan', 'nvram', 'temperature', 'power supply'.",
            "example": "fan",
            "nullable": true,
            "type": "string"
          },
          "value": {
            "description": "Value of the sensor reading.",
            "example": 23,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleNsSnapLunInfo": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Snapshot ID.",
            "example": "0a1c9973433673c3db000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "lun": {
            "description": "Snapshot LUN.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Snapshot name.",
            "example": "default",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimblePerfPolicySummary": {
        "nullable": true,
        "properties": {
          "name": {
            "description": "Name of the performance policy.",
            "example": "Hyper-V 2012 VM Storage",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimblePerformancePolicyDetails": {
        "nullable": true,
        "properties": {
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "block_size": {
            "description": "Block Size in bytes to be used by the volumes created with this specific performance policy. Supported block sizes are 4096 bytes (4 KB), 8192 bytes (8 KB), 16384 bytes(16 KB), and 32768 bytes (32 KB). Block size of a performance policy cannot be changed once the performance policy is created.",
            "example": 4096,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/performance-policies/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dedupe_override_pools": {
            "description": "List of pools that override performance policy's dedupe setting.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsPoolSummary"
            },
            "nullable": true,
            "type": "array"
          },
          "description": {
            "description": "Description of a performance policy.",
            "example": "Performance policy suitable for use with Nimble Secondary Flash Array",
            "nullable": true,
            "type": "string"
          },
          "full_name": {
            "description": "Fully qualified name of the Performance Policy.",
            "example": "Backup Repository",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "search_name": {
            "description": "Name of the Performance Policy used for object search.",
            "example": "Backup Repository",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "volume_count": {
            "description": "Number of volumes using this performance policy.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimblePerformancePolicyDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimblePerformancePolicyFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimblePerformancePolicyDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed performance-policy object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/performance-policies/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimblePerformancePolicyFieldsWithSortKey": {
        "nullable": true,
        "properties": {
          "app_category": {
            "description": "Specifies the application category of the associated volume. `Filter, Sort`",
            "example": "Backup",
            "nullable": true,
            "type": "string"
          },
          "cache": {
            "description": "Flag denoting if data in the associated volume should be cached. `Filter, Sort`",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "cache_policy": {
            "description": "Specifies how data of associated volume should be cached. Supports two policies, 'normal' and 'aggressive'. 'normal' policy caches data but skips in certain conditions such as sequential I/O. 'aggressive' policy will accelerate caching of all data belonging to this volume, regardless of sequentiality. Possible values:'normal', 'no_write', 'aggressive_read_no_write', 'disabled', 'aggressive'. `Filter, Sort`",
            "example": "normal",
            "nullable": true,
            "type": "string"
          },
          "compress": {
            "description": "Flag denoting if data in the associated volume should be compressed. `Filter, Sort`",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "creation_time": {
            "description": "Time when the performance policy was created. `Filter, Sort`",
            "example": 1600169692,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "dedupe_enabled": {
            "description": "Specifies if dedupe is enabled for volumes created with this performance policy. `Filter, Sort`",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "Unique Identifier for the Performance Policy. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "last_modified": {
            "description": "Time when the performance policy's configurations were last modified. `Filter, Sort`",
            "example": 1600169692,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the Performance Policy. `Filter, Sort`",
            "example": "Backup Repository",
            "nullable": true,
            "type": "string"
          },
          "predefined": {
            "description": "Specifies if this performance policy is predefined (read-only). `Filter, Sort`",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "space_policy": {
            "description": "Specifies the state of the volume upon space constraint violation such as volume limit violation or volumes above their volume reserve, if the pool free space is exhausted. Supports two policies, 'offline' and 'non_writable'. Possible values:'offline', 'login_only', 'non_writable', 'read_only', 'invalid'. `Filter, Sort`",
            "example": "non_writable",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimblePerformancePolicyFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "app_category": {
            "description": "Specifies the application category of the associated volume.",
            "example": "Backup",
            "nullable": true,
            "type": "string"
          },
          "cache": {
            "description": "Flag denoting if data in the associated volume should be cached.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "cache_policy": {
            "description": "Specifies how data of associated volume should be cached. Supports two policies, 'normal' and 'aggressive'. 'normal' policy caches data but skips in certain conditions such as sequential I/O. 'aggressive' policy will accelerate caching of all data belonging to this volume, regardless of sequentiality. Possible values:'normal', 'no_write', 'aggressive_read_no_write', 'disabled', 'aggressive'.",
            "example": "normal",
            "nullable": true,
            "type": "string"
          },
          "compress": {
            "description": "Flag denoting if data in the associated volume should be compressed.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "creation_time": {
            "description": "Time when the performance policy was created.",
            "example": 1600169692,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "dedupe_enabled": {
            "description": "Specifies if dedupe is enabled for volumes created with this performance policy.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "Unique Identifier for the Performance Policy.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "last_modified": {
            "description": "Time when the performance policy's configurations were last modified.",
            "example": 1600169692,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the Performance Policy.",
            "example": "Backup Repository",
            "nullable": true,
            "type": "string"
          },
          "predefined": {
            "description": "Specifies if this performance policy is predefined (read-only).",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "space_policy": {
            "description": "Specifies the state of the volume upon space constraint violation such as volume limit violation or volumes above their volume reserve, if the pool free space is exhausted. Supports two policies, 'offline' and 'non_writable'. Possible values:'offline', 'login_only', 'non_writable', 'read_only', 'invalid'.",
            "example": "non_writable",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimblePerformancePolicyList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimblePerformancePolicyFieldsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimblePerformancePolicyDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for Performance Policy objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/performance-policies",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of Performance Policies.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimblePinnedVolumeInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleVolumeSummary"
          }
        ],
        "nullable": true,
        "properties": {
          "size_pinned_cache_bytes": {
            "description": "Total pinned cache size of the volume in bytes.",
            "example": 4817,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimblePoolDetails": {
        "nullable": true,
        "properties": {
          "all_flash": {
            "description": "Indicate whether the pool is an all_flash pool.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "array_count": {
            "description": "Number of arrays in the pool.",
            "example": 2,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "array_list": {
            "description": "List of arrays in the pool with detailed information. When create/update array list, only arrays' id is required.",
            "items": {
              "$ref": "#/components/schemas/NimbleArrayDetail"
            },
            "nullable": true,
            "type": "array"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "cache_capacity": {
            "description": "Total usable cache capacity of the pool in bytes.",
            "example": 256,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "capacity": {
            "description": "Total storage space of the pool in bytes.",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "clone_ratio": {
            "description": "Clone savings for the pool expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          },
          "compression_ratio": {
            "description": "Compression savings for the pool expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/storage-pools/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this pool was created. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 343200,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "data_reduction_ratio": {
            "description": "Space usage savings in the pool expressed as ratio that does not include thin-provisioning savings. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          },
          "dedupe_all_volumes": {
            "description": "Indicates if dedupe is enabled by default for new volumes on this pool.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "dedupe_capable": {
            "description": "Indicates whether the pool is capable of hosting deduped volumes.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "dedupe_capacity_bytes": {
            "description": "The dedupe capacity of a hybrid pool. Does not apply to all-flash pools.",
            "example": 10,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "dedupe_ratio": {
            "description": "Dedupe savings for the pool expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          },
          "dedupe_usage_bytes": {
            "description": "The dedupe usage of a hybrid pool. Does not apply to all-flash pools.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "description": {
            "description": "Text description of pool. String of up to 255 printable ASCII characters.",
            "example": "HA pool",
            "nullable": true,
            "type": "string"
          },
          "folder_list": {
            "description": "The list of fully qualified names of folders in the pool.",
            "items": {
              "$ref": "#/components/schemas/NimbleFolderSummary"
            },
            "nullable": true,
            "type": "array"
          },
          "free_space": {
            "description": "Free space of the pool in bytes.",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "full_name": {
            "description": "Fully qualified name of pool. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "pool0.0645689306120438",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "is_default": {
            "description": "Indicates if this is the default pool.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "last_modified": {
            "description": "Time when this pool was last modified. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 343200,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pinnable_cache_capacity": {
            "description": "Total pinnable cache capacity of the pool in bytes.",
            "example": 128,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pinned_cache_capacity": {
            "description": "Total pinned cache capacity of the pool in bytes.",
            "example": 128,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pinned_vol_list": {
            "description": "The list of pinned volumes in the pool.",
            "items": {
              "$ref": "#/components/schemas/NimblePinnedVolumeInfo"
            },
            "nullable": true,
            "type": "array"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "savings": {
            "description": "Overall space usage savings in the pool.",
            "example": 54,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_clone": {
            "description": "Space usage savings in the pool due to cloning of volumes.",
            "example": 64,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_compression": {
            "description": "Space usage savings in the pool due to compression.",
            "example": 48,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_data_reduction": {
            "description": "Space usage savings in the pool that does not include thin-provisioning savings.",
            "example": 107,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_dedupe": {
            "description": "Space usage savings in the pool due to deduplication.",
            "example": 58,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_ratio": {
            "description": "Overall space usage savings in the pool expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          },
          "savings_vol_thin_provisioning": {
            "description": "Space usage savings in the pool due to thin provisioning of volumes.",
            "example": 1073,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "search_name": {
            "description": "Name of pool used for object search. Alphanumeric string, up to 64 characters including hyphen, period, colon.",
            "example": "pool0.0645689306120438",
            "nullable": true,
            "type": "string"
          },
          "snap_count": {
            "description": "Snapshot count.",
            "example": 8,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapcoll_count": {
            "description": "Snapshot collection count.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "unassigned_array_list": {
            "description": "List of arrays being unassigned from the pool.",
            "items": {
              "$ref": "#/components/schemas/NimbleArrSummary"
            },
            "nullable": true,
            "type": "array"
          },
          "unused_reserve": {
            "description": "Unused reserve space of the pool in bytes.",
            "example": 15,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage": {
            "description": "Used space of the pool in bytes.",
            "example": 256,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage_valid": {
            "description": "Identifier of pool. A 42 digit hexadecimal number.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "vol_count": {
            "description": "Number of volumes assigned to the pool.",
            "example": 5,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vol_list": {
            "description": "The list of volumes in the pool.",
            "items": {
              "$ref": "#/components/schemas/NimbleVolumeSummary"
            },
            "nullable": true,
            "type": "array"
          },
          "vol_thin_provisioning_ratio": {
            "description": "Thin provisioning savings for volumes in the pool expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "NimblePoolDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimblePoolFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimblePoolDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed storage pool object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/storage-pools/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimblePoolFieldsWithSortKey": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier of pool. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of pool. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "pool0.0645689306120438",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimblePoolFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier of pool. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of pool. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "pool0.0645689306120438",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimblePoolsList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimblePoolFieldsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimblePoolDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for storage pool objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/storage-pools",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of pools.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimblePortDetails": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "Identifier for the array. A 42 digit hexadecimal number.",
            "example": "0900000000000004d3000000000000000000000004",
            "nullable": true,
            "type": "string"
          },
          "array_name_or_serial": {
            "description": "Name or serial number of array where the interface is hosted.",
            "example": "g1a1",
            "nullable": true,
            "type": "string"
          },
          "bus_location": {
            "description": "PCI bus location of the HBA for this Fibre Channel port.",
            "example": "0000:81:00.0",
            "nullable": true,
            "type": "string"
          },
          "controller_id": {
            "description": "Identifier of the controller where the interface is hosted. A 42 digit hexadecimal number.",
            "example": "c300000000000004d3000000000000000400000000",
            "nullable": true,
            "type": "string"
          },
          "controller_name": {
            "description": "Name (A or B) of the controller where the interface is hosted. Plain string.",
            "example": "A",
            "nullable": true,
            "type": "string"
          },
          "fabric_info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NimbleFibreChannelFabricInfo"
              }
            ],
            "description": "Fibre Channel fabric information."
          },
          "fc_port_id": {
            "description": "ID of the port with which the interface is associated.",
            "example": "1f01167316131",
            "nullable": true,
            "type": "string"
          },
          "fc_port_name": {
            "description": "Name of Fibre Channel port.",
            "example": "fc1",
            "nullable": true,
            "type": "string"
          },
          "firmware_version": {
            "description": "Version of the Fibre Channel firmware.",
            "example": "1.1.59.0",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the interface. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "ip_list": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IpListInfo"
              }
            ],
            "description": "Information about the Fibre Channel link at which interface is operating."
          },
          "is_present": {
            "description": "Whether this interface is present on this controller. Possible values: true, false.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "link_info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NimbleFibreChannelLinkInfo"
              }
            ],
            "description": "Information about the Fibre Channel link at which interface is operating."
          },
          "link_speed": {
            "description": "Speed of the link. Possible values: link_speed_unknown, link_speed_10M, link_speed_100M, link_speed_1000M, link_speed_10000M.",
            "example": "link_speed_1000M",
            "nullable": true,
            "type": "string"
          },
          "link_status": {
            "description": "Status of the link. Possible values: link_status_unknown, link_status_down, link_status_up.",
            "example": "link_status_up",
            "nullable": true,
            "type": "string"
          },
          "logical_port_number": {
            "description": "Logical port number for the Fibre Channel port.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "mac": {
            "description": "MAC address of the interface. Mac address of an interface.",
            "example": "11:33:55:77:99:BB",
            "nullable": true,
            "type": "string"
          },
          "max_link_speed": {
            "description": "Maximum speed of the link. Possible values: link_speed_unknown, link_speed_10M, link_speed_100M, link_speed_1000M, link_speed_10000M.",
            "example": "link_speed_1000M",
            "nullable": true,
            "type": "string"
          },
          "mtu": {
            "description": "MTU on the link.",
            "example": 1500,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the interface.",
            "example": "interface1.1",
            "nullable": true,
            "type": "string"
          },
          "nic_type": {
            "description": "Interface type. Possible values: nic_type_unknown, nic_type_tp, nic_type_sfp.",
            "example": "nic_type_tp",
            "nullable": true,
            "type": "string"
          },
          "online": {
            "description": "Identify whether the Fibre Channel interface is online.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "orientation": {
            "description": "Orientation of FC ports on a HBA. An orientation of 'right_to_left' indicates that ports are ordered as 3,2,1,0 on the slot. Possible values: 'left_to_right', 'right_to_left'.",
            "example": "left_to_right",
            "nullable": true,
            "type": "string"
          },
          "partial_response_ok": {
            "description": "Port response.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "peerzone": {
            "description": "Active peer zone for this Fibre Channel interface.",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "Port number for this interface.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "slot": {
            "description": "Slot number for this interface.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "wwnn": {
            "description": "World Wide Node Name for this Fibre Channel interface.",
            "example": "56:c9:ce:90:9b:84:c9:00",
            "nullable": true,
            "type": "string"
          },
          "wwpn": {
            "description": "World Wide Port Name for this Fibre Channel interface.",
            "example": "56:c9:ce:90:9b:84:c9:01",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimblePortsList": {
        "nullable": true,
        "properties": {
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "fibre_channel_interface": {
            "nullable": true,
            "properties": {
              "items": {
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FcInterfaceFilterableFields"
                    },
                    {
                      "$ref": "#/components/schemas/NimbleFibreChannelInterfaceDetails"
                    }
                  ]
                },
                "nullable": true,
                "type": "array"
              },
              "total": {
                "description": "Total number of fibre channel interface ports.",
                "example": 2,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "network_interface": {
            "nullable": true,
            "properties": {
              "items": {
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NetworkInterfaceFilterableFields"
                    },
                    {
                      "$ref": "#/components/schemas/NimbleNetworkInterfaceDetails"
                    }
                  ]
                },
                "nullable": true,
                "type": "array"
              },
              "total": {
                "description": "Total number of network interface ports.",
                "example": 2,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for storage port objects",
            "example": "v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/ports",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "total": {
            "description": "Total number of fibre channel interface and network interface ports.",
            "example": 4,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleProtectionTemplateDetails": {
        "nullable": true,
        "properties": {
          "agent_username": {
            "description": "Generic Backup agent username.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/protection-templates/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of protection template.",
            "example": "Provides hourly snapshots retained for 2 days, daily snapshots retained for 30 days, and weekly snapshots retained for 52 weeks.",
            "nullable": true,
            "type": "string"
          },
          "full_name": {
            "description": "Fully qualified name of protection template.",
            "example": "Retain-48Hourly-30Daily-52Weekly",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "repl_priority": {
            "description": "Replication priority for the protection template with the following choices: {normal | high}. Possible values:'normal', 'high'.",
            "example": "normal",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "schedule_list": {
            "description": "List of schedules for this protection policy.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsSchedule"
            },
            "nullable": true,
            "type": "array"
          },
          "search_name": {
            "description": "Name of protection template used for object search.",
            "example": "Retain-48Hourly-30Daily-52Weekly",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "vcenter_username": {
            "description": "VMware vCenter username.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleProtectionTemplateDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleProtectionTemplateFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleProtectionTemplateDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed protection-templates object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/protection-templates/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleProtectionTemplateFieldsWithSortKey": {
        "nullable": true,
        "properties": {
          "agent_hostname": {
            "description": "Generic Backup agent hostname. Custom port number can be specified with agent hostname using \\\\\":\\\\\". `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_cluster_name": {
            "description": "If the application is running within a Windows cluster environment then this is the cluster name. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_id": {
            "description": "Application ID running on the server. Application ID can only be specified if application synchronization is VSS.\n Possible values:'exchange_dag', 'sql2012', 'sql2014', 'inval', 'sql2005', 'sql2016', 'exchange', 'sql2017', 'sql2018', 'hyperv'. `Filter, Sort`",
            "example": "exchange_dag",
            "nullable": true,
            "type": "string"
          },
          "app_server": {
            "description": "Application server hostname. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_service_name": {
            "description": "If the application is running within a Windows cluster environment then this is the instance name of the service running within the cluster environment. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_sync": {
            "description": "Application synchronization ({none|vss|vmware|generic}). Possible values:'vss', 'vmware', 'none', 'generic'. `Filter, Sort`",
            "example": "vss",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this protection template was created. `Filter, Sort`",
            "example": 1604387561,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Identifier for protection template. `Filter`",
            "example": "1200000000000004d3000000000000000000000011",
            "nullable": true,
            "type": "string"
          },
          "last_modified": {
            "description": "Time when this protection template was last modified. `Filter, Sort`",
            "example": 1604387561,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Fully qualified name of protection template. `Filter, Sort`",
            "example": "Retain-48Hourly-30Daily-52Weekly",
            "nullable": true,
            "type": "string"
          },
          "vcenter_hostname": {
            "description": "VMware vCenter hostname. Custom port number can be specified with vCenter hostname. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleProtectionTemplateFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "agent_hostname": {
            "description": "Generic Backup agent hostname. Custom port number can be specified with agent hostname using \\\\\":\\\\\".",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_cluster_name": {
            "description": "If the application is running within a Windows cluster environment then this is the cluster name.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_id": {
            "description": "Application ID running on the server. Application ID can only be specified if application synchronization is VSS.\n Possible values:'exchange_dag', 'sql2012', 'sql2014', 'inval', 'sql2005', 'sql2016', 'exchange', 'sql2017', 'sql2018', 'hyperv'.",
            "example": "exchange_dag",
            "nullable": true,
            "type": "string"
          },
          "app_server": {
            "description": "Application server hostname.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_service_name": {
            "description": "If the application is running within a Windows cluster environment then this is the instance name of the service running within the cluster environment.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_sync": {
            "description": "Application synchronization ({none|vss|vmware|generic}). Possible values:'vss', 'vmware', 'none', 'generic'.",
            "example": "vss",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this protection template was created.",
            "example": 1604387561,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Identifier for protection template.",
            "example": "1200000000000004d3000000000000000000000011",
            "nullable": true,
            "type": "string"
          },
          "last_modified": {
            "description": "Time when this protection template was last modified.",
            "example": 1604387561,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Fully qualified name of protection template.",
            "example": "Retain-48Hourly-30Daily-52Weekly",
            "nullable": true,
            "type": "string"
          },
          "vcenter_hostname": {
            "description": "VMware vCenter hostname. Custom port number can be specified with vCenter hostname.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleProtectionTemplateList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleProtectionTemplateFieldsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleProtectionTemplateDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for Protection Template objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/protection-templates",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of Protection Templates.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleRemoveVolumeFromVolumeCollectionInput": {
        "description": "Remove volume from volume collection input.",
        "properties": {
          "volume_ids": {
            "description": "Volume ids that need to be remove from volume collections.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": false,
            "type": "array"
          }
        }
      },
      "NimbleReplicationPartner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleReplicationPartnerFilterableFields"
          },
          {
            "$ref": "#/components/schemas/NimbleReplicationPartnerCommon"
          }
        ],
        "nullable": true,
        "type": "object"
      },
      "NimbleReplicationPartnerCommon": {
        "nullable": true,
        "properties": {
          "alias": {
            "description": "String of up to 63 alphanumeric and can include hyphens characters but cannot start with hyphen.",
            "nullable": true,
            "type": "string"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "control_port": {
            "description": "Port number of partner control interface. Value -1 for an invalid port or a positive integer value up to 65535 representing the TCP/IP port.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "data_port": {
            "description": "Port number of partner data interface. Value -1 for an invalid port or a positive integer value up to 65535 representing the TCP/IP port.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "description": {
            "description": "Description of replication partner. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "full_name": {
            "description": "Fully qualified name of replication partner. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "parnter-A",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "last_keepalive_error": {
            "description": "Most recent error while attempting to ping the partner. Plain string.",
            "nullable": true,
            "type": "string"
          },
          "last_modified": {
            "description": "Time when this replication partner was last modified. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "last_sync_error": {
            "description": "Most recent error seen while attempting to sync objects to the partner. Plain string.",
            "nullable": true,
            "type": "string"
          },
          "match_folder": {
            "description": "Indicates whether to match the upstream volumes folder on the downstream. Possible values: true, false",
            "nullable": true,
            "type": "boolean"
          },
          "partner_group_uid": {
            "description": "Replication partner group uid. Unsigned 64-bit integer.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "port_range_start": {
            "description": "Positive integer value up to 65535 representing TCP/IP port. Example: 1234.",
            "nullable": true,
            "type": "integer"
          },
          "proxy_hostname": {
            "description": "String of up to 64 alphanumeric characters, - and . and : are allowed after first character. Example: 'myobject-5'",
            "nullable": true,
            "type": "string"
          },
          "proxy_user": {
            "description": "HTTP proxy server username, string up to 255 characters, special characters ([, ], `, ;, ampersand, tab, space, newline) are not allowed.",
            "nullable": true,
            "type": "string"
          },
          "remote_partner_folder_id": {
            "description": "The folder ID where volumes replicated from remote partner will be created. Replica volumes created as clones ignore this parameter and are always created in the same pool as their parent volume. A 42 digit hexadecimal number.",
            "nullable": true,
            "type": "string"
          },
          "remote_partner_folder_name": {
            "description": "The folder name where volumes replicated from remote partner will be created. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. Example: 'myobject-5'.",
            "nullable": true,
            "type": "string"
          },
          "remote_partner_id": {
            "description": "ID of the remote partner.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "remote_partner_name": {
            "description": "Name of the remote partner. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. Example: 'myobject-5'.",
            "nullable": true,
            "type": "string"
          },
          "remote_partner_pool_id": {
            "description": "The pool ID where volumes replicated from remote partner will be created. Replica volumes created as clones ignore this parameter and are always created in the same pool as their parent volume. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "remote_partner_pool_name": {
            "description": "The pool name where volumes replicated from remote partner will be created. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. Example: 'myobject-5'.",
            "nullable": true,
            "type": "string"
          },
          "remote_partner_subnet_label": {
            "description": "Label of the subnet used to replicate to remote partner. String of up to 64 alphanumeric characters, - and . and colon are allowed after first character.",
            "example": "management",
            "type": "string"
          },
          "remote_partner_subnet_type": {
            "description": "Type of the subnet used to replicate to the remote partner. Possible values are 'invalid', 'unconfigured', 'mgmt', 'data', 'mgmt_data'.",
            "example": "mgmt",
            "nullable": true,
            "type": "string"
          },
          "remote_partner_system_id": {
            "description": "ID of the system to which the remote partner belongs.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "replication_direction": {
            "description": "Direction of replication configured with this partner. Possible values: none, downstream, upstream, bi_directional",
            "nullable": true,
            "type": "string"
          },
          "search_name": {
            "description": "Name of replication partner used for object search. Alphanumeric string, up to 64 characters including hyphen, period, colon.",
            "example": "vol:1",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Status of the partner. Failed, Normal, Degraded, Unknown.",
            "nullable": true,
            "type": "string"
          },
          "throttled_bandwidth_current": {
            "description": "Current bandwidth throttle for this partner, expressed either as megabits per second or as -1 to indicate that there is no throttle. Signed 64-bit integer.",
            "example": -1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "throttled_bandwidth_current_kbps": {
            "description": "Current bandwidth throttle for this partner, expressed either as kilobits per second or as -1 to indicate that there is no throttle. Signed 64-bit integer.",
            "example": -1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "throttles": {
            "description": "Throttles used while replicating from/to this partner. All the throttles for the partner.",
            "items": {
              "$ref": "#/components/schemas/ReplicationThrottle"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "unique_name": {
            "description": "Possible values: 'true', 'false'.",
            "type": "boolean"
          },
          "volume_collection_list": {
            "description": "List of volume collections that are replicating from/to this partner. List of volume collections.",
            "items": {
              "$ref": "#/components/schemas/ReplicationVolumeCollectionSummary"
            },
            "nullable": true,
            "type": "array"
          },
          "witness": {
            "description": "Hostname or ip addresses of witness. Comma separated strings of up to 63 characters of hostname and/or ip addresses. Total length cannot exceed 255 characters.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleReplicationPartnerDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleReplicationPartnerFilterableFieldsWithoutFilter"
          },
          {
            "$ref": "#/components/schemas/NimbleReplicationPartnerCommon"
          }
        ],
        "nullable": true,
        "properties": {
          "requestURI": {
            "description": "RequestURI for detailed replication partner objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/replicationpartners/2a0df0fe6f7dc7bb16000000000000000000004009",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleReplicationPartnerFilterableFields": {
        "nullable": true,
        "properties": {
          "array_serial": {
            "description": "Serial number of group leader array of the partner. Plain string. `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "cfg_sync_status": {
            "description": "Indicates whether all volumes and volume collections have been synced to the partner. Possible values: N/A, Yes, No `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this replication partner was created. Seconds since last epoch i.e. 00:00 January 1, 1970. `Filter, Sort`",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "folder_id": {
            "description": "The Folder ID within the pool where volumes replicated from this partner will be created. This is not supported for pool partners. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "folder_name": {
            "description": "The Folder name within the pool where volumes replicated from this partner will be created. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "Folder_A",
            "nullable": true,
            "type": "string"
          },
          "hostname": {
            "description": "IP address or hostname of partner interface. This must be the partners Group Management IP address. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "10.103.204.194",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for a replication partner. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "is_alive": {
            "description": "Whether the partner is available, and responding to pings. Possible values: true, false `Filter, Sort`",
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of replication partner. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.`Filter, Sort`",
            "example": "parnter-A",
            "nullable": true,
            "type": "string"
          },
          "partner_type": {
            "description": "Type of the partner, Possible values: 'group' or 'pool'.`Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "paused": {
            "description": "Indicates whether replication traffic from/to this partner has been halted. Possible values: true, false `Filter, Sort`",
            "nullable": true,
            "type": "boolean"
          },
          "pool_id": {
            "description": "The pool ID where volumes replicated from this partner will be created. Replica volumes created as clones ignore this parameter and are always created in the same pool as their parent volume. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "pool_name": {
            "description": "The pool name where volumes replicated from this partner will be created. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "default-pool",
            "nullable": true,
            "type": "string"
          },
          "repl_hostname": {
            "description": "IP address or hostname of partner data interface. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "10.103.204.194",
            "nullable": true,
            "type": "string"
          },
          "subnet_label": {
            "description": "Label of the subnet used to replicate to this partner. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "management",
            "nullable": true,
            "type": "string"
          },
          "subnet_netmask": {
            "description": "Subnet mask used to replicate to this partner. A netmask expressed as a 32 bit binary value must have the highest bit set (2^31) and the lowest bit clear (2^0) with the first zero followed by only zeros. `Filter, Sort`",
            "example": "255.255.255.0",
            "nullable": true,
            "type": "string"
          },
          "subnet_network": {
            "description": "Subnet used to replicate to this partner. Four numbers in the range [0,255] separated by periods. `Filter, Sort`",
            "example": "128.0.0.1",
            "nullable": true,
            "type": "string"
          },
          "subnet_type": {
            "description": "Type of the subnet used to replicate to this partner. Possible values: invalid, unconfigured, mgmt, data, mgmt_data `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "Identifier for a system or array. A 42 digit hexadecimal number. `Filter`",
            "example": "0019dbd036e652bd91000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "version": {
            "description": "Replication version of the partner. Signed 64-bit integer. `Filter, Sort`",
            "example": -1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "volume_collection_list_count": {
            "description": "Count of volume collections that are replicating from/to this partner. Unsigned 64-bit integer. `Filter, Sort`",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleReplicationPartnerFilterableFieldsWithoutFilter": {
        "nullable": true,
        "properties": {
          "array_serial": {
            "description": "Serial number of group leader array of the partner. Plain string.",
            "nullable": true,
            "type": "string"
          },
          "cfg_sync_status": {
            "description": "Indicates whether all volumes and volume collections have been synced to the partner. Possible values: N/A, Yes, No. ",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this replication partner was created. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "folder_id": {
            "description": "The Folder ID within the pool where volumes replicated from this partner will be created. This is not supported for pool partners. A 42 digit hexadecimal number. ",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "folder_name": {
            "description": "The Folder name within the pool where volumes replicated from this partner will be created. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "Folder-A",
            "nullable": true,
            "type": "string"
          },
          "hostname": {
            "description": "IP address or hostname of partner interface. This must be the partners Group Management IP address. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "15.213.204.121",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for a replication partner. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "is_alive": {
            "description": "Whether the partner is available, and responding to pings. Possible values: true, false",
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of replication partner. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "parnter-A",
            "nullable": true,
            "type": "string"
          },
          "partner_type": {
            "description": "Type of the partner, Possible values: 'group' or 'pool'. ",
            "nullable": true,
            "type": "string"
          },
          "paused": {
            "description": "Indicates whether replication traffic from/to this partner has been halted. Possible values: true, false",
            "nullable": true,
            "type": "boolean"
          },
          "pool_id": {
            "description": "The pool ID where volumes replicated from this partner will be created. Replica volumes created as clones ignore this parameter and are always created in the same pool as their parent volume. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "pool_name": {
            "description": "The pool name where volumes replicated from this partner will be created. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "default-pool",
            "nullable": true,
            "type": "string"
          },
          "repl_hostname": {
            "description": "IP address or hostname of partner data interface. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "15.213.204.121",
            "nullable": true,
            "type": "string"
          },
          "subnet_label": {
            "description": "Label of the subnet used to replicate to this partner. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "management",
            "nullable": true,
            "type": "string"
          },
          "subnet_netmask": {
            "description": "Subnet mask used to replicate to this partner. A netmask expressed as a 32 bit binary value must have the highest bit set (2^31) and the lowest bit clear (2^0) with the first zero followed by only zeros.",
            "example": "255.255.255.0",
            "nullable": true,
            "type": "string"
          },
          "subnet_network": {
            "description": "Subnet used to replicate to this partner. Four numbers in the range [0,255] separated by periods.",
            "example": "128.0.0.1",
            "nullable": true,
            "type": "string"
          },
          "subnet_type": {
            "description": "Type of the subnet used to replicate to this partner. Possible values: invalid, unconfigured, mgmt, data, mgmt_data",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "Identifier for a system or array. A 42 digit hexadecimal number.",
            "example": "0019dbd036e652bd91000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "version": {
            "description": "Replication version of the partner. Signed 64-bit integer.",
            "example": -1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "volume_collection_list_count": {
            "description": "Count of volume collections that are replicating from/to this partner. Unsigned 64-bit integer.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleReplicationPartnersList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NimbleReplicationPartner"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "RequestUri for replication partner objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/replicationpartners",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of replication partners.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleRestoreVolumeInput": {
        "description": "Restore volume data from a previous snapshot.",
        "properties": {
          "base_snap_id": {
            "description": "ID of the snapshot to which this the volume is restored.",
            "example": "0a00000000000004d3000000000000000000000481",
            "nullable": true,
            "type": "string"
          },
          "enable_vol_offline": {
            "description": "Option to specify if volume should be set offline before restore. This value should be set to true if the volume is online.",
            "example": true,
            "type": "boolean"
          }
        },
        "required": [
          "base_snap_id"
        ],
        "type": "object"
      },
      "NimbleRoute": {
        "nullable": true,
        "properties": {
          "gateway": {
            "description": "Gateway IP address.",
            "example": "127.0.0.2",
            "nullable": true,
            "type": "string"
          },
          "tgt_netmask": {
            "description": "Target network mask.",
            "example": "255.255.255.0",
            "nullable": true,
            "type": "string"
          },
          "tgt_network": {
            "description": "Target network address.",
            "example": "127.0.2.0",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleShelfDetails": {
        "nullable": true,
        "properties": {
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "chassis_sensors": {
            "description": "List of chassis sensor readings.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsShelfSensor"
            },
            "nullable": true,
            "type": "array"
          },
          "chassis_type": {
            "description": "Chassis type. Possible values: 'chassis_unknown', 'chassis_3u16', 'chassis_4u24', 'chassis_nmbl_2u12', 'chassis_nmbl_4u24'",
            "example": "chassis_4u24",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/shelves/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "ctrlrs": {
            "description": "List of ctrlr info.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsShelfCtrlr"
            },
            "nullable": true,
            "type": "array"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "disk_sets": {
            "description": "Attributes for the disk sets in this shelf.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsDiskSetAttr"
            },
            "nullable": true,
            "type": "array"
          },
          "fan_overall_status": {
            "description": "The overall status for the fans on both controllers. Possible values: 'OK', 'Alerted', 'Failed', 'Missing'.",
            "example": "Failed",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "model_ext": {
            "description": "Extended model of the shelf or head unit.",
            "example": "CS210-8T-160F",
            "nullable": true,
            "type": "string"
          },
          "psu_overall_status": {
            "description": "The overall status for the PSUs. Possible values: 'OK', 'Alerted', 'Failed', 'Missing'.",
            "example": "Failed",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "temp_overall_status": {
            "description": "The overall status for the temperature on both controllers. Possible values: 'OK', 'Alerted', 'Failed', 'Missing'.",
            "example": "Failed",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleShelfDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleShelfFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleShelfDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed shelf object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/shelves/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleShelfFieldsWithSortKey": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "ID of array the shelf belongs to. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "array_name": {
            "description": "Name of array the shelf belongs to. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier of the shelf. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "model": {
            "description": "Model of the shelf or head unit. `Filter, Sort`",
            "example": "CS210",
            "nullable": true,
            "type": "string"
          },
          "serial": {
            "description": "The serial number of the chassis. `Filter, Sort`",
            "example": "AA-100373",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleShelfFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "array_id": {
            "description": "ID of array the shelf belongs to.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "array_name": {
            "description": "Name of array the shelf belongs to.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier of the shelf.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "model": {
            "description": "Model of the shelf or head unit.",
            "example": "CS210",
            "nullable": true,
            "type": "string"
          },
          "serial": {
            "description": "The serial number of the chassis.",
            "example": "AA-100373",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleShelfList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleShelfFieldsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleShelfDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for shelf objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/shelves",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of shelves.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleShelfListDetails": {
        "description": "List of Shelves that requires activation.",
        "properties": {
          "driveset_list": {
            "description": "List of driveset details.",
            "items": {
              "$ref": "#/components/schemas/NimbleDriveSetDetails"
            },
            "nullable": true,
            "type": "array"
          },
          "shelf_id": {
            "description": "ID of shelf. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "type": "string"
          }
        },
        "required": [
          "shelf_id",
          "driveset_list"
        ],
        "type": "object"
      },
      "NimbleShelfLocateInput": {
        "description": "Input to locate a Nimble shelf.",
        "properties": {
          "cid": {
            "description": "Which controller this sensor applies to. Possible values:'A', 'B'.",
            "example": "A",
            "type": "string"
          },
          "status": {
            "description": "Status value of identifier to set. Possible values: 'true', 'false'.",
            "example": true,
            "type": "boolean"
          }
        },
        "required": [
          "cid",
          "status"
        ],
        "type": "object"
      },
      "NimbleShelvesActivateInput": {
        "description": "Request body for  shelves activation workflow",
        "properties": {
          "shelf_list": {
            "description": "List of shelves details.",
            "items": {
              "$ref": "#/components/schemas/NimbleShelfListDetails"
            },
            "type": "array"
          }
        },
        "required": [
          "shelf_list"
        ],
        "type": "object"
      },
      "NimbleSnapCollSnapshot": {
        "nullable": true,
        "properties": {
          "expiry_time": {
            "description": "Unix timestamp indicating that the snapshot is considered expired by Snapshot Time-to-live(TTL). A value of 0 indicates that snapshot never expires. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Identifier for the snapshot. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of snapshot. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period.",
            "example": "snap1",
            "nullable": true,
            "type": "string"
          },
          "schedule_id": {
            "description": "Identifier of protection schedule. A 42 digit hexadecimal number.",
            "example": "0c40f75f5b73693a47000000000000000000000018",
            "nullable": true,
            "type": "string"
          },
          "schedule_name": {
            "description": "Name of protection schedule. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "Schedule-new",
            "nullable": true,
            "type": "string"
          },
          "snap_collection_id": {
            "description": "Identifier of snapshot collection. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004014",
            "nullable": true,
            "type": "string"
          },
          "snap_collection_name": {
            "description": "Name of snapshot collection. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. This type is used for object sets containing volumes, snapshots, snapshot collections and protocol endpoints.",
            "example": "snp1",
            "nullable": true,
            "type": "string"
          },
          "vol_id": {
            "description": "Parent volume ID. A 42 digit hexadecimal number.",
            "example": "0625dab4ed8948f2e000000000000000000000003a",
            "nullable": true,
            "type": "string"
          },
          "vol_name": {
            "description": "Name of the parent volume in which the snapshot belongs to. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. This type is used for object sets containing volumes, snapshots, snapshot collections and protocol endpoints.",
            "example": "vol1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleSnapcollSummary": {
        "nullable": true,
        "properties": {
          "snapcoll_creation_time": {
            "description": "Creation time of snapshot collection.",
            "example": "1601481600",
            "nullable": true,
            "type": "string"
          },
          "snapcoll_id": {
            "description": "ID of snapshot collection.",
            "example": "051c9973433673c3db00000000000000000000001c",
            "nullable": true,
            "type": "string"
          },
          "snapcoll_name": {
            "description": "Name of snapshot collection.",
            "example": "vol-daily-2020-10-01::00:00:00.000",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleSnapshot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleSnapshotFilterableFields"
          },
          {
            "$ref": "#/components/schemas/NimbleSnapshotCommon"
          }
        ],
        "nullable": true,
        "type": "object"
      },
      "NimbleSnapshotCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleSnapshotCollectionFilterableFields"
          },
          {
            "$ref": "#/components/schemas/NimbleSnapshotCollectionCommon"
          }
        ],
        "nullable": true,
        "type": "object"
      },
      "NimbleSnapshotCollectionCommon": {
        "nullable": true,
        "properties": {
          "allow_writes": {
            "description": "Allow applications to write to created snapshot(s). Mandatory and must be set to 'true' for VSS application synchronized snapshots.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/volume-collections/071491cb6652a03a6b00000000000000000000000/snapshot-collections/001491cb6652a03a6b000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this snapshot collection was created. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 1598951404,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of snapshot collection. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "is_complete": {
            "description": "Is complete.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_external_trigger": {
            "description": "Is externally triggered.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_manual": {
            "description": "Is manual.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_manually_managed": {
            "description": "Is snapshot collection manually managed, i.e., snapshot collection is manually or third party created or created by system at the time of volume restore or resize.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_replica": {
            "description": "Snapshot collection is a replica from upstream replication partner.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_unmanaged": {
            "description": "Indicates whether a snapshot collection is unmanaged. This is based on the state of individual snapshots.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "last_modified": {
            "description": "Time when this snapshot collection was last modified. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 1598952427,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "metadata": {
            "description": "Key-value pairs that augment a snapshot collection's attributes. List of key-value pairs. Keys must be unique and non-empty. When creating an object, values must be non-empty. When updating an object, an empty value causes the corresponding key to be removed.",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            },
            "nullable": true,
            "type": "array"
          },
          "origin_name": {
            "description": "Origination group name/ID. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "peer_snapcoll_id": {
            "description": "ID of the peer snapshot collection created by synchronous replication. Field will be null if no peer snapshot_collection was created by synchronous replication. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "replicate_to": {
            "description": "Specifies the partner name that the snapshots in this snapshot collection are replicated to. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "snapshots_list": {
            "description": "Snapshot list for a SnapshotCollection",
            "items": {
              "$ref": "#/components/schemas/NimbleSnapCollSnapshot"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleSnapshotCollectionDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleSnapshotCollectionFilterableFieldsWithoutFilter"
          },
          {
            "$ref": "#/components/schemas/NimbleSnapshotCollectionCommon"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed volume snapshot objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/volumes/0625dab4ed8948f2e000000000000000000000003a/snapshots/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleSnapshotCollectionFilterableFields": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier for the snapshot collection. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of snapshot. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. `Filter, Sort`",
            "example": "snap1",
            "nullable": true,
            "type": "string"
          },
          "online_status": {
            "description": "Online status of snapshot collection. This is based on the online status of the individual snapshots. Online status based on that of the constituent entities. Possible values: 'online', 'offline' or 'partial'.",
            "example": "online",
            "nullable": true,
            "type": "string"
          },
          "schedule_id": {
            "description": "Identifier of protection schedule. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a1df0fe6f7dc7bb16000000000000000000004017",
            "nullable": true,
            "type": "string"
          },
          "srep_owner_id": {
            "description": "ID of the partner where snapshots for this snapshot collection reside which were created by synchronous replication. Field will be null if no peer snapshot_collection was created by synchronous replication. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a1df0fe6f7dc7bb16000000000000000000004017",
            "nullable": true,
            "type": "string"
          },
          "volcoll_id": {
            "description": "Parent volume collection ID. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleSnapshotCollectionFilterableFieldsWithoutFilter": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier for the snapshot collection. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of snapshot. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. `Filter, Sort`",
            "example": "snap1",
            "nullable": true,
            "type": "string"
          },
          "online_status": {
            "description": "Online status of snapshot collection. This is based on the online status of the individual snapshots. Online status based on that of the constituent entities. Possible values: 'online', 'offline' or 'partial'.",
            "example": "online",
            "nullable": true,
            "type": "string"
          },
          "schedule_id": {
            "description": "Identifier of protection schedule. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a1df0fe6f7dc7bb16000000000000000000004017",
            "nullable": true,
            "type": "string"
          },
          "srep_owner_id": {
            "description": "ID of the partner where snapshots for this snapshot collection reside which were created by synchronous replication. Field will be null if no peer snapshot_collection was created by synchronous replication. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a1df0fe6f7dc7bb16000000000000000000004017",
            "nullable": true,
            "type": "string"
          },
          "volcoll_id": {
            "description": "Parent volume collection ID. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleSnapshotCollectionList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NimbleSnapshotCollection"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for sanpshot collecion objects of a volume collection",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/volume-collections/0625dab4ed8948f2e000000000000000000000003a/snapshot-collections",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of snapshot collections associated with a volume collection.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleSnapshotCommon": {
        "nullable": true,
        "properties": {
          "access_control_records": {
            "description": "List of access control records that apply to this snapshot. List of access control records associated with a volume or snapshot or protocol endpoint.",
            "items": {
              "$ref": "#/components/schemas/AccessControlRecord"
            },
            "nullable": true,
            "type": "array"
          },
          "agent_type": {
            "description": "External management agent type. Possible values: 'none', 'smis', 'vvol', 'openstack', 'openstackv2'.",
            "example": "none",
            "nullable": true,
            "type": "string"
          },
          "app_uuid": {
            "description": "Application identifier of snapshots. String of up to 255 alphanumeric characters, hyphen, colon, dot and underscore are allowed.",
            "example": "rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18",
            "nullable": true,
            "type": "string"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/storage-pools/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Time when this snapshot was created. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 1598951404,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text description of snapshot. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "expiry_after": {
            "description": "Number of seconds after which this snapshot is considered expired by snapshot TTL. A value of 0 indicates that snapshot never expires, 1 indicates that snapshot uses group-level configured TTL value and any other value indicates number of seconds.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "expiry_time": {
            "description": "Unix timestamp indicating that the snapshot is considered expired by Snapshot Time-to-live(TTL). A value of 0 indicates that snapshot never expires. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "is_manually_managed": {
            "description": "Is snapshot manually managed, i.e., snapshot is manually or third party created or created by system at the time of volume restore or resize.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_replica": {
            "description": "Snapshot is a replica from upstream replication partner.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_unmanaged": {
            "description": "Indicates whether the snapshot is unmanaged. The snapshot will not be deleted automatically unless the unmanaged cleanup feature is enabled.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "last_modified": {
            "description": "Time when this snapshot was last modified. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 1598952427,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "metadata": {
            "description": "Key-value pairs that augment a snapshot's attributes. List of key-value pairs. Keys must be unique and non-empty. When creating an object, values must be non-empty. When updating an object, an empty value causes the corresponding key to be removed.",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            },
            "nullable": true,
            "type": "array"
          },
          "new_data_compressed_bytes": {
            "description": "The bytes of compressed new data.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "new_data_uncompressed_bytes": {
            "description": "The bytes of uncompressed new data.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "new_data_valid": {
            "description": "Indicate the usage information is valid.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "offline_reason": {
            "description": "Snapshot offline reason - possible entries: one of 'user', 'recovery', 'replica', 'over_volume_limit', 'over_snapshot_limit', 'over_volume_reserve', 'nvram_loss_recovery', 'pool_free_space_exhausted' . Possible values: 'user', 'recovery', 'replica', 'nvram_loss_recovery', 'serial_number_collision', 'encryption_inactive', 'encryption_key_deleted', 'vvol_unbind', 'cache_unpin_in_progress', 'over_folder_overdraft_limit', 'over_volume_usage_limit', 'pool_free_space_exhausted', 'srep_unconfigured'.",
            "example": "user",
            "nullable": true,
            "type": "string"
          },
          "origin_name": {
            "description": "Origination group name. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "nimbleGroup",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "vol_id": {
            "description": "Parent volume ID. A 42 digit hexadecimal number.",
            "example": "0625dab4ed8948f2e000000000000000000000003a",
            "nullable": true,
            "type": "string"
          },
          "vol_name": {
            "description": "Name of the parent volume in which the snapshot belongs to. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. This type is used for object sets containing volumes, snapshots, snapshot collections and protocol endpoints.",
            "example": "vol1",
            "nullable": true,
            "type": "string"
          },
          "vpd_ieee0": {
            "description": "The first 64 bits of the snapshot's EUI-64 identifier, encoded as a hexadecimal string. Plain string.",
            "example": "bea16133315c83ab6c9ce90098b0ea001",
            "nullable": true,
            "type": "string"
          },
          "vpd_ieee1": {
            "description": "The last 64 bits of the snapshot's EUI-64 identifier, encoded as a hexadecimal string. Plain string.",
            "example": "6c9ce90098b0ea001",
            "nullable": true,
            "type": "string"
          },
          "vpd_t10": {
            "description": "The snapshot's T10 Vendor ID-based identifier. Plain string.",
            "example": "Nimble bea16133315c83ab6c9ce90098b0ea001",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleSnapshotDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleSnapshotFilterableFieldsWithoutFilter"
          },
          {
            "$ref": "#/components/schemas/NimbleSnapshotCommon"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed volume snapshot objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/volumes/0625dab4ed8948f2e000000000000000000000003a/snapshots/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleSnapshotFilterableFields": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier for the snapshot. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of snapshot. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. `Filter, Sort`",
            "example": "snap1",
            "nullable": true,
            "type": "string"
          },
          "online": {
            "description": "Online state for a snapshot means it could be mounted for data restore. `Filter, Sort`",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "pool_name": {
            "description": "Name of the pool in which the parent volume belongs to. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "default",
            "nullable": true,
            "type": "string"
          },
          "replication_status": {
            "description": "Replication status. Possible values: 'complete', 'in_progress', 'pending', 'fail'. `Filter, Sort`",
            "example": "in_progress",
            "nullable": true,
            "type": "string"
          },
          "schedule_id": {
            "description": "Identifier of protection schedule. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a1df0fe6f7dc7bb16000000000000000000004017",
            "nullable": true,
            "type": "string"
          },
          "schedule_name": {
            "description": "Name of protection schedule. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "snp1",
            "nullable": true,
            "type": "string"
          },
          "serial_number": {
            "description": "Identifier for the SCSI protocol. A 32 digit hexadecimal number. `Filter, Sort`",
            "example": "5596fd1da1c87b8d6c9ce900d3040000",
            "nullable": true,
            "type": "string"
          },
          "size": {
            "description": "Size of volume at time of snapshot (in bytes). `Filter, Sort`",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_collection_id": {
            "description": "Identifier of snapshot collection. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004014",
            "nullable": true,
            "type": "string"
          },
          "snap_collection_name": {
            "description": "Name of snapshot collection. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. This type is used for object sets containing volumes, snapshots, snapshot collections and protocol endpoints. `Filter, Sort`",
            "example": "snp1",
            "nullable": true,
            "type": "string"
          },
          "target_name": {
            "description": "The iSCSI Qualified Name (IQN) or the Fibre Channel World Wide Node Name (WWNN) of the target snapshot. The iSCSI Qualified Name (IQN) or the Fibre Channel World Wide Node Name (WWNN) of the target. `Filter, Sort`",
            "example": "iqn.2007-11.com.storage:vol0.762157726640911-v00000000000004d3.00000005.000004d3",
            "nullable": true,
            "type": "string"
          },
          "writable": {
            "description": "Whether snapshot is writable or not. Mandatory and must be set to 'true' for VSS application synchronized snapshots. `Filter, Sort`",
            "example": false,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "NimbleSnapshotFilterableFieldsWithoutFilter": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier for the snapshot. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of snapshot. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period.",
            "example": "snap1",
            "nullable": true,
            "type": "string"
          },
          "online": {
            "description": "Online state for a snapshot means it could be mounted for data restore.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "pool_name": {
            "description": "Name of the pool in which the parent volume belongs to. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "default",
            "nullable": true,
            "type": "string"
          },
          "replication_status": {
            "description": "Replication status. Possible values: 'complete', 'in_progress', 'pending', 'fail'.",
            "example": "in_progress",
            "nullable": true,
            "type": "string"
          },
          "schedule_id": {
            "description": "Identifier of protection schedule. A 42 digit hexadecimal number.",
            "example": "2a1df0fe6f7dc7bb16000000000000000000004017",
            "nullable": true,
            "type": "string"
          },
          "schedule_name": {
            "description": "Name of protection schedule. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "snp1",
            "nullable": true,
            "type": "string"
          },
          "serial_number": {
            "description": "Identifier for the SCSI protocol. A 32 digit hexadecimal number.",
            "example": "5596fd1da1c87b8d6c9ce900d3040000",
            "nullable": true,
            "type": "string"
          },
          "size": {
            "description": "Size of volume at time of snapshot (in bytes).",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_collection_id": {
            "description": "Identifier of snapshot collection. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004014",
            "nullable": true,
            "type": "string"
          },
          "snap_collection_name": {
            "description": "Name of snapshot collection. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. This type is used for object sets containing volumes, snapshots, snapshot collections and protocol endpoints.",
            "example": "snp1",
            "nullable": true,
            "type": "string"
          },
          "target_name": {
            "description": "The iSCSI Qualified Name (IQN) or the Fibre Channel World Wide Node Name (WWNN) of the target snapshot. The iSCSI Qualified Name (IQN) or the Fibre Channel World Wide Node Name (WWNN) of the target.",
            "example": "iqn.2007-11.com.storage:vol0.762157726640911-v00000000000004d3.00000005.000004d3",
            "nullable": true,
            "type": "string"
          },
          "writable": {
            "description": "Whether snapshot is writable or not. Mandatory and must be set to 'true' for VSS application synchronized snapshots.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "NimbleSnapshotList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NimbleSnapshot"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for volume snapshot objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/volumes/0625dab4ed8948f2e000000000000000000000003a/snapshots",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of snapshots associated with a volume.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleSpaceDomainDetails": {
        "nullable": true,
        "properties": {
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/storage-pools/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "deduped_volume_count": {
            "description": "Number of deduplicated volumes belonging to the space domain.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "perf_policy_names": {
            "description": "Name of the performance policies associated with the space domain.",
            "items": {
              "$ref": "#/components/schemas/NimblePerfPolicySummary"
            },
            "nullable": true,
            "type": "array"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "sample_rate": {
            "description": "Sample rate value.",
            "example": 255,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "volume_count": {
            "description": "Number of volumes belonging to the space domain.",
            "example": 3,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "volumes": {
            "description": "Volumes belonging to the space domain.",
            "items": {
              "$ref": "#/components/schemas/NimbleVolumeSummary"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleSpaceDomainDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleSpaceDomainFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleSpaceDomainDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed application-summary object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/applications/00473102de2f5f39d8000000000000000000000001/capacity-stats",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleSpaceDomainFieldsWithSortKey": {
        "nullable": true,
        "properties": {
          "app_category_id": {
            "description": "Identifier of the application category associated with the space domain. `Filter`",
            "example": "360000000000000000000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "app_category_name": {
            "description": "Name of the application category associated with the space domain. `Filter`",
            "example": "Virtual Server",
            "nullable": true,
            "type": "string"
          },
          "block_size": {
            "description": "Block size in bytes of volumes belonging to the space domain. `Sort`",
            "example": 4096,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "clone_ratio": {
            "description": "Clone savings for the space domain expressed as ratio. `Sort`",
            "example": 1,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "compressed_usage_bytes": {
            "description": "Compressed usage of volumes and snapshots in the space domain. `Sort`",
            "example": 878976,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "compression_ratio": {
            "description": "Compression savings for the space domain expressed as ratio. `Sort`",
            "example": 40.3879423328965,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "dedupe_ratio": {
            "description": "Deduplication savings for the space domain expressed as ratio. `Sort`",
            "example": 1,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "deduped": {
            "description": "Volumes in space domain are deduplicated by default. `Filter, Sort`",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "encrypted": {
            "description": "Volumes in space domain are encrypted. `Filter, Sort`",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "Identifier of the application summery. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "logical_dedupe_usage": {
            "description": "Logical space usage of volumes when deduped. `Sort`",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "physical_dedupe_usage": {
            "description": "Physical space usage of volumes including snapshots when deduped. `Sort`",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pool_id": {
            "description": "Identifier associated with the pool in the storage pool table. `Filter`",
            "example": "0a473102de2f5f39d8000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "pool_name": {
            "description": "Name of the pool containing the space domain. `Filter`",
            "example": "default",
            "nullable": true,
            "type": "string"
          },
          "savings_clone": {
            "description": "Space usage savings in the space domain due to cloning of volumes. `Sort`",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_compression": {
            "description": "Space usage savings in the space domain due to compression. `Sort`",
            "example": 34621056,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_dedupe": {
            "description": "Space usage savings in the space domain due to deduplication. `Sort`",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_logical_usage": {
            "description": "Logical usage of snapshots in the space domain. `Sort`",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "uncompressed_usage_bytes": {
            "description": "Uncompressed usage of volumes and snapshots in the space domain. `Sort`",
            "example": 35500032,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage": {
            "description": "Physical space usage of volumes in the space domain. `Sort`",
            "example": 878976,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vol_logical_usage": {
            "description": "Logical usage of volumes in the space domain. `Sort`",
            "example": 35500032,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vol_mapped_usage": {
            "description": "Mapped usage of volumes in the space domain, useful for computing clone savings. `Sort`",
            "example": 35500032,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleSpaceDomainFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "app_category_id": {
            "description": "Identifier of the application category associated with the space domain.",
            "example": "360000000000000000000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "app_category_name": {
            "description": "Name of the application category associated with the space domain.",
            "example": "Virtual Server",
            "nullable": true,
            "type": "string"
          },
          "block_size": {
            "description": "Block size in bytes of volumes belonging to the space domain.",
            "example": 4096,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "clone_ratio": {
            "description": "Clone savings for the space domain expressed as ratio.",
            "example": 1,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "compressed_usage_bytes": {
            "description": "Compressed usage of volumes and snapshots in the space domain.",
            "example": 878976,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "compression_ratio": {
            "description": "Compression savings for the space domain expressed as ratio.",
            "example": 40.3879423328965,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "dedupe_ratio": {
            "description": "Deduplication savings for the space domain expressed as ratio.",
            "example": 1,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "deduped": {
            "description": "Volumes in space domain are deduplicated by default.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "encrypted": {
            "description": "Volumes in space domain are encrypted.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "Identifier of the application summery.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "logical_dedupe_usage": {
            "description": "Logical space usage of volumes when deduped.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "physical_dedupe_usage": {
            "description": "Physical space usage of volumes including snapshots when deduped.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pool_id": {
            "description": "Identifier associated with the pool in the storage pool table.",
            "example": "0a473102de2f5f39d8000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "pool_name": {
            "description": "Name of the pool containing the space domain.",
            "example": "default",
            "nullable": true,
            "type": "string"
          },
          "savings_clone": {
            "description": "Space usage savings in the space domain due to cloning of volumes.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_compression": {
            "description": "Space usage savings in the space domain due to compression.",
            "example": 34621056,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_dedupe": {
            "description": "Space usage savings in the space domain due to deduplication.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_logical_usage": {
            "description": "Logical usage of snapshots in the space domain.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "uncompressed_usage_bytes": {
            "description": "Uncompressed usage of volumes and snapshots in the space domain.",
            "example": 35500032,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage": {
            "description": "Physical space usage of volumes in the space domain.",
            "example": 878976,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vol_logical_usage": {
            "description": "Logical usage of volumes in the space domain.",
            "example": 35500032,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vol_mapped_usage": {
            "description": "Mapped usage of volumes in the space domain, useful for computing clone savings.",
            "example": 35500032,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleSpaceDomainList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleSpaceDomainFieldsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleSpaceDomainDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for application-summary objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/applications/capacity-stats",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of applications.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleStorageSystemDetail": {
        "nullable": true,
        "properties": {
          "access_protocol_list": {
            "description": "Protocol used to access this group. List of access protocols.",
            "items": {
              "$ref": "#/components/schemas/AccessProtocol"
            },
            "nullable": true,
            "type": "array"
          },
          "alarms_enabled": {
            "description": "Whether alarm feature is enabled.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "alert_from_email_addr": {
            "description": "From email address to use while sending emails. Case insensitive email address.",
            "example": "bob@example.com",
            "nullable": true,
            "type": "string"
          },
          "alert_min_level": {
            "$ref": "#/components/schemas/AlertMinLevel"
          },
          "alert_to_email_addrs": {
            "description": "Comma-separated list of email addresss to receive emails. Comma separated email list.",
            "example": "john-doe@example.com",
            "nullable": true,
            "type": "string"
          },
          "allow_support_tunnel": {
            "description": "Whether to allow support tunnel.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "array_unassign_migration_status": {
            "description": "Data migration status for arrays being removed from their pool. Data migration status information for arrays being unassigned from their pool.",
            "items": {
              "$ref": "#/components/schemas/ArrayUnassignMigStatus"
            },
            "nullable": true,
            "type": "array"
          },
          "arrays": {
            "$ref": "#/components/schemas/NimbleArrayList"
          },
          "associated_links": {
            "$ref": "#/components/schemas/GroupAssociatedLinks"
          },
          "auto_switchover_enabled": {
            "description": "Whether automatic switchover of Group management services feature is enabled.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "auto_switchover_messages": {
            "description": "List of validation messages for automatic switchover of Group Management. This will be empty when there are no conflicts found.",
            "items": {
              "$ref": "#/components/schemas/NimbleErrorWithArguments"
            },
            "nullable": true,
            "type": "array"
          },
          "autoclean_unmanaged_snapshots_enabled": {
            "description": "Whether auto-clean unmanaged snapshots feature is enabled.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "autoclean_unmanaged_snapshots_ttl_unit": {
            "deprecated": true,
            "description": "Deprecated. Unit for unmanaged snapshot time to live.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "autosupport_enabled": {
            "description": "Whether to send autosupport.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "cc_mode_enabled": {
            "description": "Enable or disable Common Criteria mode.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "clone_ratio": {
            "description": "Clone savings for the group expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          },
          "compressed_snap_usage_bytes": {
            "description": "Compressed usage of snapshots in the group.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "compressed_vol_usage_bytes": {
            "description": "Compressed usage of volumes in the group.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "compression_ratio": {
            "description": "Compression savings for the group expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "data_rebalance_status": {
            "description": "Status of data rebalancing operations for pools in the group. Status of data re-balancing operations for a list of pools.",
            "items": {
              "$ref": "#/components/schemas/PoolRebalanceMigStatus"
            },
            "nullable": true,
            "type": "array"
          },
          "data_reduction_ratio": {
            "description": "Space savings in the group that does not include thin-provisioning savings expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          },
          "date": {
            "description": "Unix epoch time local to the group. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 1598267193,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "dedupe_ratio": {
            "description": "Dedupe savings for the group expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          },
          "default_iscsi_target_scope": {
            "description": "Newly created volumes are exported under iSCSI Group Target or iSCSI Volume Target.",
            "example": "group",
            "nullable": true,
            "type": "string"
          },
          "default_snap_limit_percent": {
            "description": "Default limit for a volumes snapshot space usage, expressed either as a percentage of the volumes size or as -1 to indicate that there is no limit. A volume will be taken offline or made non-writable upon exceeding its snapshot limit. Signed 64-bit integer.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "default_snap_reserve": {
            "description": "Amount of space to reserve for snapshots of a volume as a percentage of volume size.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "default_snap_warn_level": {
            "description": "Default threshold for snapshot space usage of a volume as a percentage of volume size above which an alert is raised.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "default_volume_limit": {
            "description": "Default limit for a volume space usage as a percentage of volume size. Volume will be taken offline/made non-writable on exceeding its limit. Percentage as integer from 0 to 100.",
            "example": 100,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "default_volume_reserve": {
            "description": "Amount of space to reserve for a volume as a percentage of volume size. Percentage as integer from 0 to 100.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "default_volume_warn_level": {
            "description": "Default threshold for volume space usage as a percentage of volume size above which an alert is raised. Percentage as integer from 0 to 100.",
            "example": 80,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "dns_servers": {
            "description": "IP addresses for this groups dns servers. List of IP Addresses.",
            "items": {
              "$ref": "#/components/schemas/IPAddressObject"
            },
            "nullable": true,
            "type": "array"
          },
          "domain_name": {
            "description": "Domain name for this group. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "example": "example-1.com",
            "nullable": true,
            "type": "string"
          },
          "encryption_config": {
            "$ref": "#/components/schemas/EncryptionSettings"
          },
          "failover_mode": {
            "$ref": "#/components/schemas/FailoverMode"
          },
          "fc_enabled": {
            "description": "Whether FC is enabled on this group.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "free_space": {
            "description": "Free space of the pool in bytes.",
            "example": 244695092429,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "group_snapshot_ttl": {
            "description": "Snapshot Time-to-live(TTL) configured at group level for automatic deletion of unmanaged snapshots. Value 0 indicates unlimited TTL.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "group_target_enabled": {
            "description": "Is group_target enabled on this group.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "group_target_name": {
            "description": "Iscsi target name for this group. Plain string.",
            "example": "iqn.2007-11.com.abc:g1a1-g00000000000004d3",
            "nullable": true,
            "type": "string"
          },
          "iscsi_automatic_connection_method": {
            "description": "Is iscsi reconnection automatic.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "iscsi_connection_rebalancing": {
            "description": "Does ISCSI automatically rebalance connections.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "iscsi_enabled": {
            "description": "Whether iSCSI is enabled on this group.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "isns_enabled": {
            "description": "Whether iSNS is enabled.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "isns_port": {
            "description": "Port number for iSNS Server. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 3205,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "isns_server": {
            "description": "Hostname or IP Address of iSNS Server. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "example": "example-1.com",
            "nullable": true,
            "type": "string"
          },
          "last_login": {
            "description": "Time and user of last login to this group. Plain string.",
            "example": "admin @ 2020-08-06T17:26:01-0700",
            "nullable": true,
            "type": "string"
          },
          "leader_array_name": {
            "description": "Name of the array where the group Management Service is running.",
            "example": "arr1",
            "nullable": true,
            "type": "string"
          },
          "leader_array_serial": {
            "description": "Serial number of the array where the group Management Service is running.",
            "example": "AC-109084",
            "nullable": true,
            "type": "string"
          },
          "management_service_backup_array_name": {
            "description": "Name of the array where backup the group Management Service is running.",
            "example": "nimbleArray",
            "nullable": true,
            "type": "string"
          },
          "management_service_backup_status": {
            "$ref": "#/components/schemas/ManagementServiceBackupStatus"
          },
          "member_list": {
            "description": "Members of this group. A list of object names.",
            "items": {
              "example": "nimbleArray",
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "merge_group_name": {
            "description": "Group that were being merged with. Plain string.",
            "example": "g1a2",
            "nullable": true,
            "type": "string"
          },
          "merge_state": {
            "$ref": "#/components/schemas/MergeState"
          },
          "ntp_server": {
            "description": "Either IP address or hostname of the NTP server for this group. Plain string.",
            "example": "0.abc.pool.ntp.org",
            "nullable": true,
            "type": "string"
          },
          "num_connections": {
            "description": "Number of connections to the group.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "num_snapcolls": {
            "description": "Number of snapshot collections in this group.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "num_snaps": {
            "description": "Number of snapshots in the group.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pending_deletes": {
            "description": "Usage for blocks that are not yet deleted.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "proxy_port": {
            "description": "Proxy Port of HTTP Proxy Server. Integer value between 0-65535 representing TCP/IP port.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "proxy_server": {
            "description": "Hostname or IP Address of HTTP Proxy Server. Setting this attribute to an empty string will unset all proxy settings. String of alphanumeric characters, can be an empty string, or valid range must be from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "example": "example-1.com",
            "nullable": true,
            "type": "string"
          },
          "proxy_username": {
            "description": "Username to authenticate with HTTP Proxy Server. HTTP proxy server username, string up to 255 characters, special characters ([, ], `, ;, ampersand, tab, space, newline) are not allowed.",
            "example": "usr1",
            "nullable": true,
            "type": "string"
          },
          "raw_cache_capacity": {
            "description": "Total cache capacity of the group.",
            "example": 17179869184,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "raw_capacity": {
            "description": "Total capacity of the group.",
            "example": 476741369856,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "repl_throttle_list": {
            "description": "All the replication bandwidth limits on the system. All the throttles for the partner.",
            "items": {
              "$ref": "#/components/schemas/Throttle"
            },
            "nullable": true,
            "type": "array"
          },
          "repl_throttled_bandwidth": {
            "description": "Current bandwidth throttle for replication, expressed either as megabits per second or as -1 to indicate that there is no throttle. Signed 64-bit integer.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "repl_throttled_bandwidth_kbps": {
            "description": "Current bandwidth throttle for replication, expressed either as kilobits per second or as -1 to indicate that there is no throttle. Signed 64-bit integer.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "savings": {
            "description": "Overall space usage savings in the group.",
            "example": 1073741824,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_clone": {
            "description": "Space usage savings in the group due to cloning of volumes.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_compression": {
            "description": "Space usage savings in the group due to compression.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_data_reduction": {
            "description": "Space usage savings in the group that does not include thin-provisioning savings.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_dedupe": {
            "description": "Space usage savings in the group due to deduplication.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "savings_ratio": {
            "description": "Overall savings in the group expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          },
          "savings_vol_thin_provisioning": {
            "description": "Space usage savings in the group due to thin provisioning of volumes.",
            "example": 1073741824,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "scsi_vendor_id": {
            "description": "SCSI vendor ID. Plain string.",
            "example": "Nimble",
            "nullable": true,
            "type": "string"
          },
          "send_alert_to_support": {
            "description": "Whether to send alert to Support.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "smtp_port": {
            "description": "Port number of SMTP Server. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 25,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "smtp_server": {
            "description": "Hostname or IP Address of SMTP Server. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "nullable": true,
            "type": "string"
          },
          "snap_compression_ratio": {
            "description": "Compression ratio of snapshots in the group. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          },
          "snap_retn_meter_high": {
            "description": "Threshold for considering a volume as high retention.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_retn_meter_very_high": {
            "description": "Threshold for considering a volume as very high retention.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_usage_populated": {
            "description": "Total snapshot usage as if each snapshot is deep copy of the volume.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snmp_community": {
            "description": "Community string to be used with SNMP. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "public",
            "nullable": true,
            "type": "string"
          },
          "snmp_get_enabled": {
            "description": "Whether to accept SNMP get commands.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "snmp_get_port": {
            "description": "Port number to which SNMP get requests should be sent. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 161,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snmp_sys_contact": {
            "description": "Name of the SNMP administrator. Plain string.",
            "example": "JD",
            "nullable": true,
            "type": "string"
          },
          "snmp_sys_location": {
            "description": "Location of the group. Plain string.",
            "example": "example-location",
            "nullable": true,
            "type": "string"
          },
          "snmp_trap_enabled": {
            "description": "Whether to enable SNMP traps.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "snmp_trap_host": {
            "description": "Hostname or IP Address to send SNMP traps. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "example": "example-1.com",
            "nullable": true,
            "type": "string"
          },
          "snmp_trap_port": {
            "description": "Port number of SNMP trap host. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 162,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "space_info_valid": {
            "description": "Is space info for this group valid.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "syslogd_enabled": {
            "description": "Is syslogd enabled on this system.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "syslogd_port": {
            "description": "Port number for syslogd server. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 514,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "syslogd_server": {
            "description": "Hostname of the syslogd server. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "example": "example-1.com",
            "nullable": true,
            "type": "string"
          },
          "syslogd_servers": {
            "description": "syslogd server info.",
            "items": {
              "$ref": "#/components/schemas/NimbleSyslogdServerInfo"
            },
            "nullable": true,
            "type": "array"
          },
          "systemHeadroom": {
            "$ref": "#/components/schemas/systemHeadroom"
          },
          "tdz_enabled": {
            "description": "Is Target Driven Zoning (TDZ) enabled on this group.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "tdz_prefix": {
            "description": "Target Driven Zoning (TDZ) prefix for peer zones created by TDZ.",
            "example": "peerzone",
            "nullable": true,
            "type": "string"
          },
          "timezone": {
            "description": "Timezone in which this group is located. Plain string.",
            "example": "America/Los_Angeles",
            "nullable": true,
            "type": "string"
          },
          "tlsv1_enabled": {
            "description": "Enable or disable TLSv1.0 and TLSv1.1.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "uncompressed_snap_usage_bytes": {
            "description": "Uncompressed usage of snapshots in the group.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "uncompressed_vol_usage_bytes": {
            "description": "Uncompressed usage of volumes in the group.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "unique_name_enabled": {
            "description": "Are new volume and volume collection names transformed on this group.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "unused_reserve_bytes": {
            "description": "Reserved space that is not utilized.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "update_array_names": {
            "description": "Arrays in the group undergoing update. Comma separated list of up to 64 non-empty lowercase alphanumeric strings without spaces.",
            "example": "name,app_id",
            "nullable": true,
            "type": "string"
          },
          "update_download_end_time": {
            "description": "End time of last update. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 1460477575,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "update_download_error_code": {
            "description": "If the software download has failed, this indicates the error code corresponding to the failure. Non-negative integer in range [0,9000].",
            "example": "SM_ok",
            "nullable": true,
            "type": "string"
          },
          "update_download_start_time": {
            "description": "Start time of last update. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 1460477565,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "update_downloading": {
            "description": "Is software update package currently downloading.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "update_end_time": {
            "description": "End time of last update. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "update_error_code": {
            "description": "If the software update has failed, this indicates the error code corresponding to the failure. Non-negative integer in range [0,9000].",
            "example": "SM_ok",
            "nullable": true,
            "type": "string"
          },
          "update_progress_msg": {
            "description": "Group update detailed progress message. Plain string.",
            "example": "example progress message",
            "nullable": true,
            "type": "string"
          },
          "update_start_time": {
            "description": "Start time of last update. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "update_state": {
            "$ref": "#/components/schemas/UpdateState"
          },
          "usable_cache_capacity": {
            "description": "Usable cache capacity of the group.",
            "example": 13432258560,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usable_capacity_bytes": {
            "description": "Usable capacity bytes of the group.",
            "example": 244695092429,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage": {
            "description": "Used space of the group in bytes.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage_valid": {
            "description": "Indicates whether the usage of group is valid.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "user_inactivity_timeout": {
            "description": "The amount of time in seconds that the user session is inactive before timing out. User inactivity timeout in second, valid range is from 1 to 43200 (720 minutes).",
            "example": 1800,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "version_current": {
            "description": "Version of software running on the group.",
            "example": "5.3.0.0-746508-opt",
            "nullable": true,
            "type": "string"
          },
          "version_rollback": {
            "description": "Rollback software version for the group.",
            "example": "v1",
            "nullable": true,
            "type": "string"
          },
          "version_target": {
            "description": "Desired software version for the group.",
            "example": "v1",
            "nullable": true,
            "type": "string"
          },
          "vol_compression_ratio": {
            "description": "Compression ratio of volumes in the group. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          },
          "vol_thin_provisioning_ratio": {
            "description": "Thin provisioning savings for volumes in the group expressed as ratio. Fraction expressed as floating point number.",
            "example": 9.18,
            "format": "float32",
            "nullable": true,
            "type": "number"
          },
          "volume_migration_status": {
            "description": "Status of data migration activity related to volumes being relocated to different pools. List of data migration status for a group of related volumes.",
            "items": {
              "$ref": "#/components/schemas/VolFamMigStatus"
            },
            "nullable": true,
            "type": "array"
          },
          "vss_validation_timeout": {
            "description": "The amount of time in seconds to validate Microsoft VSS application synchronization before timing out. VSS validation timeout in second, valid range is from 1 to 3600 (60 minutes).",
            "example": 60,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vvol_enabled": {
            "description": "Are vvols enabled on this group.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "witness_status": {
            "description": "Witness status from group Management Service array and group Management Service backup array.",
            "items": {
              "$ref": "#/components/schemas/WitnessTestResponse"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleStorageSystemDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleStorageSystemFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleStorageSystemDetail"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed storage system object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleStorageSystemFieldsWithSortKey": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier of the group. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the group. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "g1a1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleStorageSystemFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier of the group. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the group. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "g1a1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleStorageSystemSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleStorageSystemFieldsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleStorageSystemDetail"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for Nimble storage objects",
            "example": "api/v1/storage-systems/device-type2",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of systems",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleSubnet": {
        "nullable": true,
        "properties": {
          "allow_group": {
            "description": "Indicates whether group is allowed.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "allow_iscsi": {
            "description": "Indicates whether iSCSI is allowed.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "discovery_ip": {
            "description": "Discovery IP address.",
            "example": "127.0.0.102",
            "nullable": true,
            "type": "string"
          },
          "failover": {
            "description": "Failover setting of the subnet.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "failover_enable_time": {
            "description": "Failover for this subnet will be enabled again at the time specified by failover_enable_time.",
            "example": 1591599192000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "label": {
            "description": "Subnet label.",
            "example": "subnet1",
            "nullable": true,
            "type": "string"
          },
          "mtu": {
            "description": "MTU for specified subnet.",
            "example": 1500,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "netmask": {
            "description": "Subnet netmask address.",
            "example": "255.0.0.0",
            "nullable": true,
            "type": "string"
          },
          "network": {
            "description": "Network IP address.",
            "example": "127.0.0.108",
            "nullable": true,
            "type": "string"
          },
          "netzone_type": {
            "description": "Netzone type. Possible values: 'single', 'evenodd', 'bisect', 'none'.",
            "example": "single",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Subnet type. Possible values: 'mgmt', 'unconfigured', 'data', 'mgmt_data', 'invalid'.",
            "example": "mgmt",
            "nullable": true,
            "type": "string"
          },
          "vlan_id": {
            "description": "VLAN ID for specified subnet.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleSyslogdServerInfo": {
        "properties": {
          "syslog_port": {
            "description": "Port number for syslogd server. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 1080,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "syslog_server": {
            "description": "Hostname of the syslogd server. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.",
            "example": "sysloghost-1.com",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleTargetSubnets": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Subnet ID.",
            "example": "021c9973433673c3db000000000000000000000003",
            "nullable": true,
            "type": "string"
          },
          "label": {
            "description": "Subnet label.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleTestConfigurationResponse": {
        "properties": {
          "replication_partner_id": {
            "description": "Replication Id of the parnter.",
            "example": "081491cb6652a03a6b000000000000000000000005",
            "type": "string"
          },
          "response": {
            "description": "Task Response.",
            "example": "The server is currently unable to handle the request., A service is not running or is not reachable. If the condition persists, contact Nimble Storage Support.",
            "type": "string"
          },
          "status": {
            "description": "Task Status Status of the task.",
            "example": "SUCCESSFUL",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleTestWitnessResponse": {
        "nullable": false,
        "properties": {
          "response": {
            "description": "Test Witness Response.",
            "items": {
              "$ref": "#/components/schemas/WitnessTestResponse"
            },
            "type": "array"
          }
        },
        "required": [
          "response"
        ],
        "type": "object"
      },
      "NimbleUninitializedArrayInput": {
        "description": "get uninitialized array input.",
        "properties": {
          "id": {
            "description": "Identifier for the uninitialized array. A 42 digit hexadecimal number",
            "example": "c463732d6436306437370000000000000000000000",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "NimbleUninitializedArrayResponse": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/UninitializedArrayResponse"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "total": {
            "description": "Total number of Uninitialized array.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleUninitializedArrayWithRequestUri": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/UninitializedArrayResponse"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleUpdateSnapshotCollectionsStateInput": {
        "description": "Set snapshot collections online or offline by setting the corresponding snapshots online or offline.",
        "properties": {
          "online": {
            "description": "Online state for the corresponding snapshots. For a snapshot, 'online' means it could be mounted for data restore.",
            "example": true,
            "type": "boolean"
          },
          "snapshot_collection_ids": {
            "description": "List of IDs of snapshot collections to be set online/offline.",
            "items": {
              "description": "The ID of the snapshot collection. A 42 digit hexadecimal number.",
              "example": "3a0df0fe6f7dc7bb16000000000000000000003467",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "snapshot_collection_ids",
          "online"
        ],
        "type": "object"
      },
      "NimbleVCollectionDetails": {
        "nullable": true,
        "properties": {
          "agent_hostname": {
            "description": "Generic backup agent hostname. Custom port number can be specified with agent hostname using \\\\\":\\\\\".",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_sync": {
            "description": "Application Synchronization. Possible values: 'vss', 'vmware', 'none', 'generic'.",
            "example": "vss",
            "nullable": true,
            "type": "string"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "cache_pinned_volume_list": {
            "description": "List of cache pinned volumes associated with volume collection.",
            "items": {
              "$ref": "#/components/schemas/NimbleVolumeSummary"
            },
            "nullable": true,
            "type": "array"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/volume-collections/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "creation_time": {
            "description": "Application server hostname.",
            "example": 1599110308,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Text descrption of volume collection.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "full_name": {
            "description": "Fully qualified name of volume collection.",
            "example": "vol",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "handover_replication_partner": {
            "description": "Replication partner to which ownership is being transferred as part of handover operation.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "is_handing_over": {
            "description": "Indicates whether a handover operation is in progress on this volume collection.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "is_standalone_volcoll": {
            "description": "Last snapshot collection on this volume collection.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "lag_time": {
            "description": "Replication lag time for volume collection.",
            "example": 3400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "last_replicated_snapcoll": {
            "description": "Last replicated snapshot collection on this volume collection.",
            "items": {
              "$ref": "#/components/schemas/NimbleSnapcollSummary"
            },
            "nullable": true,
            "type": "object"
          },
          "last_snapcoll": {
            "description": "Last snapshot collection on this volume collection.",
            "items": {
              "$ref": "#/components/schemas/NimbleSnapcollSummary"
            },
            "nullable": true,
            "type": "object"
          },
          "metadata": {
            "description": "Key-value pairs that augment a volume collection's attributes.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsKeyValue"
            },
            "nullable": true,
            "type": "array"
          },
          "pol_owner_name": {
            "description": "PolOwnerName - Owner group.",
            "example": "system1",
            "nullable": true,
            "type": "string"
          },
          "protection_type": {
            "description": "Specifies if volume collection is protected with schedules. If protected, indicated whether replication is setup.",
            "example": "local",
            "nullable": true,
            "type": "string"
          },
          "repl_bytes_transferred": {
            "description": "Total size of volumes replicated for this volume collection.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "repl_priority": {
            "description": "Replication priority for the volume collection with the following choices: {normal | high}.\n Possible values: 'normal', 'high'.",
            "example": "high",
            "nullable": true,
            "type": "string"
          },
          "replication_partner": {
            "description": "List of replication partners associated with the volume collection.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "schedule_list": {
            "description": "List of schedules for this volume collection.",
            "items": {
              "$ref": "#/components/schemas/NimbleNsSchedule"
            },
            "nullable": true,
            "type": "array"
          },
          "search_name": {
            "description": "Name of volume collection used for object search.",
            "example": "vol",
            "nullable": true,
            "type": "string"
          },
          "snapcoll_count": {
            "description": "Count of snapshot collections associated with volume collection.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "srep_last_sync": {
            "description": "Time when a synchronously replicated volume collection was last synchronized.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "srep_resync_percent": {
            "description": "Percentage of the resync progress for a synchronously replicated volume collection.",
            "example": 10,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "total_repl_bytes": {
            "description": "Total size of volumes to be replicated for this volume collection.",
            "example": 1234,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "vcenter_hostname": {
            "description": "VMware vCenter hostname. Custom port number can be specified with vCenter hostname using \\\\\":\\\\\".",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "vcenter_username": {
            "description": "Application VMware vCenter username.",
            "example": "administrator@vsphere.local",
            "nullable": true,
            "type": "string"
          },
          "volume_count": {
            "description": "Count of volumes associated with the volume collection.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "volume_list": {
            "description": "List of volumes associated with the volume collection.",
            "items": {
              "$ref": "#/components/schemas/NimbleVolumeSummary"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NimbleVCollectionDetailsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleVCollectionFieldsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleVCollectionDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed folder object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/volume-collections/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleVCollectionFieldsWithSortKey": {
        "nullable": true,
        "properties": {
          "app_cluster_name": {
            "description": "If the application is running within a Windows cluster environment, this is the cluster name. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_id": {
            "description": "Application ID running on the server. Application ID can only be specified if application synchronization is \\\\\"vss\\\\\". `Filter, Sort` Possible values: 'exchange_dag', 'sql2012', 'inval', 'sql2014', 'sql2005', 'sql2016', 'exchange', 'sql2017', 'sql2018', 'hyperv'.",
            "example": "exchange_dag",
            "nullable": true,
            "type": "string"
          },
          "app_server": {
            "description": "Application server hostname. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_service_name": {
            "description": "If the application is running within a Windows cluster environment then this is the instance name of the service running within the cluster environment. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier of the Volume-Collection. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of volume collection. `Filter, Sort`",
            "example": "vol",
            "nullable": true,
            "type": "string"
          },
          "prottmpl_id": {
            "description": "Identifier of the protection template whose attributes will be used to create this volume collection. This attribute is only used for input when creating a volume collection and is not outputed. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "replication_type": {
            "description": "Type of replication configured for the volume collection. Possible values: 'synchronous', 'periodic_snapshot'. `Filter, Sort`",
            "example": "periodic_snapshot",
            "nullable": true,
            "type": "string"
          },
          "synchronous_replication_state": {
            "description": "State of synchronous replication on the volume collection. Possible values: 'in_sync', 'not_applicable', 'out_of_sync', 'unknown'. `Filter, Sort`",
            "example": "in_sync",
            "nullable": true,
            "type": "string"
          },
          "synchronous_replication_type": {
            "description": "Type of synchronous replication configured for the volume collection. Possible values: 'soft_available', 'not_applicable'. `Filter, Sort`",
            "example": "not_applicable",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleVCollectionFieldsWithoutSortKey": {
        "nullable": true,
        "properties": {
          "app_cluster_name": {
            "description": "If the application is running within a Windows cluster environment, this is the cluster name.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_id": {
            "description": "Application ID running on the server. Application ID can only be specified if application synchronization is \\\\\"vss\\\\\".\n Possible values: 'exchange_dag', 'sql2012', 'inval', 'sql2014', 'sql2005', 'sql2016', 'exchange', 'sql2017', 'sql2018', 'hyperv'.",
            "example": "hyperv",
            "nullable": true,
            "type": "string"
          },
          "app_server": {
            "description": "Application server hostname.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "app_service_name": {
            "description": "If the application is running within a Windows cluster environment then this is the instance name of the service running within the cluster environment.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier of the Volume-Collection.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of volume collection.",
            "example": "vol",
            "nullable": true,
            "type": "string"
          },
          "prottmpl_id": {
            "description": "Identifier of the protection template whose attributes will be used to create this volume collection. This attribute is only used for input when creating a volume collection and is not outputed.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "replication_type": {
            "description": "Type of replication configured for the volume collection. Possible values: 'synchronous', 'periodic_snapshot'.",
            "example": "periodic_snapshot",
            "nullable": true,
            "type": "string"
          },
          "synchronous_replication_state": {
            "description": "State of synchronous replication on the volume collection. Possible values: 'in_sync', 'not_applicable', 'out_of_sync', 'unknown'.",
            "example": "Failed",
            "nullable": true,
            "type": "string"
          },
          "synchronous_replication_type": {
            "description": "Type of synchronous replication configured for the volume collection. Possible values: 'soft_available', 'not_applicable'.",
            "example": "not_applicable",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleVolList": {
        "nullable": true,
        "properties": {
          "app_category": {
            "description": "Application category that the volume belongs to.",
            "example": "vega-app",
            "nullable": true,
            "type": "string"
          },
          "full_name": {
            "description": "Fully qualified name of volume.",
            "example": "volume-1",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "ID of volume.",
            "example": "0b1c99734",
            "nullable": true,
            "type": "string"
          },
          "lun": {
            "description": "LUN of volume. Secondary LUN if this is Virtual Volume.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of volume",
            "example": "vegavol",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleVolume": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleVolumeFilterableFields"
          },
          {
            "$ref": "#/components/schemas/NimbleVolumeCommon"
          }
        ],
        "nullable": true,
        "type": "object"
      },
      "NimbleVolumeCollectionList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NimbleVCollectionFieldsWithSortKey"
                },
                {
                  "$ref": "#/components/schemas/NimbleVCollectionDetails"
                }
              ]
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for volumeCollection objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/volume-collections",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of Volume Collections.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleVolumeCommon": {
        "nullable": true,
        "properties": {
          "access_control_records": {
            "description": "List of access control records that apply to this volume. List of access control records associated with a volume or snapshot or protocol endpoint.",
            "items": {
              "$ref": "#/components/schemas/AccessControlRecord"
            },
            "nullable": true,
            "type": "array"
          },
          "agent_type": {
            "description": "External management agent type. Possible values: 'none', 'smis', 'vvol', 'openstack', 'openstackv2'.",
            "example": "none",
            "nullable": true,
            "type": "string"
          },
          "app_category": {
            "description": "Application category that the volume belongs to. Plain string.",
            "example": "Other",
            "nullable": true,
            "type": "string"
          },
          "app_uuid": {
            "description": "Application identifier of volume. String of up to 255 alphanumeric characters, hyphen, colon, dot and underscore are allowed.",
            "example": "rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18",
            "nullable": true,
            "type": "string"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "block_size": {
            "description": "Size in bytes of blocks in the volume.",
            "example": 4096,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "cache_needed_for_pin": {
            "description": "The amount of flash needed to pin the volume.",
            "example": 104857600,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "cache_pinned": {
            "description": "If set to true, all the contents of this volume are kept in flash cache. This provides for consistent performance guarantees for all types of workloads. The amount of flash needed to pin the volume is equal to the limit for the volume.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "cache_policy": {
            "description": "Cache policy applied to the volume. Possible values: 'disabled', 'normal', 'aggressive', 'no_write', 'aggressive_read_no_write'.",
            "example": "normal",
            "nullable": true,
            "type": "string"
          },
          "caching_enabled": {
            "description": "Indicate caching the volume is enabled.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "cksum_last_verified": {
            "description": "Last checksum verification time.",
            "example": 1598952427,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/volumes/071491cb6652a03a6b000000000000000000000006",
            "nullable": true,
            "type": "string"
          },
          "content_repl_errors_found": {
            "description": "Indicates whether the last content based replication had errors.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "creation_time": {
            "description": "Time when this volume was created. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 1598951404,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dedupe_enabled": {
            "description": "Indicate whether dedupe is enabled.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "Text description of volume. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "encryption_cipher": {
            "description": "The encryption cipher of the volume. Possible values: 'none', 'aes_256_xts'.",
            "example": "none",
            "nullable": true,
            "type": "string"
          },
          "force": {
            "description": "Forcibly offline, reduce size or change read-only status a volume.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "full_name": {
            "description": "Fully qualified name of volume. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period.",
            "example": "default:/volume1",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "inherit_acl": {
            "description": "In a volume clone operation, if both the parent and the clone have no external management agent (their agent_type property is \"none\"), then inherit_acl controls whether the clone will inherit a copy of the parent's access control list. If either the parent or the clone have an external management agent, then the clone will not inherit the parent's access control list.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "iscsi_target_scope": {
            "description": "This indicates whether volume is exported under iSCSI Group Target or iSCSI Volume Target. This attribute is only meaningful to iSCSI system. On FC system, all volumes are exported under the FC Group Target. In create operation, the volume's target type will be set by this attribute. If not specified, it will be set as the group-setting. In clone operation, the clone's target type will inherit from the parent' setting. Possible values: 'volume', 'group'.",
            "example": "group",
            "nullable": true,
            "type": "string"
          },
          "last_content_snap_br_cg_uid": {
            "description": "The branch cg uid of the content based snapshot that was last replicated.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "last_content_snap_br_gid": {
            "description": "The branch gid of the content based snapshot that was last replicated.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "last_content_snap_id": {
            "description": "The ID of the content based snapshot that was last replicated.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "last_modified": {
            "description": "Time when this volume was last modified. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 1598952427,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "last_snap": {
            "$ref": "#/components/schemas/SnapSummary"
          },
          "limit": {
            "description": "Limit for the volume as a percentage of volume size. Percentage as integer from 0 to 100.",
            "example": 100,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_iops": {
            "description": "IOPS limit for this volume. If limit_iops is not specified when a volume is created, or if limit_iops is set to -1, then the volume has no IOPS limit. If limit_iops is not specified while creating a clone, IOPS limit of parent volume will be used as limit. IOPS limit should be in range [256, 4294967294] or -1 for unlimited. If both limit_iops and limit_mbps are specified, limit_mbps must not be hit before limit_iops. In other words, IOPS and MBPS limits should honor limit_iops _ampersand_amp;lt;= ((limit_mbps MB/s * 2^20 B/MB) / block_size B).",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "limit_mbps": {
            "description": "Throughput limit for this volume in MB/s. If limit_mbps is not specified when a volume is created, or if limit_mbps is set to -1, then the volume has no MBPS limit. MBPS limit should be in range [1, 4294967294] or -1 for unlimited. If both limit_iops and limit_mbps are specified, limit_mbps must not be hit before limit_iops. In other words, IOPS and MBPS limits should honor limit_iops _ampersand_amp;lt;= ((limit_mbps MB/s * 2^20 B/MB) / block_size B).",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "metadata": {
            "description": "Key-value pairs that augment a volume's attributes. List of key-value pairs. Keys must be unique and non-empty. When creating an object, values must be non-empty. When updating an object, an empty value causes the corresponding key to be removed.",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            },
            "nullable": true,
            "type": "array"
          },
          "move_aborting": {
            "description": "This indicates whether the move of the volume is aborting or not.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "move_bytes_migrated": {
            "description": "The bytes of volume which have been moved.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "move_bytes_remaining": {
            "description": "The bytes of volume which have not been moved.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "move_est_compl_time": {
            "description": "The estimated time of completion of a move. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "move_start_time": {
            "description": "The Start time when this volume was moved. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "multi_initiator": {
            "description": "This indicates whether volume and its snapshots are multi-initiator accessible. This attribute applies only to volumes and snapshots available to iSCSI initiators.Online state of volume, available for host initiators to establish connections.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "needs_content_repl": {
            "description": "Indicates whether the volume needs content based replication.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "num_snaps": {
            "description": "Number of live, non-hidden snapshots for this volume.",
            "example": 28,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "offline_reason": {
            "description": "Volume offline reason. Possible values: 'user', 'recovery', 'replica', 'over_volume_limit', 'over_snapshot_limit', 'over_volume_reserve', 'over_snapshot_reserve', 'nvram_loss_recovery', 'serial_number_collision', 'encryption_inactive', 'encryption_key_deleted', 'vvol_unbind', 'cache_unpin_in_progress'.",
            "example": "user",
            "nullable": true,
            "type": "string"
          },
          "online_snaps": {
            "description": "The list of online snapshots of this volume. Snapshot list as presented in volumes object set.",
            "items": {
              "$ref": "#/components/schemas/SnapshotFromVolume"
            },
            "nullable": true,
            "type": "array"
          },
          "pinned_cache_size": {
            "description": "The amount of flash pinned on the volume.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pre_filter": {
            "description": "Pre-filtering criteria. Plain string.",
            "example": "exampleFilter",
            "nullable": true,
            "type": "string"
          },
          "previously_deduped": {
            "description": "Indicate whether dedupe has ever been enabled on this volume.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "projected_num_snaps": {
            "description": "Depricated. Projected number of snapshots (including schedued and manual) for this volume.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "protection_type": {
            "description": "Specifies if volume is protected with schedules. If protected, indicate whether replication is setup. Volume Collection or volume is protected locally or remotely or unprotected. Possible values: 'local', 'remote' or 'unprotected'.",
            "example": "local",
            "nullable": true,
            "type": "string"
          },
          "reserve": {
            "description": "Amount of space to reserve for this volume as a percentage of volume size. Percentage as integer from 0 to 100.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "search_name": {
            "description": "Name of volume used for object search. Alphanumeric string, up to 64 characters including hyphen, period, colon.",
            "example": "volume1",
            "nullable": true,
            "type": "string"
          },
          "snap_reserve": {
            "description": "Amount of space to reserve for snapshots of this volume as a percentage of volume size.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_usage_compressed_bytes": {
            "description": "Sum of compressed backup data in bytes stored in snapshots of this volume.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_usage_populated_bytes": {
            "description": "Sum of backup data in bytes stored in snapshots of this volume without accounting for the sharing of data between snapshots.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_usage_uncompressed_bytes": {
            "description": "Sum of uncompressed unique backup data in bytes stored in snapshots of this volume.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_warn_level": {
            "description": "Threshold for available space as a percentage of volume size below which an alert is raised.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "space_usage_level": {
            "description": "Indicates space usage level based on warning level. Possible values: 'normal', 'warning', 'critical'.",
            "example": "normal",
            "type": "string"
          },
          "srep_last_sync": {
            "description": "Time when synchronously replicated volume was last synchronized.",
            "example": 1598952427,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "srep_resync_sync": {
            "description": "Percentage of resync progress for synchronously replicated volume.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "thinly_provisioned": {
            "description": "Allow volume to be advertised as thinly provisioned to initiators supporting thin provisioning. For such volumes, soft limit notification is set to initiators when the volume space usage crosses its volume_warn_level. Default is yes. This change takes effect only for new connections to the volume. Initiators must disconnect and reconnect for the new setting to be take effect at the initiator level consistently.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "total_usage_bytes": {
            "description": "Sum of compressed data and compressed backup data in bytes of this volume.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "upstream_cache_pinned": {
            "description": "This indicates whether the upstream volume is cache pinned or not.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "usage_valid": {
            "description": "This indicates whether usage information of volume and snapshots are valid or not.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "vol_state": {
            "description": "Status of the volume.  Possible values: 'online', 'offline', 'non_writable', 'read_only', 'login_only'.",
            "example": "online",
            "nullable": true,
            "type": "string"
          },
          "vol_usage_compressed_bytes": {
            "description": "Compressed data in bytes for this volume.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vol_usage_uncompressed_bytes": {
            "description": "Uncompressed data in bytes for this volume.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vpd_ieee0": {
            "description": "The first 64 bits of the volume's EUI-64 identifier, encoded as a hexadecimal string. Plain string.",
            "example": "bea16133315c83ab6c9ce90098b0ea001",
            "nullable": true,
            "type": "string"
          },
          "vpd_ieee1": {
            "description": "The last 64 bits of the volume's EUI-64 identifier, encoded as a hexadecimal string. Plain string.",
            "example": "6c9ce90098b0ea001",
            "nullable": true,
            "type": "string"
          },
          "vpd_t10": {
            "description": "The volume's T10 Vendor ID-based identifier. Plain string.",
            "example": "Nimble bea16133315c83ab6c9ce90098b0ea001",
            "nullable": true,
            "type": "string"
          },
          "warn_level": {
            "description": "Threshold for available space as a percentage of volume size below which an alert is raised. If this option is not specified, array default volume warn level setting is used to decide the warning level for this volume.",
            "example": 80,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleVolumeDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleVolumeFilterableFieldsWithoutFilter"
          },
          {
            "$ref": "#/components/schemas/NimbleVolumeCommon"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed volume objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/volumes/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleVolumeFilterableFields": {
        "nullable": true,
        "properties": {
          "base_snap_id": {
            "description": "Base snapshot ID. This attribute is required together with name and clone when cloning a volume with the create operation. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004017",
            "nullable": true,
            "type": "string"
          },
          "base_snap_name": {
            "description": "Name of base snapshot. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. This type is used for object sets containing volumes, snapshots, snapshot collections and protocol endpoints. `Filter, Sort`",
            "example": "snp1",
            "nullable": true,
            "type": "string"
          },
          "clone": {
            "description": "Whether this volume is a clone. Use this attribute in combination with name and base_snap_id to create a clone by setting clone = true. `Filter, Sort`",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "dest_pool_id": {
            "description": "ID of the destination pool where the volume is moving to. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "0a00000000000004d3000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "dest_pool_name": {
            "description": "Name of the destination pool where the volume is moving to. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "folder_id": {
            "description": "ID of the folder holding this volume. An optional NsObjectID. A 42 digit hexadecimal number or the empty string. `Filter, Sort`",
            "example": "1234123412341234123412341234123412341234cd",
            "nullable": true,
            "type": "string"
          },
          "folder_name": {
            "description": "Name of the folder holding this volume. It can be empty. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the volume. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the volume. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. `Filter, Sort`",
            "example": "volume1",
            "nullable": true,
            "type": "string"
          },
          "online": {
            "description": "Online state of volume, available for host initiators to establish connections. `Filter, Sort`",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "owned_by_group": {
            "description": "Name of group that currently owns the volume. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "g1a1",
            "nullable": true,
            "type": "string"
          },
          "owned_by_group_id": {
            "description": "ID of group that currently owns the volume. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          },
          "parent_vol_id": {
            "description": "Parent volume ID. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "parent_vol_name": {
            "description": "Name of parent volume. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. This type is used for object sets containing volumes, snapshots, snapshot collections and protocol endpoints. `Filter, Sort`",
            "example": "1234123412341234abcdacbdacbdacbd",
            "nullable": true,
            "type": "string"
          },
          "perfpolicy_id": {
            "description": "Identifier of the performance policy. After creating a volume, performance policy for the volume can only be changed to another performance policy with same block size. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "perfpolicy_name": {
            "description": "Name of performance policy. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "default",
            "nullable": true,
            "type": "string"
          },
          "pool_id": {
            "description": "Identifier associated with the pool in the storage pool table. A 42 digit hexadecimal number. `Filter, Sort`",
            "example": "0a00000000000004d3000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "pool_name": {
            "description": "Name of the pool where the volume resides. Volume data will be distributed across arrays over which specified pool is defined. If pool option is not specified, volume is assigned to the default pool. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "default",
            "nullable": true,
            "type": "string"
          },
          "read_only": {
            "description": "Volume is read-only. `Filter, Sort`",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "replication_role": {
            "description": "Replication role that this volume performs. Possible values: 'periodic_snapshot_downstream', 'synchronous_upstream', 'synchronous_downstream', 'no_replication', 'periodic_snapshot_upstream'. `Filter, Sort`",
            "example": "no_replication",
            "nullable": true,
            "type": "string"
          },
          "secondary_serial_number": {
            "description": "Secondary identifier associated with the volume for the SCSI protocol. `Filter, Sort`",
            "example": "1234123412341234abcdacbdacbdacbd",
            "nullable": true,
            "type": "string"
          },
          "serial_number": {
            "description": "Identifier associated with the volume for the SCSI protocol. A 32 digit hexadecimal number. `Filter, Sort`",
            "example": "5596fd1da1c87b8d6c9ce900d3040000",
            "nullable": true,
            "type": "string"
          },
          "size": {
            "description": "Volume size in megabytes. Size is required for creating a volume but not for cloning an existing volume. `Filter, Sort`",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_name": {
            "description": "The iSCSI Qualified Name (IQN) or the Fibre Channel World Wide Node Name (WWNN) of the target volume. The iSCSI Qualified Name (IQN) or the Fibre Channel World Wide Node Name (WWNN) of the target. `Filter, Sort`",
            "example": "iqn.2007-11.com.storage:vol0.762157726640911-v00000000000004d3.00000005.000004d3",
            "nullable": true,
            "type": "string"
          },
          "volcoll_id": {
            "description": "ID of volume collection of which this volume is a member. Use this attribute in update operation to associate or dissociate volumes with or from volume collections. When associating, set this attribute to the ID of the volume collection. When dissociating, set this attribute to empty string. An optional NsObjectID. A 42 digit hexadecimal number or the empty string. `Filter, Sort`",
            "example": "1234123412341234123412341234123412341234cd",
            "nullable": true,
            "type": "string"
          },
          "volcoll_name": {
            "description": "Name of volume collection of which this volume is a member. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleVolumeFilterableFieldsWithoutFilter": {
        "nullable": true,
        "properties": {
          "base_snap_id": {
            "description": "Base snapshot ID. This attribute is required together with name and clone when cloning a volume with the create operation. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004017",
            "nullable": true,
            "type": "string"
          },
          "base_snap_name": {
            "description": "Name of base snapshot. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. This type is used for object sets containing volumes, snapshots, snapshot collections and protocol endpoints.",
            "example": "snp1",
            "nullable": true,
            "type": "string"
          },
          "clone": {
            "description": "Whether this volume is a clone. Use this attribute in combination with name and base_snap_id to create a clone by setting clone = true.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "dest_pool_id": {
            "description": "ID of the destination pool where the volume is moving to. A 42 digit hexadecimal number.",
            "example": "0a00000000000004d3000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "dest_pool_name": {
            "description": "Name of the destination pool where the volume is moving to. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "folder_id": {
            "description": "ID of the folder holding this volume. An optional NsObjectID. A 42 digit hexadecimal number or the empty string.",
            "example": "1234123412341234123412341234123412341234cd",
            "nullable": true,
            "type": "string"
          },
          "folder_name": {
            "description": "Name of the folder holding this volume. It can be empty. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the volume. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the volume. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period.",
            "example": "volume1",
            "nullable": true,
            "type": "string"
          },
          "online": {
            "description": "Online state of volume, available for host initiators to establish connections.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "owned_by_group": {
            "description": "Name of group that currently owns the volume. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "g1a1",
            "nullable": true,
            "type": "string"
          },
          "owned_by_group_id": {
            "description": "ID of group that currently owns the volume. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          },
          "parent_vol_id": {
            "description": "Parent volume ID. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "parent_vol_name": {
            "description": "Name of parent volume. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period. This type is used for object sets containing volumes, snapshots, snapshot collections and protocol endpoints.",
            "example": "1234123412341234abcdacbdacbdacbd",
            "nullable": true,
            "type": "string"
          },
          "perfpolicy_id": {
            "description": "Identifier of the performance policy. After creating a volume, performance policy for the volume can only be changed to another performance policy with same block size. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "perfpolicy_name": {
            "description": "Name of performance policy. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "default",
            "nullable": true,
            "type": "string"
          },
          "pool_id": {
            "description": "Identifier associated with the pool in the storage pool table. A 42 digit hexadecimal number.",
            "example": "0a00000000000004d3000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "pool_name": {
            "description": "Name of the pool where the volume resides. Volume data will be distributed across arrays over which specified pool is defined. If pool option is not specified, volume is assigned to the default pool. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "default",
            "nullable": true,
            "type": "string"
          },
          "read_only": {
            "description": "Volume is read-only.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "replication_role": {
            "description": "Replication role that this volume performs. Possible values: 'periodic_snapshot_downstream', 'synchronous_upstream', 'synchronous_downstream', 'no_replication', 'periodic_snapshot_upstream'.",
            "example": "no_replication",
            "nullable": true,
            "type": "string"
          },
          "secondary_serial_number": {
            "description": "Secondary identifier associated with the volume for the SCSI protocol.",
            "example": "1234123412341234abcdacbdacbdacbd",
            "nullable": true,
            "type": "string"
          },
          "serial_number": {
            "description": "Identifier associated with the volume for the SCSI protocol. A 32 digit hexadecimal number.",
            "example": "5596fd1da1c87b8d6c9ce900d3040000",
            "nullable": true,
            "type": "string"
          },
          "size": {
            "description": "Volume size in megabytes. Size is required for creating a volume but not for cloning an existing volume.",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_name": {
            "description": "The iSCSI Qualified Name (IQN) or the Fibre Channel World Wide Node Name (WWNN) of the target volume. The iSCSI Qualified Name (IQN) or the Fibre Channel World Wide Node Name (WWNN) of the target.",
            "example": "iqn.2007-11.com.storage:vol0.762157726640911-v00000000000004d3.00000005.000004d3",
            "nullable": true,
            "type": "string"
          },
          "volcoll_id": {
            "description": "ID of volume collection of which this volume is a member. Use this attribute in update operation to associate or dissociate volumes with or from volume collections. When associating, set this attribute to the ID of the volume collection. When dissociating, set this attribute to empty string. An optional NsObjectID. A 42 digit hexadecimal number or the empty string.",
            "example": "1234123412341234123412341234123412341234cd",
            "nullable": true,
            "type": "string"
          },
          "volcoll_name": {
            "description": "Name of volume collection of which this volume is a member. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleVolumeSnapAttr": {
        "description": "Snapshot attributes for snapshots being created as part of snapshot collection creation. List of volumes with per snapshot attributes.",
        "nullable": true,
        "properties": {
          "app_uuid": {
            "description": "Application identifier of snapshots. String of up to 255 alphanumeric characters, hyphen, colon, dot and underscore are allowed. Defaults to empty string.",
            "example": "rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18",
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "description": "Key-value pairs that augment a volume's attributes. List of key-value pairs. Keys must be unique and non-empty. When creating an object, values must be non-empty. When updating an object, an empty value causes the corresponding key to be removed. Defaults to an empty array.",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            },
            "nullable": true,
            "type": "array"
          },
          "vol_id": {
            "description": "Identifier of volume. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleVolumeSummary": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier of volume. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of volume.",
            "example": "Volume0",
            "nullable": true,
            "type": "string"
          },
          "vol_id": {
            "description": "Identifier of volume. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "vol_name": {
            "description": "Name of volume.",
            "example": "Volume0",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleVolumesList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NimbleVolume"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for volume objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/volumes",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of volumes.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleWitness": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleWitnessFilterableFields"
          },
          {
            "$ref": "#/components/schemas/NimbleWitnessCommon"
          }
        ],
        "nullable": true,
        "type": "object"
      },
      "NimbleWitnessCommon": {
        "nullable": true,
        "properties": {
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "auto_switchover_messages": {
            "description": "List of validation messages for automatic switchover of Group Management. This will be empty when there are no conflicts found. List of error codes with details.",
            "items": {
              "$ref": "#/components/schemas/NimbleErrorWithArguments"
            },
            "nullable": true,
            "type": "array"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/witnesses/071491cb6652a03a6b00000000000000000000000",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleWitnessDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleWitnessFilterableFieldsWithoutFilter"
          },
          {
            "$ref": "#/components/schemas/NimbleWitnessCommon"
          }
        ],
        "nullable": true,
        "properties": {
          "requestURI": {
            "description": "Request URI for detailed witness objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/witnesses/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleWitnessFilterableFields": {
        "nullable": true,
        "properties": {
          "host": {
            "description": "Hostname or ip addresses of witness. Comma separated strings of up to 63 characters of hostname and/or ip addresses. Total length cannot exceed 255 characters. `Filter, Sort`",
            "example": "witness-host9801.sjcvlab.com",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the witness configuration. A 42 digit hexadecimal number. `Filter`",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "Port of witness. Positive integer value up to 65535 representing TCP/IP port. `Filter, Sort`",
            "example": 18976,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "username": {
            "description": "Username of witness. This has to be a non-root that can login to the witness host. String of up to 32 characters, beginning with a letter or number or period (.) or an underscore (_). It can include underscore (_), dash (-), period (.) and end with dollar ($) sign. `Filter, Sort`",
            "example": "witness9801",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleWitnessFilterableFieldsWithoutFilter": {
        "nullable": true,
        "properties": {
          "host": {
            "description": "Hostname or ip addresses of witness. Comma separated strings of up to 63 characters of hostname and/or ip addresses. Total length cannot exceed 255 characters.",
            "example": "witness-host9801.sjcvlab.com",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for the witness configuration. A 42 digit hexadecimal number.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "Port of witness. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 18976,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "username": {
            "description": "Username of witness. This has to be a non-root that can login to the witness host. String of up to 32 characters, beginning with a letter or number or period (.) or an underscore (_). It can include underscore (_), dash (-), period (.) and end with doller ($) sign.",
            "example": "witness9801",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimbleWitnessesList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NimbleWitness"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "Request Uri for witness objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/witnesses",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of witnesses.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NimbleZConfIP": {
        "nullable": true,
        "properties": {
          "ip_addr": {
            "description": "Associated ip address.",
            "example": "127.0.0.1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NimblefibreChannelConfigsWithRequestUri": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NimbleFibreChannelConfigsWithoutSortKey"
          },
          {
            "$ref": "#/components/schemas/NimbleFibreChannelConfigsDetails"
          }
        ],
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "requestUri for detailed fibre channel configs object",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/fibre-channel-configs/2a0df0fe6f7dc7bb16000000000000000000004007",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PauseResumeNimbleReplicationPartnerPairInput": {
        "nullable": false,
        "properties": {
          "replicationPartners": {
            "description": "List of replication partner pairs.",
            "items": {
              "$ref": "#/components/schemas/ReplicationPartnerPairAction"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "replicationPartners"
        ],
        "type": "object"
      },
      "Persona": {
        "description": "Host Persona",
        "nullable": true,
        "properties": {
          "capabilities": {
            "items": {
              "description": "Capabilities of the Host",
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Numeric ID of the resource",
            "example": 101780,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Host Name",
            "example": "test-host",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PoolRebalanceMigStatus": {
        "description": "Status of data rebalance operations in a pool.",
        "nullable": true,
        "properties": {
          "array_data_migration_status": {
            "description": "Data migration status for a list of arrays in the pool.",
            "items": {
              "$ref": "#/components/schemas/ArrayMigStatus"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Unique ID of the pool.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the Pool.",
            "example": "Pool3",
            "nullable": true,
            "type": "string"
          },
          "pool_avg_space_utilization": {
            "description": "Average space utilization for the arrays in the pool.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PortPosAndLinkInput": {
        "nullable": false,
        "properties": {
          "link": {
            "description": "Specifies the link for the remote system. If the Link Protocol Type is IP, specify an IP address for the corresponding port on the remote system. If the Link Protocol Type is FC, specify the WWN of the peer port on the remote system",
            "example": "10.100.65.128",
            "nullable": false,
            "type": "string"
          },
          "portPosition": {
            "$ref": "#/components/schemas/PortPositionInput"
          }
        },
        "required": [
          "link",
          "portPosition"
        ],
        "type": "object"
      },
      "PortPositionInput": {
        "description": "Specifies the port information of the local system (n:s:p) for Remote Copy.",
        "nullable": false,
        "properties": {
          "node": {
            "description": "Port position node number",
            "example": 0,
            "format": "int64",
            "nullable": false,
            "type": "integer"
          },
          "port": {
            "description": "Port position port number",
            "example": 3,
            "format": "int64",
            "nullable": false,
            "type": "integer"
          },
          "slot": {
            "description": "Port position slot number",
            "example": 1,
            "format": "int64",
            "nullable": false,
            "type": "integer"
          }
        },
        "required": [
          "node",
          "port",
          "slot"
        ],
        "type": "object"
      },
      "PrimeraAppSetVolumes": {
        "nullable": true,
        "properties": {
          "requestUri": {
            "description": "RequestUri for volumes of an applicationset",
            "example": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/applicationsets/fd3244ef7f1ab8bd16500c7a41bdf8f8/volumes",
            "nullable": true,
            "type": "string"
          },
          "volumes": {
            "$ref": "#/components/schemas/PrimeraVolumesList"
          }
        },
        "type": "object"
      },
      "PrimeraApplicationSetCapacityStats": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/device-type1/7CE751P312",
                "type": "systems"
              },
              {
                "resourceUri": "/v1/storage-systems/device-type1/7CE751P312/applicationsets/8f4e84da31ae80b362786a15b290f1eb/volumes",
                "type": "volumes"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "capacitySummary": {
            "description": "Capacity of the applicationSet",
            "nullable": true,
            "properties": {
              "freeMiB": {
                "description": "Free Size in MiB",
                "example": 1233920,
                "format": "float64",
                "nullable": true,
                "type": "number"
              },
              "sizeMiB": {
                "description": "Total size in MiB",
                "example": 595968,
                "format": "float64",
                "nullable": true,
                "type": "number"
              },
              "usedSizeMiB": {
                "description": "Used Size in MiB.",
                "example": 595968,
                "format": "float64",
                "nullable": true,
                "type": "number"
              }
            },
            "type": "object"
          },
          "customerId": {
            "description": "The customer application identifier",
            "type": "string"
          },
          "id": {
            "description": "Uid of the applicationset",
            "example": "4c74ec5c-ecec-4483-9506-3fb5dc45b5d0",
            "nullable": true,
            "type": "string"
          },
          "members": {
            "description": "Volume Names",
            "example": [
              "vol1",
              "vol2"
            ],
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of the application set",
            "example": "KA_VEGA_APPSET2_186",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "RequestUri for applicationsets resources",
            "example": "/v1/storage-systems/device-type1/SGH029VBHV/applicationsets/fd3244ef7f1ab8bd16500c7a41bdf8f8/capacity-stats",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemId/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrimeraApplicationSetDetails": {
        "nullable": true,
        "properties": {
          "appSetBusinessUnit": {
            "description": "Appset BusinessUnit",
            "example": "cssl",
            "nullable": true,
            "type": "string"
          },
          "appSetComments": {
            "description": "Application set comments",
            "example": "app set comments",
            "nullable": true,
            "type": "string"
          },
          "appSetExcludeAIQoS": {
            "description": "Exclusion from AI QoS",
            "example": "no",
            "nullable": true,
            "type": "string"
          },
          "appSetId": {
            "description": "ID",
            "example": 5,
            "nullable": true,
            "type": "integer"
          },
          "appSetImportance": {
            "description": "Importance Level",
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          },
          "appSetName": {
            "description": "Application set name",
            "example": "KA_VEGA_APPSET1_186",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "appSetType": {
            "description": "Type of the application set",
            "example": "Oracle Database",
            "nullable": true,
            "type": "string"
          },
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF",
                "type": "systems"
              },
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/volumes",
                "type": "volumes"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "comment": {
            "description": "Comments if any",
            "example": "Comments",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/applicationsets/fd3244ef7f1ab8bd16500c7a41bdf8f8",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayName": {
            "description": "Display Name",
            "example": "Application Set KA_VEGA_APPSET1_186 ",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain name",
            "example": "Domain",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "exportStatus": {
            "description": "Export status",
            "example": "PARTIALLY_EXPORTED",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "uid of the applicationset",
            "example": "4c74ec5c-ecec-4483-9506-3fb5dc45b5d0",
            "nullable": true,
            "type": "string"
          },
          "initiators": {
            "description": "Initiator details",
            "items": {
              "properties": {
                "deviceDiscoveredName": {
                  "description": "Host/HostGroup name on device.",
                  "example": "TEST11",
                  "nullable": true,
                  "type": "string"
                },
                "id": {
                  "description": "Resource id",
                  "example": "6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "resourceUri": {
                  "description": "Resource URI",
                  "example": "/v1/host-initiators/6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "example": "host-initiators",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "isFailoverAllowed": {
            "description": "Shows if failover is allowed or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "isOverrideAllowed": {
            "description": "Shows if Override is allowed or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "isPrimary": {
            "description": "States if the Application set is Primary or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "isSyncAllowed": {
            "description": "Shows if sync is allowed or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "kvPairsPresent": {
            "description": "Represents KV pairs present or not",
            "example": true,
            "type": "boolean"
          },
          "members": {
            "description": "Volume Names",
            "example": [
              "vol1",
              "vol2"
            ],
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of the application set",
            "example": "KA_VEGA_APPSET2_186",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "nonZeroRtoConfig": {
            "description": "Non-Zero RTO configuration. Supported config is Active-Sync",
            "example": "ActiveSync",
            "nullable": true,
            "type": "string"
          },
          "remoteRecoveryPoint": {
            "$ref": "#/components/schemas/recoveryPoint"
          },
          "replicationPartner": {
            "description": "Shows the Replication Partner Systems and Replication Partners",
            "example": [
              {
                "partnerSystem": "cs2-C630-2939-141",
                "replicationPartner": "cs2-C630-2939_s1511"
              },
              {
                "partnerSystem": "s2940_208",
                "replicationPartner": "s2940_1"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "partnerSystem": {
                  "description": "Replication Partner System",
                  "nullable": true,
                  "type": "string"
                },
                "replicationPartner": {
                  "description": "Replication Partner",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "replicationState": {
            "description": "Shows whether data replication is in started or stopped state",
            "example": "Started",
            "nullable": true,
            "type": "string"
          },
          "replicationTraffic": {
            "description": "Shows the direction of flow of data",
            "example": "Sending",
            "nullable": true,
            "type": "string"
          },
          "replicationType": {
            "description": "Mode of replication. Can be sync or periodic",
            "example": "periodic",
            "nullable": false,
            "type": "string"
          },
          "requestUri": {
            "description": "RequestUri for applicationsets resources",
            "example": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/applicationsets/fd3244ef7f1ab8bd16500c7a41bdf8f8",
            "nullable": true,
            "type": "string"
          },
          "serialNumber": {
            "description": "Serial number.",
            "example": "7CE738P06J",
            "nullable": true,
            "type": "string"
          },
          "sizeMiB": {
            "description": "Size in MB of appset",
            "example": 153600,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "snapSetParentId": {
            "description": "ParentId of the snapSet",
            "example": 5,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapSetParentName": {
            "description": "Parent name of the snapSet",
            "example": "HPE",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "vvSetType": {
            "description": "Type of the volume-set",
            "example": "VVSET",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "zeroRtoConfig": {
            "description": "Zero RTO configuration. Supported configs are Active Peer Persistence and Peer Persistence",
            "example": "PP",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrimeraApplicationSets": {
        "properties": {
          "appSetBusinessUnit": {
            "description": "Appset BusinessUnit",
            "example": "cssl",
            "nullable": true,
            "type": "string"
          },
          "appSetComments": {
            "description": "Application set comments",
            "example": "app set comments",
            "nullable": true,
            "type": "string"
          },
          "appSetExcludeAIQoS": {
            "description": "Exclusion from AI QoS",
            "example": "no",
            "nullable": true,
            "type": "string"
          },
          "appSetId": {
            "description": "ID",
            "example": 5,
            "nullable": true,
            "type": "integer"
          },
          "appSetImportance": {
            "description": "Importance Level",
            "example": "MEDIUM",
            "nullable": true,
            "type": "string"
          },
          "appSetName": {
            "description": "Application set name",
            "example": "KA_VEGA_APPSET1_186",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "appSetType": {
            "description": "Name of the resource. `Filter`",
            "example": "Oracle Database",
            "nullable": true,
            "type": "string"
          },
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF",
                "type": "systems"
              },
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/volumes",
                "type": "volumes"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "comment": {
            "description": "Comments if any",
            "example": "Comments",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayName": {
            "description": "Display Name",
            "example": "Application Set KA_VEGA_APPSET1_186 ",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain name",
            "example": "Domain",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "exportStatus": {
            "description": "Export status",
            "example": "PARTIALLY_EXPORTED",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "uid of the applicationset `Filter`",
            "example": "4c74ec5c-ecec-4483-9506-3fb5dc45b5d0",
            "nullable": true,
            "type": "string"
          },
          "initiators": {
            "description": "Initiator details",
            "items": {
              "properties": {
                "deviceDiscoveredName": {
                  "description": "Host/HostGroup name on device.",
                  "example": "TEST11",
                  "nullable": true,
                  "type": "string"
                },
                "id": {
                  "description": "Resource id",
                  "example": "6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "resourceUri": {
                  "description": "Resource URI",
                  "example": "/v1/host-initiators/6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "example": "host-initiators",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "kvPairsPresent": {
            "description": "Represents KV pairs present or not",
            "example": true,
            "type": "boolean"
          },
          "members": {
            "description": "Volume Names",
            "example": [
              "vol1",
              "vol2"
            ],
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of the resource. `Filter, Sort`",
            "example": "volset_name",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "serialNumber": {
            "description": "Serial number.",
            "example": "7CE738P06J",
            "nullable": true,
            "type": "string"
          },
          "sizeMiB": {
            "description": "Size in MB of appset",
            "example": 153600,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "snapSetParentId": {
            "description": "ParentId of the snapSet",
            "example": 5,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapSetParentName": {
            "description": "Parent name of the snapSet",
            "example": "HPE",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "vvSetType": {
            "description": "Type of the volume-set",
            "example": "VVSET",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrimeraApplicationSetsList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PrimeraApplicationSets"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "RequestUri for applicationsets resources",
            "example": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/applicationsets",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total Number of Application sets.",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PrimeraHostList": {
        "description": "List of primera Host Paths",
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PrimeraHosts"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/host-paths",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of Hosts",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PrimeraHostPathList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PrimeraHostPaths"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for primera Hostpath objects",
            "example": "api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/host-paths",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of host paths.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PrimeraHostPaths": {
        "nullable": true,
        "properties": {
          "IPAddr": {
            "description": "Ip Address",
            "example": "1.1.1.1",
            "nullable": true,
            "type": "string"
          },
          "address": {
            "description": "WWN Address of the Host Path",
            "example": "810009440c9ce5824",
            "nullable": true,
            "type": "string"
          },
          "associatedLinks": {
            "description": "Associated Links Details",
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "Drive 0.SIDE_NONE.2.0",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain name of the Host",
            "example": "-",
            "nullable": true,
            "type": "string"
          },
          "driverVersion": {
            "description": "Driver version   ",
            "example": "v1.0.0",
            "nullable": true,
            "type": "string"
          },
          "firmwareVersion": {
            "description": "Firmware version",
            "example": "v1.0.0",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "Generation Time of the Resource",
            "example": 1652172206,
            "format": "Uint64",
            "nullable": false,
            "type": "integer"
          },
          "hostId": {
            "description": "ID of the Host resource",
            "example": 101780,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "hostName": {
            "description": "Host Name",
            "example": "test-host",
            "nullable": true,
            "type": "string"
          },
          "hostSpeed": {
            "description": "ID of the Host resource",
            "example": 100,
            "format": "Any",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "HostPath Resource UID",
            "example": "1223f5s",
            "nullable": false,
            "type": "string"
          },
          "model": {
            "description": "Host Model",
            "example": "model_1",
            "nullable": true,
            "type": "string"
          },
          "pathType": {
            "description": "Path Type",
            "example": "FC",
            "nullable": true,
            "type": "string"
          },
          "portPos": {
            "nullable": true,
            "properties": {
              "node": {
                "description": "Node Port",
                "example": 1,
                "format": "Uint64",
                "nullable": true,
                "type": "integer"
              },
              "port": {
                "description": "Port",
                "example": 1,
                "format": "Uint64",
                "nullable": true,
                "type": "integer"
              },
              "slot": {
                "description": "Slot",
                "example": 1,
                "format": "Uint64",
                "nullable": true,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "resourceUri": {
            "description": "resourceUri for detailed hostpath object",
            "example": "/v1/storage-systems/host-paths/dbce79b2612cde02a6e0be8934c330ec",
            "nullable": true,
            "type": "string"
          },
          "sc_HostInitiatorId": {
            "description": "Host Service Initiator Id",
            "example": "1223f5s",
            "nullable": true,
            "type": "string"
          },
          "switchPortWWN": {
            "description": "Switch Port WWN",
            "example": "5001438026e98a60",
            "nullable": true,
            "type": "string"
          },
          "systemUid": {
            "description": "System Uid",
            "example": "7CE727P35M",
            "nullable": false,
            "type": "string"
          },
          "systemWWN": {
            "description": "System serial Number   ",
            "example": "swK21",
            "nullable": false,
            "type": "string"
          },
          "uri": {
            "description": "Uri ",
            "example": "/api/v3/hostpaths/dbce79b2612cde02a6e0be8934c330ec",
            "nullable": true,
            "type": "string"
          },
          "vendor": {
            "description": "Vendor",
            "example": "-",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrimeraHostSetList": {
        "description": "List of primera Host Paths",
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PrimeraHostSets"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/host-paths",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of systems",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PrimeraHostSets": {
        "description": "Host Sets details",
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "description": "Associated Links Details",
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "comment": {
            "description": "Comment on the Host Set",
            "example": "hostset comment",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "Drive 0.SIDE_NONE.2.0",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain name of the Host Set",
            "example": "slt",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "Generation Time of the Resource",
            "example": 101780,
            "format": "Uint64",
            "nullable": false,
            "type": "integer"
          },
          "hostSetId": {
            "description": "Numeric ID of the resource",
            "example": 101780,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "HostSet Resource UID",
            "example": "1223f5s",
            "nullable": false,
            "type": "string"
          },
          "members": {
            "description": "system ntp addresses",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Host Set Name",
            "example": "test-host-set",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed hostset object",
            "example": "/v1/storage-systems/host-setss/dbce79b2612cde02a6e0be8934c330ec",
            "nullable": true,
            "type": "string"
          },
          "sc_HostGroupId": {
            "description": "Host Service HostGroup Id",
            "example": "1223f5s",
            "nullable": true,
            "type": "string"
          },
          "systemUid": {
            "description": "Serail Number of the system",
            "example": "swK21",
            "nullable": false,
            "type": "string"
          },
          "systemWWN": {
            "description": "System wwn",
            "example": "swK21",
            "nullable": false,
            "type": "string"
          },
          "uri": {
            "description": "Uri",
            "example": "/api/v3/hostsets/dbce79b2612cde02a6e0be8934c330ec",
            "nullable": true,
            "type": "string"
          },
          "uuid": {
            "description": "HostSet Resource UUID",
            "example": "1223f5s",
            "nullable": false,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrimeraHosts": {
        "description": "Primera Host details",
        "nullable": true,
        "properties": {
          "agent": {
            "$ref": "#/components/schemas/HostAgent"
          },
          "associatedLinks": {
            "description": "Associated Links Details",
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "descriptors": {
            "$ref": "#/components/schemas/HostDescriptors"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "Drive 0.SIDE_NONE.2.0",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain name of the Host",
            "example": "slt",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "Generation Time of the Resource",
            "example": 1652172502,
            "format": "Uint64",
            "nullable": false,
            "type": "integer"
          },
          "hostId": {
            "description": "Numeric ID of the resource",
            "example": 101780,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "hostpaths": {
            "items": {
              "$ref": "#/components/schemas/PrimeraHostPaths"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Host Resource UID",
            "example": "132b493352ca3141456333edf403be0c",
            "type": "string"
          },
          "initiatorChapEnabled": {
            "description": "Indicates if the Initiator Chap is enabled or not",
            "nullable": true,
            "type": "boolean"
          },
          "initiatorChapName": {
            "description": "Initiator Chap Name",
            "example": "chapName",
            "nullable": true,
            "type": "string"
          },
          "initiatorEncryptedChapSecret": {
            "description": "Initiator Encrypted Chap Secret",
            "example": "secret",
            "nullable": true,
            "type": "string"
          },
          "minLunId": {
            "description": "LUN Id of the host",
            "example": 10,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Host Name",
            "example": "test-host",
            "nullable": true,
            "type": "string"
          },
          "persona": {
            "$ref": "#/components/schemas/Persona"
          },
          "resourceUri": {
            "description": "Resoure Uri of the Host        ",
            "example": "/api/v3/hosts/2492b4e84f7536577a38be78f0da0c1a",
            "nullable": true,
            "type": "string"
          },
          "sc_HostId": {
            "description": "Host Service Host Id",
            "example": "132b493352ca3141456333edf403be0c",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "stateDescription": {
            "items": {
              "description": "State Description of the host",
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "stateVal": {
            "description": "Health Status of the Host",
            "example": 1,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "systemUid": {
            "description": "Serial Number of the system   ",
            "example": "swK21",
            "nullable": false,
            "type": "string"
          },
          "systemWWN": {
            "description": "System wwn   ",
            "example": "swK21",
            "nullable": false,
            "type": "string"
          },
          "targetChapEnabled": {
            "description": "Indicates if the Target Chap is enabled or not",
            "nullable": true,
            "type": "boolean"
          },
          "targetChapName": {
            "description": "Target Chap Name",
            "example": "sltest1",
            "nullable": true,
            "type": "string"
          },
          "targetEncryptedChapSecret": {
            "description": "Target Encrypted Chap Secret",
            "example": "Target Encrypted Chap Secret",
            "nullable": true,
            "type": "string"
          },
          "uaRepLun": {
            "description": "Indicates if the UaRepLun is enabled or not",
            "nullable": true,
            "type": "boolean"
          },
          "uri": {
            "description": "Resoure Uri of the Host",
            "example": "/api/v3/hosts/2492b4e84f7536577a38be78f0da0c1a",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrimeraVolumeDetails": {
        "nullable": true,
        "properties": {
          "adminAllocationSettings": {
            "$ref": "#/components/schemas/userAllocationSettingsSingle"
          },
          "adminSpace": {
            "$ref": "#/components/schemas/space"
          },
          "associatedLinks": {
            "description": "Associated Links",
            "example": [
              {
                "resourceUri": "v1/storage-systems/{systemUid}/contollers",
                "type": "controllers"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/shelves",
                "type": "shelves"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/disks",
                "type": "disks"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/storage-ports",
                "type": "storage-ports"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/storage-devices-settings",
                "type": "storage-devices-settings"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/storage-pools",
                "type": "storage-pools"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/volume-sets",
                "type": "volume-sets"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/host-groups",
                "type": "host-groups"
              }
            ],
            "items": {
              "properties": {
                "resourceUri": {
                  "description": "Resource URI",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "baseId": {
            "description": "snapshot Tdvv Size",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "comment": {
            "description": "Comments",
            "nullable": true,
            "type": "string"
          },
          "compactEfficiency": {
            "description": "Compact Efficiency",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "compressionEfficiency": {
            "description": "Compression Efficiency",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "compressionPolicy": {
            "description": "Compression Policy",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/volumes/{uid}",
            "nullable": true,
            "type": "string"
          },
          "conversionType": {
            "description": "Conversion Type of Volume",
            "enum": [
              "CONVERSIONTYPE_THIN",
              "CONVERSIONTYPE_DDS",
              "CONVERSIONTYPE_V1",
              "CONVERSIONTYPE_V2",
              null
            ],
            "nullable": true,
            "type": "string"
          },
          "copiedMB": {
            "description": "Copied MB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "copiedPerc": {
            "description": "Copied Perecentage",
            "nullable": true,
            "type": "integer"
          },
          "copyOfID": {
            "description": "Copy of Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "creationTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "customerId": {
            "description": "customerId",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "nullable": true,
            "type": "string"
          },
          "dataReduction": {
            "description": "Data Reduction type",
            "nullable": true,
            "type": "string"
          },
          "ddcSize": {
            "description": "Note, will be updated at most once in an hour",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "ddsSize": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "dedup": {
            "description": "Dedup",
            "nullable": true,
            "type": "string"
          },
          "dedupSavingsSize": {
            "description": "Note, will be updated at most once in an hour",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "dedupWrittenSize": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "devType": {
            "description": "Device Type",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Display name of the volume",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain of the volume",
            "nullable": true,
            "type": "string"
          },
          "efficiencyUpdateTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "expirationTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "fullyProvisioned": {
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "headsPerCylinder": {
            "description": "Heads per Cylinder",
            "nullable": true,
            "type": "integer"
          },
          "healthState": {
            "description": "Health status of the Volume.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "hidden": {
            "description": "Flag to know if the Volume is hidden or not",
            "nullable": true,
            "type": "boolean"
          },
          "hostWrittenMiB": {
            "description": "Host written data size in MiB.",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "hostWrittenToVirtualPercent": {
            "description": "Host written to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "id": {
            "description": "UUID string uniquely identifying the storage system object.",
            "nullable": true,
            "type": "string"
          },
          "initiators": {
            "description": "Initiator details",
            "items": {
              "properties": {
                "deviceDiscoveredName": {
                  "description": "Host/HostGroup name on device.",
                  "example": "TEST11",
                  "nullable": true,
                  "type": "string"
                },
                "id": {
                  "description": "Resource id",
                  "example": "6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "resourceUri": {
                  "description": "Resource URI",
                  "example": "/v1/host-initiators/6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "example": "host-initiators",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "A user friendly name to identify the storage system volume (resourceName).",
            "example": "Finance",
            "nullable": true,
            "type": "string"
          },
          "parentID": {
            "description": "Parent Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "physParentID": {
            "description": "physical Parent Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "physicalCopy": {
            "nullable": true,
            "type": "boolean"
          },
          "policy": {
            "$ref": "#/components/schemas/policy"
          },
          "provType": {
            "description": "",
            "nullable": true,
            "type": "string"
          },
          "raid": {
            "description": "Raid",
            "nullable": true,
            "type": "string"
          },
          "rcopyStatus": {
            "description": "RemoteCopy Status",
            "nullable": true,
            "type": "string"
          },
          "readOnly": {
            "nullable": true,
            "type": "boolean"
          },
          "requestUri": {
            "description": "requestUri for detailed volume object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/volumes/{uid}",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed volume object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/volumes/{uid}",
            "nullable": true,
            "type": "string"
          },
          "retentionTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "roChildID": {
            "description": "RO child id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "rwChildID": {
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "sectorsPerTrack": {
            "description": "Sector per Track",
            "nullable": true,
            "type": "integer"
          },
          "sharedParentId": {
            "description": "Shared Parent Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "sizeMiB": {
            "description": "Size in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "snapShotTier": {
            "description": "Snapshot Tier",
            "nullable": true,
            "type": "string"
          },
          "snapshotAllocLimit": {
            "description": "Snapshot alloc limit",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotAllocWarning": {
            "description": "Snapshot alloc Warning",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotAllocationSettings": {
            "$ref": "#/components/schemas/userAllocationSettingsSingle"
          },
          "snapshotCpgID": {
            "description": "Snapshot CPG Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotCpgName": {
            "description": "Snapshot CPG name",
            "nullable": true,
            "type": "string"
          },
          "snapshotSpace": {
            "$ref": "#/components/schemas/space"
          },
          "snapshotTdvvSize": {
            "$ref": "#/components/schemas/snapshotTdvvsize"
          },
          "snapshotUsedToVirtualPercent": {
            "description": "Snapshot used to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "spaceCalculationTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "started": {
            "nullable": true,
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "storageTier": {
            "description": "Storage Tier",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "thinProvisioned": {
            "description": "",
            "nullable": true,
            "type": "boolean"
          },
          "thinSavings": {
            "description": "Thin savings for the detailed volume object",
            "nullable": true,
            "type": "string"
          },
          "totalRawReservedMiB": {
            "description": "Total Raw Reserved Space in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "totalReservedMiB": {
            "description": "Description",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "totalSpaceMiB": {
            "description": "Total Space in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "unrefSpaceFreedTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "usedCapacity": {
            "description": "Used volume capacity.",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "usedSizeMiB": {
            "description": "Used Size in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "userAllocLimit": {
            "description": "User alloc limit",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userAllocWarning": {
            "description": "User alloc space limit warning",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userAllocationSettings": {
            "$ref": "#/components/schemas/userAllocationSettingsSingle"
          },
          "userCpgID": {
            "description": "User CPG Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userCpgName": {
            "description": "User CPG Name",
            "nullable": true,
            "type": "string"
          },
          "userReservedToVirtualPercent": {
            "description": "User reseved to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "userSpace": {
            "$ref": "#/components/schemas/space"
          },
          "userUsedToVirtualPercent": {
            "description": "User used to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "vlunSectorSize": {
            "description": "VLUN sector size",
            "nullable": true,
            "type": "integer"
          },
          "volumeId": {
            "description": "Numeric ID of the resource",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "volumePerformance": {
            "$ref": "#/components/schemas/volumePerformance"
          },
          "volumeType": {
            "description": "VV Type",
            "example": "VVTYPE_BASE",
            "nullable": true,
            "type": "string"
          },
          "wwn": {
            "description": "Volume wwn.",
            "example": "60002AC0000000000000006B0001FFEB",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrimeraVolumeDetailsList": {
        "nullable": true,
        "properties": {
          "adminAllocationSettings": {
            "$ref": "#/components/schemas/userAllocationSettings"
          },
          "adminSpace": {
            "$ref": "#/components/schemas/space"
          },
          "associatedLinks": {
            "description": "Associated Links",
            "example": [
              {
                "resourceUri": "v1/storage-systems/{systemUid}/contollers",
                "type": "controllers"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/shelves",
                "type": "shelves"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/disks",
                "type": "disks"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/storage-ports",
                "type": "storage-ports"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/storage-devices-settings",
                "type": "storage-devices-settings"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/storage-pools",
                "type": "storage-pools"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/volume-sets",
                "type": "volume-sets"
              },
              {
                "resourceUri": "v1/storage-systems/{systemUid}/host-groups",
                "type": "host-groups"
              }
            ],
            "items": {
              "properties": {
                "resourceUri": {
                  "description": "Resource URI",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "baseId": {
            "description": "snapshot Tdvv Size",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "comment": {
            "description": "Comments",
            "nullable": true,
            "type": "string"
          },
          "compactEfficiency": {
            "description": "Compact Efficiency",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "compressionEfficiency": {
            "description": "Compression Efficiency",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "compressionPolicy": {
            "description": "Compression Policy",
            "nullable": true,
            "type": "string"
          },
          "conversionType": {
            "description": "Conversion Type of Volume",
            "enum": [
              "CONVERSIONTYPE_THIN",
              "CONVERSIONTYPE_DDS",
              "CONVERSIONTYPE_V1",
              "CONVERSIONTYPE_V2",
              null
            ],
            "nullable": true,
            "type": "string"
          },
          "copiedMB": {
            "description": "Copied MB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "copiedPerc": {
            "description": "Copied Perecentage",
            "nullable": true,
            "type": "integer"
          },
          "copyOfID": {
            "description": "Copy of Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "creationTime": {
            "description": "Creation Time",
            "nullable": true,
            "properties": {
              "ms": {
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "customerId": {
            "description": "customerId",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "nullable": true,
            "type": "string"
          },
          "dataReduction": {
            "description": "Data Reduction type",
            "nullable": true,
            "type": "string"
          },
          "ddcSize": {
            "description": "Note, will be updated at most once in an hour",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "ddsSize": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "dedup": {
            "description": "Field to indicate Dedup status",
            "nullable": true,
            "type": "string"
          },
          "dedupSavingsSize": {
            "description": "Note, will be updated at most once in an hour",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "dedupWrittenSize": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "devType": {
            "description": "Device Type `Filter`",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Display name of the volume",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain of the volume",
            "nullable": true,
            "type": "string"
          },
          "efficiencyUpdateTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "expirationTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "fullyProvisioned": {
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "headsPerCylinder": {
            "description": "Heads per Cylinder",
            "nullable": true,
            "type": "integer"
          },
          "healthState": {
            "description": "Health status of the Volume. `Filter, Sort`",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "hidden": {
            "description": "Flag to know if the Volume is hidden or not",
            "nullable": true,
            "type": "boolean"
          },
          "hostWrittenMiB": {
            "description": "Host written data size in MiB. `Filter, Sort`",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "hostWrittenToVirtualPercent": {
            "description": "Host written to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "id": {
            "description": "UUID string uniquely identifying the storage system object. `Filter`",
            "nullable": true,
            "type": "string"
          },
          "initiators": {
            "description": "Initiator details",
            "items": {
              "properties": {
                "deviceDiscoveredName": {
                  "description": "Host/HostGroup name on device.",
                  "example": "TEST11",
                  "nullable": true,
                  "type": "string"
                },
                "id": {
                  "description": "Resource id",
                  "example": "6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "resourceUri": {
                  "description": "Resource URI",
                  "example": "/v1/host-initiators/6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "example": "host-initiators",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "A user friendly name to identify the storage system volume (resourceName). `Filter, Sort`",
            "example": "Finance",
            "nullable": true,
            "type": "string"
          },
          "parentID": {
            "description": "Parent Id `Filter`",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "physParentID": {
            "description": "physical Parent Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "physicalCopy": {
            "nullable": true,
            "type": "boolean"
          },
          "policy": {
            "$ref": "#/components/schemas/policy"
          },
          "provType": {
            "description": "",
            "nullable": true,
            "type": "string"
          },
          "raid": {
            "description": "Raid",
            "nullable": true,
            "type": "string"
          },
          "rcopyStatus": {
            "description": "RemoteCopy Status",
            "nullable": true,
            "type": "string"
          },
          "readOnly": {
            "nullable": true,
            "type": "boolean"
          },
          "resourceUri": {
            "description": "resourceUri for detailed volume object",
            "example": "/v1/storage-systems/primea/2FF70002AC018D94/volumes/{uid}",
            "nullable": true,
            "type": "string"
          },
          "retentionTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "roChildID": {
            "description": "RO child id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "rwChildID": {
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "sectorsPerTrack": {
            "description": "Sector per Track",
            "nullable": true,
            "type": "integer"
          },
          "sharedParentId": {
            "description": "Shared Parent Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "sizeMiB": {
            "description": "Size in MiB `Filter, Sort`",
            "example": 2048,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "snapShotTier": {
            "description": "Snapshot Tier",
            "nullable": true,
            "type": "string"
          },
          "snapshotAllocLimit": {
            "description": "Snapshot alloc limit",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotAllocWarning": {
            "description": "Snapshot alloc Warning",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotAllocationSettings": {
            "$ref": "#/components/schemas/userAllocationSettings"
          },
          "snapshotCpgID": {
            "description": "Snapshot CPG Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotCpgName": {
            "description": "Snapshot CPG name",
            "nullable": true,
            "type": "string"
          },
          "snapshotSpace": {
            "$ref": "#/components/schemas/space"
          },
          "snapshotTdvvSize": {
            "$ref": "#/components/schemas/snapshotTdvvsize"
          },
          "snapshotUsedToVirtualPercent": {
            "description": "Snapshot used to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "spaceCalculationTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "started": {
            "nullable": true,
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "storageTier": {
            "description": "Storage Tier",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "thinProvisioned": {
            "description": "",
            "nullable": true,
            "type": "boolean"
          },
          "thinSavings": {
            "description": "Thin savings for the detailed volume object",
            "nullable": true,
            "type": "string"
          },
          "totalRawReservedMiB": {
            "description": "Total Raw Reserved Space in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "totalReservedMiB": {
            "description": "Description",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "totalSpaceMiB": {
            "description": "Total Space in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "unrefSpaceFreedTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "usedCapacity": {
            "description": "Used volume capacity. `Filter, Sort`",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "usedSizeMiB": {
            "description": "Used Size in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "userAllocLimit": {
            "description": "User alloc limit",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userAllocWarning": {
            "description": "User alloc space limit warning",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userAllocationSettings": {
            "$ref": "#/components/schemas/userAllocationSettings"
          },
          "userCpgID": {
            "description": "User CPG Id `Filter`",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userCpgName": {
            "description": "User CPG Name",
            "nullable": true,
            "type": "string"
          },
          "userReservedToVirtualPercent": {
            "description": "User reseved to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "userSpace": {
            "$ref": "#/components/schemas/space"
          },
          "userUsedToVirtualPercent": {
            "description": "User used to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "vlunSectorSize": {
            "description": "VLUN sector size",
            "nullable": true,
            "type": "integer"
          },
          "volumeId": {
            "description": "Numeric ID of the resource",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "volumeType": {
            "description": "VV Type",
            "example": "VVTYPE_BASE",
            "nullable": true,
            "type": "string"
          },
          "wwn": {
            "description": "Volume wwn. `Filter`",
            "example": "60002AC0000000000000006B0001FFEB",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrimeraVolumesList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PrimeraVolumeDetailsList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed volume object",
            "example": "/v1/storage-systems/primea/2FF70002AC018D94/volumes",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of volumes.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PromoteCloneInput": {
        "description": "Promote clone input. Promote a clone volume with given priority.",
        "properties": {
          "priority": {
            "$ref": "#/components/schemas/clonePriority"
          }
        },
        "type": "object"
      },
      "PromoteSnapshotInput": {
        "description": "Promote snapshot input. Promote a snapshot to the target with given priority.",
        "properties": {
          "pri": {
            "$ref": "#/components/schemas/priority"
          },
          "target": {
            "description": "Target volume name to which the snapshot need to be promoted. If not specified it will be promoted to its base volume.",
            "example": "volume1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProtectionScheduleActionNimble": {
        "description": "Protection Schedule input.",
        "nullable": false,
        "properties": {
          "id": {
            "description": "The ID of the protection schedule. A 42 digit hexadecimal number.",
            "example": "3a0df0fe6f7dc7bb16000000000000000000003467",
            "nullable": false,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProtectionScheduleInput": {
        "description": "Protection schedule details.",
        "nullable": false,
        "properties": {
          "at_time": {
            "description": "Time of day when snapshot should be taken. In case repeat frequency specifies more than one snapshot in a day then the until_time option specifies until what time of day to take snapshots. Non-negative integer in range [0,86399] which is equivalent to [0:00:00 AM, 23:59:59 PM].",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "days": {
            "description": "Specifies which days snapshots should be taken. Comma separated list of days of the week or 'all'.",
            "example": "monday,sunday",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Description of the schedule. String of up to 255 printable ASCII characters.",
            "example": "Every day",
            "nullable": true,
            "type": "string"
          },
          "disable_appsync": {
            "description": "Disables application synchronized snapshots and creates crash consistent snapshots instead. Possible values: 'true', 'false'.",
            "nullable": true,
            "type": "boolean"
          },
          "downstream_partner": {
            "description": "Specifies the partner name if snapshots created by this schedule should be replicated. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. ",
            "example": "partner1",
            "nullable": true,
            "type": "string"
          },
          "downstream_partner_id": {
            "description": "Specifies the partner ID if snapshots created by this schedule should be replicated. In an update operation, if snapshots should be replicated, set this attribute to the ID of the replication partner. If snapshots should not be replicated, set this attribute to the empty string. An optional NsObjectID. A 42 digit hexadecimal number or the empty string.",
            "example": "005319ed73385876a4000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of snapshot schedule to create. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "snapshot1",
            "nullable": false,
            "type": "string"
          },
          "num_retain": {
            "description": "Number of snapshots to retain. If replication is enabled on this schedule the array will always retain the latest replicated snapshot, which may exceed the specified retention value. This is necessary to ensure efficient replication performance. Unsigned 64-bit integer.",
            "example": 0,
            "nullable": false,
            "type": "integer"
          },
          "num_retain_replica": {
            "description": "Number of snapshots to retain on the replica. Unsigned 64-bit integer.",
            "example": 1234,
            "nullable": true,
            "type": "integer"
          },
          "period": {
            "description": "Repeat interval for snapshots with respect to the period_unit. For example, a value of 2 with the 'period_unit' of 'hours' results in one snapshot every 2 hours. Unsigned 64-bit integer.",
            "example": 1234,
            "nullable": true,
            "type": "integer"
          },
          "period_unit": {
            "description": "Time unit over which to take the number of snapshots specified in 'period'. For example, a value of 'days' with a 'period' of '1' results in one snapshot every day. Possible values: 'minutes', 'hours', 'days', 'weeks'.",
            "example": "minutes",
            "nullable": true,
            "type": "string"
          },
          "repl_alert_thres": {
            "description": "Replication alert threshold in seconds. If the replication of a snapshot takes more than this amount of time to complete an alert will be generated. Enter 0 to disable this alert. Seconds since last epoch i.e. 00:00 January 1, 1970.",
            "example": 3400,
            "nullable": true,
            "type": "integer"
          },
          "replicate_every": {
            "description": "Specifies which snapshots should be replicated. If snapshots are replicated and this option is not specified, every snapshot is replicated. Unsigned 64-bit integer. ",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "schedule_type": {
            "description": "Normal schedules have internal timers which drive snapshot creation. An externally driven schedule has no internal timers. All snapshot activity is driven by an external trigger. In other words, these schedules are used only for externally driven manual snapshots. Possible values: 'regular', 'external_trigger'",
            "nullable": true,
            "type": "string"
          },
          "skip_db_consistency_check": {
            "description": "Skip consistency check for database files on snapshots created by this schedule. This option only applies to snapshot schedules of a protection template with application synchronization set to VSS, application ID set to MS Exchange 2010 or later w/DAG, this schedule's snap_verify option set to yes, and its disable_appsync option set to false. Skipping consistency checks is only recommended if each database in a DAG has multiple copies. Possible values: 'true', 'false'. ",
            "nullable": true,
            "type": "boolean"
          },
          "snap_verify": {
            "description": "Run verification tool on snapshot created by this schedule. This option can only be used with snapshot schedules of a protection template that has application synchronization. The tool used to verify snapshot depends on the type of application. For example, if application synchronization is VSS and the application ID is Exchange, eseutil tool is run on the snapshots. If verification fails, the logs are not truncated. Possible values: 'true', 'false'.",
            "nullable": true,
            "type": "boolean"
          },
          "until_time": {
            "description": "Time of day to stop taking snapshots. Applicable only when repeat frequency specifies more than one snapshot in a day. Non-negative integer in range [0,86399] which is equivalent to [0:00:00 AM, 23:59:59 PM].",
            "example": 0,
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "name",
          "num_retain"
        ],
        "type": "object"
      },
      "ProtectionTemplateAction": {
        "description": "Protection Template input.",
        "nullable": false,
        "properties": {
          "protectionTemplateId": {
            "description": "The ID of the protection template. A 42 digit hexadecimal number.",
            "example": "3a0df0fe6f7dc7bb16000000000000000000003467",
            "nullable": false,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PublicKeyDetails": {
        "description": "Public key of the array.",
        "nullable": true,
        "properties": {
          "key": {
            "description": "The key.",
            "example": "DAQABAAABAQDR7pnlz5kehtrqNT9jIDP3KEVZdrYG64DH0ogJwLBM5fF27n/kssZt/NgcstPa2VvE6QTJQqW+3",
            "nullable": true,
            "type": "string"
          },
          "key_name": {
            "description": "The user that owns the key.",
            "example": "root@abc",
            "nullable": true,
            "type": "string"
          },
          "key_type": {
            "description": "The key type.",
            "example": "rsa",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RCLinkId": {
        "nullable": false,
        "properties": {
          "rcLinkId": {
            "description": "Id of remote copy link",
            "example": "afb4961e47212e5bc88dd35db5be5c82",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "rcLinkId"
        ],
        "type": "object"
      },
      "RecommendationList": {
        "properties": {
          "capacityInfo": {
            "$ref": "#/components/schemas/capacityInfoSolo"
          },
          "id": {
            "description": "uid of the array",
            "example": "RTYTY123",
            "nullable": false,
            "type": "string"
          },
          "mgmtIp": {
            "description": "management Ip of the array",
            "example": "1.2.3.4",
            "nullable": false,
            "type": "string"
          },
          "name": {
            "description": "name of the array",
            "example": "system_Name",
            "nullable": false,
            "type": "string"
          },
          "productFamily": {
            "description": "Storage device type. Possible values: deviceType1 and deviceType2",
            "example": "deviceType1",
            "type": "string"
          },
          "state": {
            "description": "For deviceType1 State derived from ports, enclosure, disk and node state for deviceType2 state is state reported by deviceType2 array",
            "enum": [
              "NORMAL",
              "DEGRADED",
              null
            ],
            "nullable": true,
            "type": "string"
          },
          "systemWWN": {
            "description": "WWN of the array",
            "example": "2FF70002AC018D94",
            "nullable": false,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RemoteCopyLink": {
        "properties": {
          "IPC": {
            "description": "Name given to the link IPC.",
            "example": "RCs12",
            "nullable": true,
            "type": "string"
          },
          "displayName": {
            "description": "Replication partner link displayname.",
            "example": "sp2bh_1_3_1",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to.",
            "example": "domain1",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique Identifier of the link",
            "example": "5a5ce66d4814a5e5156de428abb0a58a",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Replication partner link name.",
            "example": "sp2bh_1_3_1",
            "nullable": true,
            "type": "string"
          },
          "partnerName": {
            "description": "Partner name with which the link is affiliated.",
            "example": "RCPartner12",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "Port number.",
            "example": "1079",
            "nullable": true,
            "type": "string"
          },
          "portPos": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RemoteCopyLinkPortPosition"
              }
            ],
            "description": "Port position of the link"
          },
          "rcLinkId": {
            "description": "Id of the replication partner link.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "remoteAddress": {
            "description": "IP address or WWN of the remote link.",
            "example": "20230002AC020CEG",
            "nullable": true,
            "type": "string"
          },
          "remoteId": {
            "description": "Unique Identifier of the remote partner link",
            "example": "6b5ce66d4814a5e5156de428abb0a79a",
            "nullable": true,
            "type": "string"
          },
          "remotePortPos": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RemoteCopyLinkPortPosition"
              }
            ],
            "description": "Port position of the remote link"
          },
          "remoteState": {
            "description": "state of the remote replicatoin partner link.",
            "example": "UNKNOWN",
            "nullable": true,
            "type": "string"
          },
          "remoteStatus": {
            "description": "status of the remote replication partner link.",
            "example": "Down",
            "nullable": true,
            "type": "string"
          },
          "sourceAddress": {
            "description": "IP address or WWN of the link.",
            "example": "20230002AC020CEF",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "state of the replication partner link.",
            "example": "UNKNOWN",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "status of the replication partner link.",
            "example": "Down",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "Unique ID or serial number of the system.",
            "example": "SGH000XWEE",
            "nullable": true,
            "type": "string"
          },
          "systemWWN": {
            "description": "WWN of the system.",
            "example": "2FF70002AC020CEF",
            "nullable": true,
            "type": "string"
          },
          "throughputKByteSec": {
            "description": "Link throughput in KBytes/sec.",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "Link type IP or FC.",
            "example": 2,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RemoteCopyLinkPortPosition": {
        "nullable": true,
        "properties": {
          "node": {
            "description": "Port position node number",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "port": {
            "description": "Port position port number",
            "example": 3,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "slot": {
            "description": "Port position slot number",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RemoteCopyLinks": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/RemoteCopyLink"
            },
            "nullable": true,
            "type": "array"
          },
          "total": {
            "description": "Total number of remote partner links.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RemoteProtectionActionsInput": {
        "properties": {
          "action": {
            "description": "Actions on the volume set where remote protection is enabled.",
            "enum": [
              "FAILOVER",
              "SYNC",
              "OVERRIDE",
              "START",
              "STOP"
            ],
            "example": "SYNC",
            "nullable": false,
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/RemoteProtectionActionsInputParams"
          }
        },
        "type": "object"
      },
      "RemoteProtectionActionsInputParams": {
        "properties": {
          "startActionParams": {
            "$ref": "#/components/schemas/StartParams"
          },
          "stopActionParams": {
            "$ref": "#/components/schemas/StopParams"
          },
          "syncActionParams": {
            "$ref": "#/components/schemas/SyncParams"
          }
        },
        "type": "object"
      },
      "RemoveCertificateInput": {
        "nullable": false,
        "properties": {
          "certificate": {
            "description": "ID of certificate to be deleted",
            "example": "99691e493067b2b2acf1774fc0ccc011",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "certificate"
        ],
        "type": "object"
      },
      "RemoveCertificatesInput": {
        "description": "Request body for deleting the certificates",
        "nullable": false,
        "properties": {
          "certificates": {
            "description": "List of certificate IDs to be deleted",
            "items": {
              "$ref": "#/components/schemas/RemoveCertificateInput"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "certificates"
        ],
        "type": "object"
      },
      "RemoveProtectionTemplates": {
        "description": "Request body for deleting protection templates",
        "nullable": false,
        "properties": {
          "protectionTemplates": {
            "description": "List of protection templates  to be deleted",
            "items": {
              "$ref": "#/components/schemas/ProtectionTemplateAction"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "protectionTemplates"
        ],
        "type": "object"
      },
      "RemoveRemoteCopyLinksInput": {
        "description": "Request Body for removing remote copy links",
        "nullable": true,
        "properties": {
          "replicationPartnerSystemId": {
            "description": "SystemId of target replication partner",
            "example": "7CE816P0SR",
            "nullable": false,
            "type": "string"
          },
          "source": {
            "description": "List of remote copy links to be deleted from source replication partner",
            "items": {
              "$ref": "#/components/schemas/RCLinkId"
            },
            "nullable": false,
            "type": "array"
          },
          "target": {
            "description": "List of remote copy links to be deleted from target replication partner",
            "items": {
              "$ref": "#/components/schemas/RCLinkId"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "source",
          "replicationPartnerSystemId",
          "target"
        ],
        "type": "object"
      },
      "RemoveRemoteCopyTargetInput": {
        "nullable": false,
        "properties": {
          "replicationPartnerSystemId": {
            "description": "SystemId of target replication partner",
            "example": "7CE816P0SR",
            "nullable": true,
            "type": "string"
          },
          "srcReplicationId": {
            "description": "Id of source replication partner",
            "example": "afb4961e47212e5bc88dd35db5be5c83",
            "nullable": false,
            "type": "string"
          },
          "targetReplicationId": {
            "description": "Id of target replication partner",
            "example": "afb4961e47212e5bc88dd35db5be5c83",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "srcReplicationId"
        ],
        "type": "object"
      },
      "RemoveReplicationPartners": {
        "description": "Request body for deleting replication partner pairs",
        "nullable": false,
        "properties": {
          "replicationPartners": {
            "description": "List of replication partner pairs to be deleted",
            "items": {
              "$ref": "#/components/schemas/ReplicationPartnerPairAction"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "replicationPartners"
        ],
        "type": "object"
      },
      "RemoveReplicationPartnersInput": {
        "description": "Request body for deleting replication partner pairs",
        "nullable": false,
        "properties": {
          "replicationPartners": {
            "description": "List of replication partner pairs to be deleted",
            "items": {
              "$ref": "#/components/schemas/RemoveRemoteCopyTargetInput"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "replicationPartners"
        ],
        "type": "object"
      },
      "RemoveSnapshotCollectionInput": {
        "description": "Request body for removing snapshot collections.",
        "nullable": false,
        "properties": {
          "force": {
            "description": "Force remove.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "snapshot_collections": {
            "description": "List of snapshot collections to be deleted.",
            "items": {
              "$ref": "#/components/schemas/SnapshotCollectionAction"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "snapshot_collections"
        ],
        "type": "object"
      },
      "RemoveTrustedCertificateInput": {
        "nullable": false,
        "properties": {
          "trustedCertificate": {
            "description": "ID of certificate to be deleted",
            "example": "99691e493067b2b2acf1774fc0ccc011",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "trustedCertificate"
        ],
        "type": "object"
      },
      "RemoveTrustedCertificatesInput": {
        "description": "Request body for deleting the trusted certificates",
        "nullable": false,
        "properties": {
          "trustedCertificates": {
            "description": "List of certificate IDs to be deleted",
            "items": {
              "$ref": "#/components/schemas/RemoveTrustedCertificateInput"
            },
            "nullable": false,
            "type": "array"
          }
        },
        "required": [
          "trustedCertificates"
        ],
        "type": "object"
      },
      "ReplicationPartnerCommonFields": {
        "properties": {
          "associatedLinks": {
            "description": "Associated Links",
            "example": [
              {
                "link": "/v1/storage-systems/SGH000XWEE",
                "type": "systems"
              }
            ],
            "items": {
              "properties": {
                "resourceUri": {
                  "description": "Resource URI",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "bufferSizeB": {
            "description": "Socket buffer size to use.",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "nullable": true,
            "type": "string"
          },
          "displayName": {
            "description": "Replication partner displayname.",
            "example": "RCPartner12",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to.",
            "example": "domain1",
            "nullable": true,
            "type": "string"
          },
          "flags": {
            "description": "Partner flags.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "health": {
            "description": "Partner health status.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "isRemoteArraySupportReplication": {
            "description": "Boolean value to indicate if remote array OS version supports replication",
            "example": true,
            "nullable": false,
            "type": "boolean"
          },
          "minPeriodSecs": {
            "description": "Minimum supported Async Periodic period for the partner. The field is omitted if unset or unavailable for the version of partner firmware.",
            "example": 300,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nodeWWN": {
            "description": "Partner options, with FC partners this includes the partner system's node WWN. Omitted if unpopulated.",
            "example": "2FF70002AC020DA1",
            "nullable": true,
            "type": "string"
          },
          "numSockets": {
            "description": "Number of sockets to use.",
            "example": 2,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "policies": {
            "description": "Any policies that are set for the partner.",
            "nullable": true,
            "properties": {
              "mirrorConfig": {
                "description": "Duplication of all configurations involving the specified partner.",
                "example": true,
                "nullable": true,
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "quorumATFTimeout": {
            "description": "Automatic Transparent Failover quorum partner failure timeout.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "quorumIpAddress": {
            "description": "Quorum IP Address associated with the partner. Set to 'NA' if not available.",
            "example": "10.10.10.11",
            "nullable": true,
            "type": "string"
          },
          "quorumSSLPort": {
            "description": "Quorum SSL port number.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "quorumStatus": {
            "description": "Quorum status of the partner. Possible values - Uninitialized, Initializing, Standby, Active, Failsafe, Failover or Restarting. Null if unset.",
            "example": "Initializing",
            "nullable": true,
            "type": "string"
          },
          "quorumStatusQual": {
            "description": "Quorum status qualifier. Set to 'NA' if not available.",
            "example": "NA",
            "nullable": true,
            "type": "string"
          },
          "quorumVersion": {
            "description": "Quorum version.",
            "example": "2.0",
            "nullable": true,
            "type": "string"
          },
          "remoteId": {
            "description": "Unique id of the remote replication partner.",
            "example": "6a5ce66d4814a5e5156de428abb0a580",
            "nullable": true,
            "type": "string"
          },
          "remoteName": {
            "description": "Name of the remote replication partner.",
            "example": "FC-02",
            "nullable": true,
            "type": "string"
          },
          "remoteReplicationId": {
            "description": "Replication ID of the remote replication partner.",
            "example": 12,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "remoteSystemId": {
            "description": "Unique ID or serial number of the remote system.",
            "example": "SGH000XWEF",
            "nullable": true,
            "type": "string"
          },
          "remoteSystemName": {
            "description": "Name of the remote system.",
            "example": "System102",
            "nullable": true,
            "type": "string"
          },
          "replicationId": {
            "description": "Replication ID of the partner.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "replicationPartnerLinks": {
            "$ref": "#/components/schemas/RemoteCopyLinks"
          },
          "replicationSystemId": {
            "description": "ID of the remote system.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "description": "resourceUri for detailed replication partner object",
            "example": "/api/v1/storage-systems/device-type1/SGH000XWEE/system-settings/replication-partners/5a5ce66d4814a5e5156de428abb0a589",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State of the replication partner.",
            "example": "UNKNOWN",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "Unique ID or serial number of the system.",
            "example": "SGH000XWEE",
            "nullable": true,
            "type": "string"
          },
          "systemName": {
            "description": "Name of the system.",
            "example": "System101",
            "nullable": true,
            "type": "string"
          },
          "systemWWN": {
            "description": "WWN of the system.",
            "example": "2FF70002AC020CEF",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "replication-partner",
            "nullable": true,
            "type": "string"
          },
          "version": {
            "description": "Partner version.",
            "example": 41,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ReplicationPartnerDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReplicationPartnerFieldsWithoutFilter"
          },
          {
            "$ref": "#/components/schemas/ReplicationPartnerCommonFields"
          }
        ],
        "nullable": true,
        "properties": {
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH000XWEE/system-settings/replication-partners/5a5ce66d4814a5e5156de428abb0a589",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for detailed replication partner objects",
            "example": "api/v1/storage-systems/device-type1/SGH000XWEE/system-settings/replication-partners/5a5ce66d4814a5e5156de428abb0a589",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReplicationPartnerFieldsWithFilter": {
        "properties": {
          "id": {
            "description": "Unique id of the replication partner. `Filter`",
            "example": "5a5ce66d4814a5e5156de428abb0a589",
            "type": "string"
          },
          "name": {
            "description": "Name of the replication partner. `Filter, Sort`",
            "example": "RCPartner12",
            "type": "string"
          },
          "replicationPartnerType": {
            "description": "Link protocol type. `Filter, Sort`",
            "example": "FC",
            "type": "string"
          },
          "status": {
            "description": "Status of the partner. Possible values - New, Ready, Unsupported, Failing, Failed or Disabled. `Filter, Sort`",
            "example": "Ready",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReplicationPartnerFieldsWithoutFilter": {
        "properties": {
          "id": {
            "description": "Unique id of the replication partner.",
            "example": "5a5ce66d4814a5e5156de428abb0a589",
            "type": "string"
          },
          "name": {
            "description": "Name of the replication partner.",
            "example": "RCPartner12",
            "type": "string"
          },
          "replicationPartnerType": {
            "description": "Link protocol type.",
            "example": "FC",
            "type": "string"
          },
          "status": {
            "description": "Status of the partner. Possible values - New, Ready, Unsupported, Failing, Failed or Disabled.",
            "example": "Ready",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReplicationPartnerInput": {
        "description": "Source and Target replication partner input details",
        "nullable": false,
        "properties": {
          "replicationPartnerSystemId": {
            "description": "SystemId of target array",
            "nullable": false,
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/CreateRemoteCopyTargetInput"
          },
          "target": {
            "$ref": "#/components/schemas/CreateRemoteCopyTargetInput"
          }
        },
        "required": [
          "source",
          "replicationPartnerSystemId",
          "target"
        ],
        "type": "object"
      },
      "ReplicationPartnerList": {
        "nullable": true,
        "properties": {
          "customerId": {
            "description": "customer ID",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "nullable": true,
            "type": "string"
          },
          "displayName": {
            "description": "Replication partner display name.",
            "example": "RCPartner1",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to.",
            "example": "Domain1",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "groupId": {
            "description": "Unique id of replication partner remote group",
            "example": "0af26e4430948dd5c37bea1757107caf",
            "nullable": true,
            "type": "string"
          },
          "groupLastSyncTime": {
            "$ref": "#/components/schemas/SyncTime"
          },
          "groupName": {
            "description": "Replication partner remote group name.",
            "example": "testGroup",
            "nullable": true,
            "type": "string"
          },
          "groupObjectId": {
            "description": "Replication partner group ID.",
            "example": 11,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the replication partner.",
            "example": "0af26e4430548dd5c37bea1757107caf",
            "nullable": true,
            "type": "string"
          },
          "isProtectionPolicyConfigured": {
            "description": "Boolean value to indicate if protection policy is properly configured on the volume set. If it is set to false, user needs to either delete the policy or fix the policy configuration. All other operations will be blocked in this scenario.",
            "example": true,
            "nullable": false,
            "type": "boolean"
          },
          "isRemoteArraySupportReplication": {
            "description": "Boolean value to indicate if remote array OS version supports replication",
            "example": true,
            "nullable": false,
            "type": "boolean"
          },
          "isSourceArraySupportReplication": {
            "description": "Boolean value to indicate if source array OS version supports replication",
            "example": true,
            "nullable": false,
            "type": "boolean"
          },
          "mode": {
            "description": "Replication partner group mode.",
            "example": "Periodic",
            "nullable": true,
            "type": "string"
          },
          "policies": {
            "description": "The policy assigned to the replication partner remote group.",
            "nullable": true,
            "properties": {
              "activeActive": {
                "description": "Specifies active active policy of the group.",
                "example": true,
                "nullable": true,
                "type": "boolean"
              },
              "autoFailover": {
                "description": "Automatic failover on a group.",
                "example": true,
                "nullable": true,
                "type": "boolean"
              },
              "autoRecover": {
                "description": "If the group is stopped as a result of links going down, the group can be automatically restarted after the links come back up.",
                "example": true,
                "nullable": true,
                "type": "boolean"
              },
              "autoSynchronize": {
                "description": "Specifies auto synchronization of the group.",
                "example": true,
                "nullable": true,
                "type": "boolean"
              },
              "multiTargetPeerPersistence": {
                "description": "Specifies that the group is participating in a Multi-target Peer Persistence configuration. The group must have two targets, one of which must be synchronous.The synchronous group target also requires pathManagement and auto Fail over policy settings.",
                "example": true,
                "nullable": true,
                "type": "boolean"
              },
              "overPeriodAlert": {
                "description": "If synchronization of an asynchronous periodic group takes longer to complete than its synchronization period, an alert is generated.",
                "example": true,
                "nullable": true,
                "type": "boolean"
              },
              "pathManagement": {
                "description": "Path management on a group.",
                "example": true,
                "nullable": true,
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "protectionType": {
            "description": "Type of protection",
            "example": "Remote",
            "nullable": true,
            "type": "string"
          },
          "remoteSnpCPG": {
            "description": "Name for which the snapshot space is allocated on the remote target.",
            "example": "FC_r1",
            "nullable": true,
            "type": "string"
          },
          "remoteUsrCPG": {
            "description": "Name for which the user space is allocated on the remote target.",
            "example": "FC_r1",
            "nullable": true,
            "type": "string"
          },
          "remoteVolumeSetName": {
            "description": "Target volume set name where remote protection is enabled",
            "example": "volumeSet2",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for replication partner list where volume set is remote protected",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/applicationsets/9c3c4f29a82fd8d632ff379116fa0b8f/replication-partners/0af26e4430548dd5c37bea1757107caf",
            "type": "string"
          },
          "roleReversed": {
            "description": "Remote group role switched due to a fail over.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "snapFrequencySecs": {
            "description": "Specifies the interval in seconds at which remote group takes coordinated snapshots. This field applies only to Async mode: it is set to -1 otherwise.",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "state": {
            "description": "Status of the Remote group for the replication partner. Can be New, Starting, Started, Restart, Stopped, Backup, Failsafe or Logging. Null if unset.",
            "example": "Started",
            "nullable": true,
            "type": "string"
          },
          "syncPeriod": {
            "description": "Time period in seconds for automatic resynchronization. The value must be at least five minutes and not more than one year. Defaults to 0.",
            "example": 0,
            "format": "int64",
            "type": "integer"
          },
          "systemId": {
            "description": "Unique ID or serial number of the system.",
            "example": "7CE816P0SR",
            "nullable": true,
            "type": "string"
          },
          "systemName": {
            "description": "Name of the system.",
            "example": "sp2bh",
            "nullable": true,
            "type": "string"
          },
          "systemWWN": {
            "description": "WWN of the system.",
            "example": "2FF70002AC020DA1",
            "nullable": true,
            "type": "string"
          },
          "targetName": {
            "description": "Target to which the volume group is mirrored. This is the same as replication partner.",
            "example": "sp2bh",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "replication-partner",
            "nullable": true,
            "type": "string"
          },
          "volumeCount": {
            "description": "Number of volumes in the group for a replication partner.",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ReplicationPartnerObj": {
        "description": "The request body for replication partner.",
        "nullable": false,
        "properties": {
          "control_port": {
            "description": "Port number of partner control interface. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "data_port": {
            "description": "Port number of partner data interface. Positive integer value up to 65535 representing TCP/IP port.",
            "example": 1024,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "description": {
            "description": "Description of replication partner. String of up to 255 printable ASCII characters.",
            "example": "99.9999% availability",
            "nullable": true,
            "type": "string"
          },
          "repl_hostname": {
            "description": "IP address or hostname of partner data interface. String of up to 64 alphanumeric characters, - and . and colon are allowed after first character.",
            "example": "15.213.204.121",
            "nullable": true,
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/Source"
          },
          "subnet_label": {
            "deprecated": true,
            "description": "Label of the subnet used to replicate to this partner. String of up to 64 alphanumeric characters, - and . and colon are allowed after first character.",
            "example": "myobject-5",
            "type": "string"
          },
          "subnet_type": {
            "deprecated": true,
            "description": "Type of the subnet used to replicate to this partner. Possible values are 'invalid', 'unconfigured', 'mgmt', 'data', 'mgmt_data'.",
            "example": "mgmt",
            "nullable": true,
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/Target"
          },
          "targetSystemId": {
            "description": "Target system ID",
            "example": "005319ed73385876a4000000000000000000000001",
            "nullable": false,
            "type": "string"
          },
          "throttles": {
            "description": "Throttles used while replicating from/to this partner. All the throttles for the partner.",
            "items": {
              "$ref": "#/components/schemas/ReplicationThrottle"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "source",
          "targetSystemId",
          "target"
        ],
        "type": "object"
      },
      "ReplicationPartnerPairAction": {
        "description": "Replication Partner pair input.",
        "nullable": false,
        "properties": {
          "replicationPartnerSystemId": {
            "description": "The ID of the system where the remote replication partner is created. A 42 digit hexadecimal number.",
            "example": "7a0ef0fe6f7dc7bb16000000000000000000001257",
            "nullable": true,
            "type": "string"
          },
          "srcReplicationId": {
            "description": "The ID of the replication partner. A 42 digit hexadecimal number.",
            "example": "3a0df0fe6f7dc7bb16000000000000000000003467",
            "nullable": false,
            "type": "string"
          },
          "targetReplicationId": {
            "description": "The ID of the remote replication partner. A 42 digit hexadecimal number.",
            "example": "1a0hf0fe6f7dc7bb16000000000000000000007835",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReplicationPartnerVolumeList": {
        "properties": {
          "customerId": {
            "description": "customerId",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "nullable": true,
            "type": "string"
          },
          "displayName": {
            "description": "Volume display name",
            "example": "testVol624_1",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to.",
            "example": "Domain2",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "groupId": {
            "description": "Unique id of replication partner remote group.",
            "example": "0af26e4430948dd5c37bea1757107caf",
            "nullable": true,
            "type": "string"
          },
          "groupName": {
            "description": "Replication partner remote group name.",
            "example": "testGroup",
            "nullable": true,
            "type": "string"
          },
          "groupObjectId": {
            "description": "Replication partner group ID.",
            "example": 11,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the volume.",
            "example": "b23a03cf79a0830f507eebb90c30410c",
            "nullable": true,
            "type": "string"
          },
          "isRemoteArraySupportReplication": {
            "description": "Boolean value to indicate if remote array OS version supports replication",
            "example": true,
            "nullable": false,
            "type": "boolean"
          },
          "localVolumeId": {
            "description": "Volume ID.",
            "example": 21,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "localVolumeName": {
            "description": "Volume name.",
            "example": "testVol624_1",
            "nullable": true,
            "type": "string"
          },
          "remoteVolume": {
            "description": "remote volume properties associated with replication partner",
            "nullable": true,
            "properties": {
              "asyncOutstanding": {
                "description": "Total outstanding data to be synchronized in MB. You can calculate backlog data for the Remote Copy Async group by summing up the asyncOutsstanding value for all the volumes in the group. Defaults to -1.",
                "example": -1,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "remoteVolumeID": {
                "description": "Volume ID on the target system.",
                "example": 31,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "remoteVolumeName": {
                "description": "Volume name on the target system.",
                "example": "testVol624_1.r",
                "nullable": true,
                "type": "string"
              },
              "resyncIteration": {
                "description": "A correlator used to determine the data consistency point of the resynchroniztion snapshot relative to the remote volume and/or snapshots. Returns 'NA' if not set.",
                "example": "134383/1",
                "nullable": true,
                "type": "string"
              },
              "resyncSnapshotName": {
                "description": "Snapshot indicating the starting point of the remote volume. The primary array uses this snapshot to determine which changes to synchronize to the secondary volume. The target array uses this snapshot as a recovery point if there is a resynchronization failure.",
                "example": "rcpy.41.88.134",
                "nullable": true,
                "type": "string"
              },
              "syncIteration": {
                "description": "A correlator used to determine the data consistency point of the synchronization snapshot relative to the remote volume and/or snapshots. Returns 'NA' if not set.",
                "example": "NA",
                "nullable": true,
                "type": "string"
              },
              "syncPercentage": {
                "description": "Synchronization percentage of the volume.",
                "example": 36,
                "nullable": true,
                "type": "integer"
              },
              "syncSnapshotName": {
                "description": "Snapshot indicating the destination point of the Remote Copy volume on successful completion of resynchronization. Upon completion of a resynchronization, the remote base volume mirrors this synchronization snapshot. This snapshot becomes the resync snapshot when resynchronization completes.",
                "example": "none",
                "nullable": true,
                "type": "string"
              },
              "syncStatus": {
                "description": "Synchronization status of the volume. Can be New, Syncing, Synced, Not Synced, Stale, New Pre Synced, New Sync from Snap, Failsafe, Logging, New Pending, Pending Dismiss or Remote Pending Dismiss. Null if unset.",
                "example": "Synced",
                "nullable": true,
                "type": "string"
              },
              "targetName": {
                "description": "Target to which the volume group is mirrored.",
                "example": "sp2bh",
                "nullable": true,
                "type": "string"
              },
              "volumeIteration": {
                "description": "A correlator used to determine the data consistency point of the volume relative to the remote volume and/or snapshots. Returns 'NA' if not set.",
                "example": "134383/1",
                "nullable": true,
                "type": "string"
              },
              "volumeLastSyncTime": {
                "$ref": "#/components/schemas/SyncTime"
              },
              "volumeSyncLength": {
                "description": "Volume synchronization total length. Returns -1 if unset",
                "example": -1,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "volumeSyncOffset": {
                "description": "Volume synchronization offset. Returns -1 if unset.",
                "example": -1,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "resourceUri": {
            "description": "resourceUri for detailed volume object",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/volumes/b23a03cf79a0830f507eebb90c30410c",
            "type": "string"
          },
          "systemId": {
            "description": "Unique ID or serial number of the system.",
            "example": "7CE816P0SR",
            "nullable": true,
            "type": "string"
          },
          "systemWWN": {
            "description": "WWN of the system.",
            "example": "2FF70002AC020DA1",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "volume",
            "nullable": true,
            "type": "string"
          }
        }
      },
      "ReplicationPartnerVolumesSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ReplicationPartnerVolumeList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for source and remote volume list as part of remote protected volume set",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/applicationsets/0af26e4430948dd5c37bea1757107caf/replication-partners/0af26e4430548dd5c37bea1757107caf/volumes",
            "type": "string"
          },
          "total": {
            "description": "Total number of replication partner volumes.",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ReplicationPartners": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReplicationPartnerFieldsWithFilter"
          },
          {
            "$ref": "#/components/schemas/ReplicationPartnerCommonFields"
          }
        ],
        "nullable": true,
        "type": "object"
      },
      "ReplicationPartnersList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ReplicationPartners"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for replication partner objects",
            "example": "api/v1/storage-systems/device-type1/SGH000XWEE/system-settings/replication-partners",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of replication partners.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ReplicationPartnersSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ReplicationPartnerList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for replication partner list where volume set is remote protected",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/applicationsets/0af26e4430948dd5c37bea1757107caf/replication-partners",
            "type": "string"
          },
          "total": {
            "description": "Number of  replication partners.",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ReplicationThrottle": {
        "description": "A single throttle for the partner.",
        "nullable": true,
        "properties": {
          "days": {
            "description": "List of days that the throttle operates.",
            "example": "example day",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Description of the throttle.",
            "example": "Throttle one",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the throttle.",
            "example": "Throttle1",
            "nullable": true,
            "type": "string"
          },
          "thr_at_time": {
            "description": "Start time set for the throttle.",
            "example": 10800,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "thr_bandwidth": {
            "description": "Bandwidth set for the throttle in megabits per second or as the largest possible 64-bit signed integer (9223372036854775807) to indicate that there is no limit. This attribute is superseded by thr_bandwidth_limit_kbps.",
            "example": 14,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "thr_until_time": {
            "description": "End time set for the throttle.",
            "example": 14400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ReplicationVolumeCollectionSummary": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Identifier of volume collection",
            "example": "07717d935c0fa5075d000000000000000000000008",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceReference": {
        "description": "References to other resources include the name, type and URI of the other resource.",
        "properties": {
          "name": {
            "readOnly": true,
            "type": "string"
          },
          "resourceUri": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "type",
          "resourceUri"
        ],
        "type": "object"
      },
      "ResourceTypesResponse": {
        "properties": {
          "items": {
            "description": "Resource types on which the user has a read permission",
            "example": [
              "volume",
              "audit"
            ],
            "items": {
              "type": "string"
            },
            "title": "Resource types",
            "type": "array"
          }
        },
        "required": [
          "items"
        ],
        "title": "Resource Types",
        "type": "object"
      },
      "ResourceUri": {
        "description": "Link to the object URI",
        "example": "/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817",
        "nullable": true,
        "type": "string"
      },
      "ResyncCloneVolumeInput": {
        "description": "Resynchronize clone input. Resynchronize a clone volume with given priority.",
        "properties": {
          "priority": {
            "$ref": "#/components/schemas/clonePriority"
          }
        },
        "type": "object"
      },
      "STATE": {
        "description": "State of the resource",
        "nullable": true,
        "properties": {
          "detailed": {
            "description": "Array of the detailed states of the resource",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "overall": {
            "description": "Overall state of the resource",
            "enum": [
              "STATE_UNKNOWN",
              "STATE_NORMAL",
              "STATE_DEGRADED",
              "STATE_FAILED",
              "STATE_NOT_APPLICABLE",
              "STATE_NEW",
              null
            ],
            "example": "STATE_NORMAL",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SYSTEMLEDSINGLE": {
        "description": "LED state.",
        "enum": [
          "LED_UNKNOWN",
          "LED_OFF",
          "LED_GREEN",
          "LED_GREEN_BLNK",
          "LED_AMBER",
          "LED_AMBER_BLNK",
          "LED_BLUE",
          "LED_BLUE_BLNK",
          null
        ],
        "nullable": true,
        "type": "string"
      },
      "SnapSummary": {
        "description": "Last snapshot for this volume. Select fields containing snapshot information.",
        "nullable": true,
        "properties": {
          "snap_creation_time": {
            "description": "Creation time of snapshot.",
            "example": 1598952427,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snap_id": {
            "description": "ID of snapshot.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "snap_name": {
            "description": "Name of snapshot.",
            "example": "snap1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SnapshotCollectionAction": {
        "description": "Snapshot collection input.",
        "nullable": false,
        "properties": {
          "id": {
            "description": "The ID of the snapshot collection. A 42 digit hexadecimal number.",
            "example": "3a0df0fe6f7dc7bb16000000000000000000003467",
            "nullable": false,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SnapshotFromVolume": {
        "description": "Snapshots as presented to volumes in volume-sets",
        "nullable": true,
        "properties": {
          "id": {
            "description": "ID of snapshot.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Snapshot name.",
            "example": "snap1",
            "nullable": true,
            "type": "string"
          },
          "snap_id": {
            "description": "ID of snapshot.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "snap_name": {
            "description": "Snapshot name.",
            "example": "snap1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SnapshotLunInfo": {
        "description": "Information about the snapshot LUNs. This information is available only for Fibre Channel.",
        "nullable": true,
        "properties": {
          "id": {
            "description": "ID of snapshot.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "lun": {
            "description": "Snapshot LUN.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Snapshot name.",
            "example": "snap1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SnmpConfigParams": {
        "properties": {
          "managerIP": {
            "description": "Specify the IP address of the host from which the manager runs",
            "example": "15.218.169.163",
            "nullable": false,
            "type": "string"
          },
          "notify": {
            "description": "Indicates the trap notification types defined by the HPE deviceType1 MIB",
            "enum": [
              "ALL",
              "NODUP",
              "STANDARD"
            ],
            "example": "STANDARD",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "Specify the port number where the SNMP manager receives traps",
            "example": 162,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "retry": {
            "description": "Specify the number of times to send a trap (retry) if the SNMP manager is not available.",
            "example": 2,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "timeoutSecs": {
            "description": "Specify the number of seconds to wait before sending a trap (timeout).",
            "example": 162,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "user": {
            "description": "Specify the SNMPv3 user name",
            "example": "user1",
            "nullable": true,
            "type": "string"
          },
          "version": {
            "description": "Specify the SNMP version supported",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Source": {
        "anyOf": [
          {
            "properties": {
              "pool_id": {
                "description": "prop0 is \"pool_id\". The pool ID where volumes replicated from this partner will be created. Replica volumes created as clones ignore this parameter and are always created in the same pool as their parent volume. A 42 digit hexadecimal number.",
                "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
                "nullable": true,
                "type": "string"
              }
            }
          },
          {
            "properties": {
              "folder_id": {
                "description": "prop1 is \"folder_id\". The Folder ID within the pool where volumes replicated from this partner will be created. A 42 digit hexadecimal number. example: 2a0df0fe6f7dc7bb16000000000000000000004818",
                "nullable": true,
                "type": "string"
              }
            }
          }
        ],
        "description": "Source partner.",
        "nullable": false,
        "properties": {
          "hostname": {
            "description": "IP address or hostname of partner interface. This must be the partner's Group Management IP address. String of up to 64 alphanumeric characters, - and . and colon are allowed after first character.",
            "example": "15.213.204.163",
            "type": "string"
          },
          "name": {
            "description": "Name of the replication partner. String of up to 63 alphanumeric and can include hyphens characters but cannot start with hyphen.",
            "example": "replicationPartner1",
            "type": "string"
          },
          "subnet_label": {
            "description": "Label of the subnet used to replicate to this partner. String of up to 64 alphanumeric characters, - and . and colon are allowed after first character.",
            "example": "myobject-5",
            "type": "string"
          },
          "subnet_type": {
            "description": "Type of the subnet used to replicate to this partner. Possible values are 'invalid', 'unconfigured', 'mgmt', 'data', 'mgmt_data'.",
            "example": "mgmt",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "name",
          "hostname"
        ],
        "type": "object"
      },
      "StartParams": {
        "properties": {
          "targetName": {
            "description": "Target name on which the protection has to be started.",
            "example": "s1511",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "State": {
        "description": "Host State",
        "nullable": true,
        "properties": {
          "detailed": {
            "nullable": true,
            "properties": {
              "args": {
                "description": "system ntp addresses",
                "items": {
                  "nullable": true,
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              },
              "default": {
                "description": "Default Name",
                "example": "Host sltestish",
                "nullable": true,
                "type": "string"
              },
              "key": {
                "description": "Key of the Host Name",
                "example": "HOST_NAME",
                "nullable": true,
                "type": "string"
              },
              "localized_text": {
                "description": "Localized Text ",
                "example": "Localized text of the resource capabilities",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "overallState": {
            "description": "Host State   ",
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "Reachability status of the array in the group. Possible values: 'unreachable', 'reachable'.",
        "example": "reachable",
        "nullable": true,
        "type": "string"
      },
      "StopParams": {
        "properties": {
          "targetName": {
            "description": "Target name on which the protection has to be stopped.",
            "example": "s1511",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SyncParams": {
        "properties": {
          "forceFullSync": {
            "description": "Force full synchronization, even if volumes are already synchronized.",
            "example": false,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SyncTime": {
        "description": "Last synchronization time in milliseconds since epoch.",
        "nullable": true,
        "properties": {
          "ms": {
            "description": "Epoch time in milliseconds.",
            "example": 1552301131100,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tz": {
            "description": "Time zone name",
            "example": "UTC",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Target": {
        "anyOf": [
          {
            "properties": {
              "pool_id": {
                "description": "prop0 is \"pool_id\". The pool ID where volumes replicated from this partner will be created. Replica volumes created as clones ignore this parameter and are always created in the same pool as their parent volume. A 42 digit hexadecimal number.",
                "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
                "nullable": true,
                "type": "string"
              }
            }
          },
          {
            "properties": {
              "folder_id": {
                "description": "prop1 is \"folder_id\". The Folder ID within the pool where volumes replicated from this partner will be created. A 42 digit hexadecimal number. example: 2a0df0fe6f7dc7bb16000000000000000000004818",
                "nullable": true,
                "type": "string"
              }
            }
          }
        ],
        "description": "Target partner.",
        "nullable": false,
        "properties": {
          "hostname": {
            "description": "IP address or hostname of partner interface. This must be the partner's Group Management IP address. String of up to 64 alphanumeric characters, - and . and colon are allowed after first character.",
            "example": "15.213.204.164",
            "type": "string"
          },
          "name": {
            "description": "Name of the replication partner. String of up to 63 alphanumeric and can include hyphens characters but cannot start with hyphen.",
            "example": "replicationPartner2",
            "type": "string"
          },
          "subnet_label": {
            "description": "Label of the subnet used to replicate to this partner. String of up to 64 alphanumeric characters, - and . and colon are allowed after first character.",
            "example": "myobject-5",
            "type": "string"
          },
          "subnet_type": {
            "description": "Type of the subnet used to replicate to this partner. Possible values are 'invalid', 'unconfigured', 'mgmt', 'data', 'mgmt_data'.",
            "example": "mgmt",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "name",
          "hostname"
        ],
        "type": "object"
      },
      "Task": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonResourceProperties"
          },
          {
            "$ref": "#/components/schemas/TaskProperties"
          }
        ],
        "description": "The task resource provides information about progress of asynchronous\nrequest processing and is where associated resources can be found.\n"
      },
      "TaskConsoleReference": {
        "description": "References to other UI link include the consoleUri",
        "properties": {
          "consoleUri": {
            "type": "string"
          }
        },
        "required": [
          "consoleUri"
        ],
        "type": "object"
      },
      "TaskList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Task"
            },
            "type": "array"
          },
          "pageLimit": {
            "description": "The limit query parameter specified in the request.",
            "type": "integer"
          },
          "pageOffset": {
            "description": "The offset query parameter specified in the request.",
            "type": "integer"
          },
          "total": {
            "description": "Total number of items matching the filter query parameter in the request.",
            "type": "integer"
          }
        },
        "required": [
          "items"
        ]
      },
      "TaskLogMessage": {
        "properties": {
          "message": {
            "type": "string"
          },
          "timestampAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "timestampAt",
          "message"
        ]
      },
      "TaskProperties": {
        "properties": {
          "additionalDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskConsoleReference"
              }
            ],
            "description": "A link to be displayed in the Tasks UI. This can be used when a task is paused to take the user to the console UI page with information on how to unpause the task, or for more general information when the task is in other states."
          },
          "associatedResources": {
            "description": "Resources that are associated with the task. These may be created by the task or other resources that are involved in the task.",
            "items": {
              "$ref": "#/components/schemas/ResourceReference"
            },
            "type": "array"
          },
          "childTasks": {
            "description": "A list of sub-tasks that were initiated by this task.",
            "items": {
              "$ref": "#/components/schemas/ResourceReference"
            },
            "type": "array"
          },
          "createdAt": {
            "description": "The time this task was created.",
            "format": "date-time",
            "type": "string"
          },
          "displayName": {
            "description": "The displayed name for the task.",
            "type": "string"
          },
          "endedAt": {
            "description": "The time this task completed.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorResponse"
              },
              {
                "nullable": true
              }
            ],
            "description": "The error response status of the operation."
          },
          "estimatedRunningDurationMinutes": {
            "description": "An estimate of how long the task will run before completing.",
            "type": "integer"
          },
          "healthStatus": {
            "description": "The health status indicates if any errors or problems have been encountered during the processing of the task. \nExpected values are OK, ERROR, WARNING, UNKNOWN, and UNSPECIFIED.\n",
            "type": "string"
          },
          "logMessages": {
            "description": "Time stamped messages that record the progress of the task.",
            "items": {
              "$ref": "#/components/schemas/TaskLogMessage"
            },
            "type": "array"
          },
          "parentTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceReference"
              },
              {
                "nullable": true
              }
            ],
            "description": "The parent is the task that initiated this sub-task. If this is not a sub-task this will be a self reference."
          },
          "progressPercent": {
            "description": "A percentage representation of progress to completion.",
            "maximum": 100,
            "minimum": 0,
            "type": "integer"
          },
          "recommendations": {
            "description": "Recommendations on how to fix failing tasks.",
            "items": {
              "$ref": "#/components/schemas/TaskRecommendations"
            },
            "type": "array"
          },
          "sourceResource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceReference"
              },
              {
                "nullable": true
              }
            ],
            "description": "The resource that was used to initiate the task."
          },
          "startedAt": {
            "description": "The time this task was started.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "A message to indicate the current state of the task, for example the current step in a workflow.\nExpected values are INITIALIZED, RUNNING, FAILED, SUCCEEDED, TIMEDOUT, PAUSED, and UNSPECIFIED.\n",
            "type": "string"
          },
          "suggestedPollingIntervalSeconds": {
            "description": "This attribute suggests a suitable interval to use when polling for progress. Where specified this will be based on the frequency with which the task is likely to be updated.",
            "type": "integer"
          },
          "updatedAt": {
            "description": "The time this task was last updated.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "userId": {
            "description": "The ID or email address of the user that initiated the task.",
            "type": "string"
          }
        }
      },
      "TaskRecommendations": {
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "TasksBadRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "properties": {
          "errorCode": {
            "description": "Possible values: BAD_REQUEST, INVALID_PARAMETER"
          }
        }
      },
      "TasksForbidden": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "properties": {
          "errorCode": {
            "description": "Possible values: FORBIDDEN"
          }
        }
      },
      "TasksInternalServerError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "properties": {
          "errorCode": {
            "description": "Possible values: INTERNAL_ERROR"
          }
        }
      },
      "TasksNotFound": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "properties": {
          "errorCode": {
            "description": "Possible values: NOT_FOUND"
          }
        }
      },
      "TasksServiceUnavailable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "properties": {
          "errorCode": {
            "description": "Possible values: SERVICE_UNAVAILABLE"
          }
        }
      },
      "TasksUnauthenticated": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "properties": {
          "errorCode": {
            "description": "Possible values: UNAUTHENTICATED"
          }
        }
      },
      "Throttle": {
        "description": "A single throttle for the partner.",
        "nullable": true,
        "properties": {
          "creation_time": {
            "description": "Creation time of the throttle.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "days": {
            "description": "List of days that the throttle operates.",
            "example": "example day",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Description of the throttle.",
            "example": "Throttle one",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Id of the throttle.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "last_modified": {
            "description": "Last modification time of the throttle.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the throttle.",
            "example": "Throttle1",
            "nullable": true,
            "type": "string"
          },
          "thr_at_time": {
            "description": "Start time set for the throttle.",
            "example": 10800,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "thr_bandwidth": {
            "description": "Bandwidth set for the throttle in megabits per second or as the largest possible 64-bit signed integer (9223372036854775807) to indicate that there is no limit. This attribute is superseded by thr_bandwidth_limit_kbps.",
            "example": 14,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "thr_bandwidth_kbps": {
            "description": "Bandwidth set for the throttle in kilobits per second or as the largest possible 64-bit signed integer (9223372036854775807) to indicate that there is no limit. This atttibute is superseded by thr_bandwidth_limit_kbps.",
            "example": 1400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "thr_bandwidth_limit_kbps": {
            "description": "Bandwidth set for the throttle in kilobits per second or -1 to indicate that there is no limit.",
            "example": 1400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "thr_day_mask": {
            "description": "Mask for days that the throttle operates.",
            "example": 41,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "thr_partner_id": {
            "description": "ID of the partner object.",
            "example": "001d9973433673c3db000000000000000000000001",
            "nullable": true,
            "type": "string"
          },
          "thr_until_time": {
            "description": "End time set for the throttle.",
            "example": 14400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TrustedCertParams": {
        "description": "Parameters for adding a trusted certificate",
        "nullable": false,
        "properties": {
          "certificates": {
            "description": "Trusted certificate text",
            "example": "----BEGIN CERTIFICATE -----abc----END CERTIFICATE -----",
            "nullable": false,
            "type": "string"
          },
          "type": {
            "description": "Type of the trusted certificate",
            "example": "other",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "type",
          "certificates"
        ],
        "type": "object"
      },
      "UninitializedArrayResponse": {
        "nullable": true,
        "properties": {
          "all_flash": {
            "description": "True if it is an All-Flash array, False otherwise.Possible values : true, false.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "array_name": {
            "description": "Name of the uninitialized array.String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "Nimble Array056",
            "nullable": true,
            "type": "string"
          },
          "associated_links": {
            "$ref": "#/components/schemas/AssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type2/0041aca441479e44e5000000000000000000000001/uninitialized-arrays/c463732d3633346563330000000000000000000000",
            "nullable": true,
            "type": "string"
          },
          "count_of_fc_ports": {
            "description": "Number of Fibre Channel ports of the uninitialized array. Unsigned 64-bit integer.",
            "example": 1234,
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dedupe_configurable": {
            "description": "True if it is a hybrid array that is capable of updating data deduplication setting, False otherwise.Possible values : true, false.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Identifier for the uninitialized array. A 42 digit hexadecimal number.",
            "example": "c463732d3633346563330000000000000000000000",
            "nullable": true,
            "type": "string"
          },
          "model_str": {
            "description": "Model description of the uninitialized array.String of up to 64 alphanumeric characters, - and . and : are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "$ref": "#/components/schemas/ResourceUri"
          },
          "serial": {
            "description": "Serial Number of the uninitialized array. A 42 digit hexadecimal number.",
            "example": "AC-109084",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "version": {
            "description": "Version of the uninitialized array. String of up to 64 alphanumeric characters, - and . and :are allowed after first character.",
            "example": "myobject-5",
            "nullable": true,
            "type": "string"
          },
          "zconf_ipaddrs": {
            "description": "List of link local zero conf address of the uninitialized array. List of IP Addresses",
            "items": {
              "$ref": "#/components/schemas/NimbleZConfIP"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateHostGroupInput": {
        "nullable": true,
        "properties": {
          "hostProximityValues": {
            "description": "Change Proximity for list of hosts",
            "items": {
              "$ref": "#/components/schemas/HostProximityValue"
            },
            "nullable": true,
            "type": "array"
          },
          "hostsToCreate": {
            "description": "List of hosts to be replaced to the group",
            "items": {
              "$ref": "#/components/schemas/CreateHostInput"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of the host group",
            "example": "host-group1",
            "nullable": true,
            "type": "string"
          },
          "removedHosts": {
            "description": "List of host IDs to be removed from the group",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "updatedHosts": {
            "description": "List of host IDs to be added to the group",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateHostInput": {
        "nullable": true,
        "properties": {
          "initiatorsToCreate": {
            "description": "List of initiators to be created and added to this host",
            "items": {
              "$ref": "#/components/schemas/InitiatorInput"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of the host.",
            "example": "host1",
            "nullable": true,
            "type": "string"
          },
          "updatedInitiators": {
            "description": "List of existing initiator IDs to be replaced to the host",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateState": {
        "description": "Group update state.Possible values: 'invalid', 'normal', 'updating', 'timed_out', 'failed', 'paused'.",
        "example": "normal",
        "nullable": true,
        "type": "string"
      },
      "UpgradeDetails": {
        "description": "Array upgrade data",
        "nullable": true,
        "properties": {
          "messages": {
            "description": "List of error or info messages.",
            "items": {
              "$ref": "#/components/schemas/NimbleErrorWithArguments"
            },
            "nullable": true,
            "type": "array"
          },
          "stage": {
            "$ref": "#/components/schemas/UpgradeStage"
          },
          "state": {
            "$ref": "#/components/schemas/UpgradeState"
          },
          "type": {
            "$ref": "#/components/schemas/UpgradeType"
          }
        },
        "type": "object"
      },
      "UpgradeStage": {
        "description": "Array upgrade stage. Possible values: 'prepare', 'finish', 'none'.",
        "example": "finish",
        "nullable": true,
        "type": "string"
      },
      "UpgradeState": {
        "description": "Array upgrade state. Possible values: 'abort_failed', 'precheck', 'in_progress', 'paused', 'aborted', 'aborting', 'started', 'none', 'failed', 'awaiting_next_stage', 'complete'.",
        "example": "in_progress",
        "nullable": true,
        "type": "string"
      },
      "UpgradeType": {
        "description": "Array upgrade type. Possible values: 'offline', 'invalid'.",
        "example": "offline",
        "nullable": true,
        "type": "string"
      },
      "VolFamMigStatus": {
        "description": "Data migration status for a group of related volumes.",
        "nullable": true,
        "properties": {
          "array_list": {
            "description": "Data migration status for the arrays that store the volumes.",
            "items": {
              "$ref": "#/components/schemas/ArrayMigStatus"
            },
            "nullable": true,
            "type": "array"
          },
          "dest_pool_id": {
            "description": "ID of the destination pool, where the volumes are moved.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "dest_pool_name": {
            "description": "Name of the destination pool, where the volumes are moved.",
            "example": "Pool2",
            "nullable": true,
            "type": "string"
          },
          "move_bytes_migrated": {
            "description": "The bytes of volumes which have been moved.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "move_bytes_remaining": {
            "description": "The bytes of volumes which have not been moved.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "move_est_compl_time": {
            "description": "The estimated time of completion of a move.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "move_start_time": {
            "description": "The start time when the volumes was moved.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "root_vol_id": {
            "description": "ID of the root volume in the group.",
            "nullable": true,
            "type": "string"
          },
          "root_vol_name": {
            "description": "Name of the root volume in the group.",
            "example": "Root volume",
            "nullable": true,
            "type": "string"
          },
          "source_pool_id": {
            "description": "ID of the source pool, where the volumes originally locate.",
            "example": "2a0df0fe6f7dc7bb16000000000000000000004817",
            "nullable": true,
            "type": "string"
          },
          "source_pool_name": {
            "description": "Name of the source pool, where the volumes originally locate.",
            "example": "Pool1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "VolumeSetHostGroupList": {
        "properties": {
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "nullable": true,
            "type": "integer"
          },
          "hostGroupName": {
            "description": "Host group name",
            "example": "hostset1",
            "nullable": true,
            "type": "string"
          },
          "hosts": {
            "items": {
              "$ref": "#/components/schemas/VolumeSetHostProximityInfo"
            },
            "nullable": true,
            "type": "array"
          },
          "systemId": {
            "description": "Unique ID or serial number of the system.",
            "example": "7CE816P0SR",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "VolumeSetHostProximityInfo": {
        "properties": {
          "hostId": {
            "description": "Unique ID of host",
            "example": "0af26e4430948dd5c37bea1757107caf",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Host name",
            "example": "host1",
            "nullable": true,
            "type": "string"
          },
          "os": {
            "description": "OS of host",
            "example": "Windows Server",
            "nullable": true,
            "type": "string"
          },
          "proximity": {
            "$ref": "#/components/schemas/hostProximityDetail"
          }
        },
        "type": "object"
      },
      "VolumeSetProximitySettings": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/VolumeSetHostGroupList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "resourceURI": {
            "description": "Resource URI for volume set proximity details",
            "example": "/api/v1/storage-systems/device-type1/2FF70002AC018D94/applicationsets/9c3c4f29a82fd8d632ff379116fa0b8f/proximity-settings",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of host groups",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Witness": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WitnessFilterableFields"
          },
          {
            "$ref": "#/components/schemas/WitnessCommon"
          }
        ],
        "nullable": true,
        "type": "object"
      },
      "WitnessCommon": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "description": "Associated Links",
            "example": [
              {
                "link": "/v1/storage-systems/SGH000XWEE",
                "type": "systems"
              }
            ],
            "items": {
              "properties": {
                "resourceUri": {
                  "description": "Resource URI",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "customerId": {
            "description": "customerId",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "isRemoteArraySupportReplication": {
            "description": "Boolean value to indicate if remote array OS version supports replication",
            "example": true,
            "nullable": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of replication partner on which quorum witness is configured",
            "example": "IPSource",
            "nullable": true,
            "type": "string"
          },
          "quorumATFTimeout": {
            "description": "Automatic Transparent Failover quorum partner failure timeout.",
            "example": 30,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "quorumIpAddress": {
            "description": "Quorum IP Address associated with the partner. Set to 'NA' if not available.",
            "example": "10.10.10.11",
            "nullable": true,
            "type": "string"
          },
          "quorumSSLPort": {
            "description": "Quorum SSL port number.",
            "example": 8843,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "quorumStatus": {
            "description": "Quorum status of the partner. Possible values - Uninitialized, Initializing,Started, Not-started, Standby, Active, Failsafe, Failover or Restarting. Null if unset.",
            "example": "Initializing",
            "nullable": true,
            "type": "string"
          },
          "quorumStatusQual": {
            "description": "Quorum status qualifier. Set to 'NA' if not available.",
            "example": "NA",
            "nullable": true,
            "type": "string"
          },
          "quorumVersion": {
            "description": "Quorum version.",
            "example": "2.0",
            "nullable": true,
            "type": "string"
          },
          "remoteId": {
            "description": "Id of the remote replication partner on which quorum witness is configured",
            "example": "6a5ce66d4814a5e5156de428abb0a580",
            "nullable": true,
            "type": "string"
          },
          "remoteName": {
            "description": "Name of the remote replication partner on which quorum witness is configured",
            "example": "IPTarget",
            "nullable": true,
            "type": "string"
          },
          "remoteSystemId": {
            "description": "Unique ID or serial number of the remote system.",
            "example": "SGH000XWEF",
            "nullable": true,
            "type": "string"
          },
          "remoteSystemName": {
            "description": "Name of the remote system.",
            "example": "System102",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for quorum witness object",
            "example": "/api/v1/storage-systems/device-type1/SGH000XWEE/system-settings/quorum-witness/5a5ce66d4814a5e5156de428abb0a589",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "Unique ID or serial number of the system.",
            "example": "SGH000XWEE",
            "nullable": true,
            "type": "string"
          },
          "systemName": {
            "description": "Name of the source system.",
            "example": "s1511",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "quorum-witness",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WitnessDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WitnessFilterableFieldsWithoutFilter"
          },
          {
            "$ref": "#/components/schemas/WitnessCommon"
          }
        ],
        "nullable": true,
        "properties": {
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH000XWEE/system-settings/quorum-witness/5a5ce66d4814a5e5156de428abb0a589",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "Request URI for detailed quorum witness object",
            "example": "/api/v1/storage-systems/device-type1/SGH000XWEE/system-settings/quorum-witness/5a5ce66d4814a5e5156de428abb0a589",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WitnessFilterableFields": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Id of the replication partner on which quorum witness is configured. `Filter,Sort`",
            "example": "5a5ce66d4814a5e5156de428abb0a589",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WitnessFilterableFieldsWithoutFilter": {
        "nullable": true,
        "properties": {
          "id": {
            "description": "Id of the replication partner on which quorum witness is configured",
            "example": "5a5ce66d4814a5e5156de428abb0a589",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WitnessList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Witness"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "Request URI for quorum witness objects",
            "example": "/api/v1/storage-systems/device-type1/SGH000XWEE/system-settings/quorum-witness",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of witnesses.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "WitnessTestResponse": {
        "nullable": true,
        "properties": {
          "array_name": {
            "description": "Name of an array.",
            "example": "Nimble Array056",
            "nullable": true,
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/NimbleArrayRole"
          },
          "witness_connectivity_message": {
            "description": "Reachability message of the witness.",
            "example": "example reachability message",
            "nullable": true,
            "type": "string"
          },
          "witness_connectivity_state": {
            "description": "Reachability status of the witness.",
            "example": "reachable",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ZConfIPaddrs": {
        "nullable": true,
        "properties": {
          "ip_addr": {
            "description": "IP address",
            "example": "128.0.0.1",
            "type": "string"
          }
        },
        "type": "object"
      },
      "alertContactInput": {
        "properties": {
          "company": {
            "description": "Company",
            "example": "HPE",
            "nullable": true,
            "type": "string"
          },
          "companyCode": {
            "description": "Company code",
            "example": "HPE",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Country",
            "example": "US",
            "nullable": true,
            "type": "string"
          },
          "fax": {
            "description": "Fax number",
            "example": "fax_id",
            "nullable": true,
            "type": "string"
          },
          "firstName": {
            "description": "First name",
            "example": "john",
            "nullable": true,
            "type": "string"
          },
          "includeSvcAlerts": {
            "description": "Email sent to contact shall include service alert",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "lastName": {
            "description": "Last name",
            "example": "kevin",
            "nullable": true,
            "type": "string"
          },
          "notificationSeverities": {
            "description": "Severities of notifications the contact will be notificated. An array of number: 0 - Fatal, 1 - Critical, 2 - Major, 3 - Minor, 4 - Degraded, 5 - Info, 6 - Debug",
            "example": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "items": {
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "preferredLanguage": {
            "description": "Preferred language when being contacted or emailed",
            "example": "en",
            "nullable": true,
            "type": "string"
          },
          "primaryEmail": {
            "description": "Primary email address",
            "example": "kevin.john@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "primaryPhone": {
            "description": "Primary phone",
            "example": "98783456",
            "nullable": true,
            "type": "string"
          },
          "receiveEmail": {
            "description": "Contact will receive email notifications. This is a deprecated field and will always pass true to be inline with UI.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "receiveGrouped": {
            "description": "Contact will receive grouped low urgency email notifications",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "secondaryEmail": {
            "description": "Secondary email address",
            "example": "winny.pooh@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "secondaryPhone": {
            "description": "Secondary phone",
            "example": "23456789",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "alertContacts": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/alertContactsAssociatedLinks"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AlertContactsDetails"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for alert contact details",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/alert-contacts",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemId of the storage system",
            "example": "4UW0001540",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of contacts",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "alertContactsAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/api/v1/storage-systems/device-type1/{id}",
            "type": "systems"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "allocated": {
        "nullable": true,
        "properties": {
          "cpgs": {
            "example": 0,
            "nullable": true,
            "type": "number"
          },
          "cpgsFree": {
            "example": 0,
            "nullable": true,
            "type": "number"
          },
          "cpgsPrivate": {
            "example": 0,
            "nullable": true,
            "type": "number"
          },
          "cpgsPrivateBase": {
            "$ref": "#/components/schemas/private"
          },
          "cpgsPrivateSnap": {
            "$ref": "#/components/schemas/private"
          },
          "cpgsShared": {
            "example": 0,
            "nullable": true,
            "type": "number"
          },
          "legacyVolumes": {
            "example": 0,
            "nullable": true,
            "type": "number"
          },
          "legacyVolumesSnap": {
            "example": 0,
            "nullable": true,
            "type": "number"
          },
          "legacyVolumesUser": {
            "example": 0,
            "nullable": true,
            "type": "number"
          },
          "system": {
            "example": 3782656,
            "nullable": true,
            "type": "number"
          },
          "systemAdmin": {
            "example": 0,
            "nullable": true,
            "type": "number"
          },
          "systemInternal": {
            "example": 122880,
            "nullable": true,
            "type": "number"
          },
          "systemSpare": {
            "example": 3659776,
            "nullable": true,
            "type": "number"
          },
          "systemSpareUnused": {
            "example": 3659776,
            "nullable": true,
            "type": "number"
          },
          "systemSpareUsed": {
            "example": 0,
            "nullable": true,
            "type": "number"
          },
          "total": {
            "description": "Total allocated percentage",
            "example": 7152640,
            "nullable": true,
            "type": "number"
          },
          "unmapped": {
            "example": 0,
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "allocation": {
        "description": "Device allocation settings such as RAID and device type information",
        "nullable": true,
        "properties": {
          "HA": {
            "description": "Requested High Availability setting",
            "nullable": true,
            "properties": {
              "default": {
                "nullable": true,
                "type": "string"
              },
              "key": {
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "RAIDType": {
            "description": "RAID type",
            "example": "RAID_SIX",
            "nullable": true,
            "type": "string"
          },
          "chunkletPosPref": {
            "description": "Chunklets position",
            "example": "Position1",
            "nullable": true,
            "type": "string"
          },
          "deviceSpeed": {
            "description": "Device speed",
            "nullable": true,
            "properties": {
              "default": {
                "nullable": true,
                "type": "string"
              },
              "key": {
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "deviceType": {
            "description": "Device type",
            "example": "DEVICE_TYPE_SSD",
            "nullable": true,
            "type": "string"
          },
          "diskFilter": {
            "description": "Disk filter",
            "example": "test",
            "nullable": true,
            "type": "string"
          },
          "requestedHA": {
            "description": "Requested High Availability setting",
            "nullable": true,
            "properties": {
              "default": {
                "nullable": true,
                "type": "string"
              },
              "key": {
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "setSize": {
            "description": "Set size",
            "example": "6 data, 2 parity",
            "nullable": true,
            "type": "string"
          },
          "stepSize": {
            "description": "Step size",
            "example": -1,
            "format": "int64",
            "type": "number"
          }
        },
        "type": "object"
      },
      "applicationSummary": {
        "description": "Application summary",
        "nullable": true,
        "properties": {
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/applications"
            },
            "nullable": true,
            "type": "array"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/v1/storage-systems/device-type1/SGH014XGSP/application-summary",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of node Cards.",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "applications": {
        "nullable": true,
        "properties": {
          "applicationSetType": {
            "description": "Name of the application",
            "example": "Microsoft Exchange",
            "type": "string"
          },
          "totalSizeMiB": {
            "description": "The total volume size in MiB of the application",
            "example": 307200,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "totalUsedSizeMiB": {
            "description": "The total used size in Mib of the application",
            "example": 7200,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "volumesCount": {
            "description": "The number of volumes in an application",
            "example": 5,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "appsetPost": {
        "nullable": true,
        "properties": {
          "comment": {
            "description": "Comment if any",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "expireSecs": {
            "description": "Expiration time in seconds",
            "example": 100,
            "nullable": true,
            "type": "integer"
          },
          "readOnly": {
            "description": "Read only or Read/Write",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "retainSecs": {
            "description": "Reatain time in seconds",
            "example": 86400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotName": {
            "description": "Name for snapshot",
            "example": "snapshot_oracle_1611807822",
            "nullable": true,
            "type": "string"
          },
          "vvNamePattern": {
            "$ref": "#/components/schemas/namePattern"
          }
        },
        "required": [
          "vvNamePattern"
        ],
        "type": "object"
      },
      "associatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/contollers",
            "type": "controllers"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/shelves",
            "type": "shelves"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/disks",
            "type": "disks"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/storage-ports",
            "type": "storage-ports"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/storage-devices-settings",
            "type": "storage-devices-settings"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/storage-pools",
            "type": "storage-pools"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/volume-sets",
            "type": "volume-sets"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/host-groups",
            "type": "host-groups"
          }
        ],
        "items": {
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "calendar": {
        "description": "",
        "nullable": true,
        "properties": {
          "ms": {
            "nullable": true,
            "type": "integer"
          },
          "tz": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "calendarTime": {
        "description": "Time zone and epoch time",
        "nullable": true,
        "properties": {
          "ms": {
            "description": "Epoch time in milliseconds",
            "example": 1591601529000,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "tz": {
            "description": "Time zone name",
            "example": "Local",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "capacityByTier": {
        "nullable": true,
        "properties": {
          "fcFree": {
            "description": "fc free capacity",
            "example": 0,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "fcUsed": {
            "description": "fc used capacity",
            "example": 0,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "nlFree": {
            "description": "nl free capacity",
            "example": 58368,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "nlUsed": {
            "description": "nl used capacity",
            "example": 17408,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "ssdFree": {
            "description": "ssd free capacity",
            "example": 0,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "ssdUsed": {
            "description": "ssd used capacity",
            "example": 0,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "totalUsed": {
            "description": "usable capacity",
            "example": 17408,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "usableCapacity": {
            "description": "usable capacity",
            "example": 58368,
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "capacityHistory": {
        "description": "capacity performance trends for given granularity",
        "nullable": true,
        "properties": {
          "capacityData": {
            "nullable": true,
            "properties": {
              "customerId": {
                "description": "customerId",
                "example": "string",
                "nullable": true,
                "type": "string"
              },
              "items": {
                "items": {
                  "$ref": "#/components/schemas/capacitySeriesData"
                },
                "nullable": true,
                "type": "array"
              },
              "total": {
                "description": "count of series data",
                "example": 1,
                "nullable": true,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "endTime": {
            "description": "end time of the capacity history",
            "example": 1625209133,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/v1/storage-systems/device-type1/SGH014XGSP/capacity-history",
            "nullable": true,
            "type": "string"
          },
          "startTime": {
            "description": "start time of the capacity history",
            "example": 1625122733,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "capacityInfoSolo": {
        "description": "Device capacity details",
        "nullable": true,
        "properties": {
          "capacitySummary": {
            "$ref": "#/components/schemas/capacitySummary"
          }
        },
        "type": "object"
      },
      "capacitySeriesData": {
        "nullable": true,
        "properties": {
          "timestampMs": {
            "description": "epoch timestamp",
            "example": 1605063600,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usageMiB": {
            "description": "capacity usage value at particular timestamp",
            "example": 4,
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "capacitySummary": {
        "nullable": true,
        "properties": {
          "free": {
            "description": "Total free capacity",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "total": {
            "description": "Total used capacity",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "cappedObjData": {
        "description": "QoS policy cap details",
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/objData"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "total": {
            "description": "total number of cap data",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "cardType": {
        "description": "Type of the PCI card this port is on",
        "nullable": true,
        "properties": {
          "default": {
            "nullable": true,
            "type": "string"
          },
          "key": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "certAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/api/v1/storage-systems/device-type1/7CE809P009",
            "type": "systems"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "certMgmt": {
        "description": "Certificate management mode of the VASA Provider",
        "nullable": true,
        "properties": {
          "default": {
            "description": "Text in the default language",
            "example": "server",
            "nullable": true,
            "type": "string"
          },
          "key": {
            "description": "Key of the message",
            "example": "VASA_CERTMGMT_MODE-1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "certSubjectAltName": {
        "description": "Subject Alternative Name for the certificate.",
        "nullable": false,
        "properties": {
          "DNS": {
            "description": "DNS for Subject Alternative Name for the certificate",
            "example": "7CE815P2BH",
            "type": "string"
          },
          "IP": {
            "description": "IP Address for Subject Alternative Name for the certificate",
            "example": "15.213.65.129",
            "type": "string"
          },
          "email": {
            "description": "Email for Subject Alternative Name for the certificate",
            "example": "abc@hpe.com",
            "type": "string"
          }
        },
        "type": "object"
      },
      "certificateDetails": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/certAssociatedLinks"
          },
          "certType": {
            "description": "Type of array certificate",
            "example": "cert",
            "nullable": true,
            "type": "string"
          },
          "commonname": {
            "description": "Commonname of the resource",
            "example": "HPE_3PAR C630-4UW0002940\"",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object ",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "type": "string"
          },
          "displayname": {
            "description": "Displayname of the resource",
            "example": "Certificate HPE_3PAR C630-4UW0002940",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain of the resource",
            "example": "hpe.com",
            "nullable": true,
            "type": "string"
          },
          "enddate": {
            "description": "End date of the array certificate",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "time in millisecond",
                "example": 1611599192000,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "timezone",
                "example": "Local",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "fingerprint": {
            "description": "Fingerprint of the resource",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627533096726,
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource",
            "example": "99691e493067b2b2acf1774fc0ccc011",
            "nullable": true,
            "type": "string"
          },
          "issuer": {
            "description": "Issuer of the resource",
            "example": "CN=HPE_3PAR C630-4UW0002940",
            "nullable": true,
            "type": "string"
          },
          "pem": {
            "description": "array certificate pem",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for detailed certificate object",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/certificates/99691e493067b2b2acf1774fc0ccc011",
            "nullable": true,
            "type": "string"
          },
          "serial": {
            "description": "Serial of the resource",
            "example": "1",
            "nullable": true,
            "type": "string"
          },
          "service": {
            "description": "Service name of the resource",
            "example": "unified-server",
            "nullable": true,
            "type": "string"
          },
          "signaturetype": {
            "description": "Signature type of the resource",
            "example": "self-signed",
            "nullable": true,
            "type": "string"
          },
          "startdate": {
            "description": "Start date of the array certificate",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "time in millisecond",
                "example": 1591789652000,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "timezone",
                "example": "Local",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "subject": {
            "description": "Subject of the resource",
            "example": "CN=HPE_3PAR C630-4UW0002940",
            "nullable": true,
            "type": "string"
          },
          "subjectaltname": {
            "description": "Subjectaltname of the resource",
            "example": "DNS:HPE_3PAR C630-4UW0002940",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemID of the array",
            "example": "7CE809P009",
            "type": "string"
          },
          "text": {
            "description": "array certificate text",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "example": "certificates",
            "type": "string"
          },
          "uri": {
            "description": "URI of the resource",
            "example": "/api/v3/certificates/99691e493067b2b2acf1774fc0ccc011",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "certificatesList": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/certAssociatedLinks"
          },
          "certType": {
            "description": "Type of array certificate",
            "example": "cert",
            "nullable": true,
            "type": "string"
          },
          "commonname": {
            "description": "Commonname of the resource",
            "example": "HPE_3PAR C630-4UW0002940",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object ",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "type": "string"
          },
          "displayname": {
            "description": "Displayname of the resource",
            "example": "Certificate HPE_3PAR C630-4UW0002940",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain of the resource",
            "example": "hpe.com",
            "nullable": true,
            "type": "string"
          },
          "enddate": {
            "description": "End date of the array certificate",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "time in millisecond",
                "example": 1611599192000,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "timezone",
                "example": "Local",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "fingerprint": {
            "description": "Fingerprint of the resource",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627533096726,
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource",
            "example": "99691e493067b2b2acf1774fc0ccc011",
            "nullable": true,
            "type": "string"
          },
          "issuer": {
            "description": "Issuer of the resource",
            "example": "CN=HPE_3PAR C630-4UW0002940",
            "nullable": true,
            "type": "string"
          },
          "pem": {
            "description": "array certificate pem",
            "nullable": true,
            "type": "string"
          },
          "serial": {
            "description": "Serial of the resource",
            "example": "1",
            "nullable": true,
            "type": "string"
          },
          "service": {
            "description": "Service name of the resource",
            "example": "unified-server",
            "nullable": true,
            "type": "string"
          },
          "signaturetype": {
            "description": "Signature type of the resource",
            "example": "self-signed",
            "nullable": true,
            "type": "string"
          },
          "startdate": {
            "description": "Start date of the array certificate",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "time in millisecond",
                "example": 1591789652000,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "timezone",
                "example": "Local",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "subject": {
            "description": "Subject of the resource",
            "example": "CN=HPE_3PAR C630-4UW0002940",
            "nullable": true,
            "type": "string"
          },
          "subjectaltname": {
            "description": "Subjectaltname of the resource",
            "example": "DNS:HPE_3PAR C630-4UW0002940",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemID of the array",
            "example": "7CE809P009",
            "type": "string"
          },
          "text": {
            "description": "array certificate text",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "example": "certificates",
            "type": "string"
          },
          "uri": {
            "description": "URI of the resource",
            "example": "/api/v3/certificates/99691e493067b2b2acf1774fc0ccc011",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "certificatesSummaryList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/certificatesList"
            },
            "type": "array"
          },
          "pageLimit": {
            "description": "Page Limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "Page Offset",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed certificates object",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/certificates",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of certificates",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "childAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF",
            "type": "systems"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5",
            "type": "nodes"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "cim": {
        "description": "CIM service details for a device",
        "nullable": true,
        "properties": {
          "cimPolicy": {
            "description": "Specifies the CIM Policy of CIM server",
            "example": "replica_entity,one_hwid_per_view,use_pegasus_interop_namespace,no_tls_strict",
            "nullable": true,
            "type": "string"
          },
          "cimState": {
            "description": "Specifies whether CIM state is active or inactive",
            "example": "Active",
            "nullable": true,
            "type": "string"
          },
          "cimVersion": {
            "description": "CIM version information",
            "example": "V1",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1qw",
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627533171477,
            "format": "int64",
            "type": "integer"
          },
          "httpPort": {
            "description": "HTTP port number",
            "example": 5988,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "httpState": {
            "description": "Specifies whether HTTPState is enabled or disabled for CIM Server",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "httpsPort": {
            "description": "Specifies HTTPS port number",
            "example": 5989,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "httpsState": {
            "description": "Specifies whether HTTPS state is enabled or disabled for cim server",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "Unique Identifier of the resource",
            "example": "012e5dce5c029c4c56bdda9b3e1eaaad",
            "nullable": true,
            "type": "string"
          },
          "pgVersion": {
            "description": "Information about PGVersion of CIM server",
            "example": "2.14.1",
            "nullable": true,
            "type": "string"
          },
          "serviceState": {
            "description": "Specifies whether service state is enabled or disabled",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "slpPort": {
            "description": "SLPport specification",
            "example": 427,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "slpState": {
            "description": "whether slpstate is enabled or disabled",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "systemId": {
            "description": "SystemId of the storage system",
            "example": "4UW0001540",
            "nullable": true,
            "type": "string"
          },
          "systemWWN": {
            "description": "WWN of the array",
            "example": "2FF70002AC018D94",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "example": "cim-settings",
            "type": "string"
          }
        },
        "type": "object"
      },
      "cimDetails": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/nwAssociatedLinks"
          },
          "cim": {
            "$ref": "#/components/schemas/cim"
          },
          "systemId": {
            "description": "SystemId of the storage system",
            "example": "4UW0001540",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "clonePriority": {
        "description": "Priority of the task for promoting/resynchronizing the clone volume. Defaults to MEDIUM.",
        "enum": [
          "PRIORITYTYPE_HIGH",
          "PRIORITYTYPE_MED",
          "PRIORITYTYPE_LOW"
        ],
        "example": "PRIORITYTYPE_MED",
        "nullable": true,
        "type": "string"
      },
      "collectSupportDataArrayInput": {
        "description": "Trigger and collect support data collection on the system",
        "items": {
          "$ref": "#/components/schemas/collectSupportDataInput"
        },
        "nullable": true,
        "type": "array"
      },
      "collectSupportDataInput": {
        "description": "Trigger and collect support data collection on the system",
        "nullable": true,
        "properties": {
          "action": {
            "description": "Type of a collection.",
            "enum": [
              "PERFCOLLECTION",
              "INSPLORECOLLECTION",
              "APPDUMPCOLLECTION",
              "CRASHDUMPCOLLECTION",
              "SPLORCOLLECTION",
              "WEEKLYCOLLECTION"
            ],
            "nullable": true,
            "type": "string"
          },
          "options": {
            "description": "Options needed for the collection. If options are not specified, default values will be used. \n\nINSPLORECOLLECTION can have any or all of \"clidata\", \"nodedata\" and \"tocdata\" \n\n \u0008 Default options - [\"clidata\",\"nodedata\",\"tocdata\"] \n\nPERFCOLLECTION should have 3 options,\n\n * Iteration - a number between 1 to 1000 as a string,\n\n * Interval - a number in seconds between 1 to 172800 as a string\n\n * Type of collection -default or -comprehensive\n\n\u0008 Default options - [\"60\",\"10\",\"-default\"]\n\nOther collection types won't require any options, if provided will be ignored.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "collectionStatus": {
        "nullable": true,
        "properties": {
          "configStatus": {
            "nullable": true,
            "properties": {
              "status": {
                "$ref": "#/components/schemas/hstatus"
              }
            },
            "type": "object"
          },
          "metricStatus": {
            "nullable": true,
            "properties": {
              "status": {
                "$ref": "#/components/schemas/hstatus"
              }
            },
            "type": "object"
          },
          "overAllStatus": {
            "$ref": "#/components/schemas/hstatus"
          }
        },
        "type": "object"
      },
      "connectedDevices": {
        "items": {
          "nullable": true,
          "properties": {
            "name": {
              "description": "Name of the device",
              "nullable": true,
              "type": "string"
            },
            "position": {
              "description": "Position of the device",
              "format": "int32",
              "nullable": true,
              "type": "integer"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "connectionStatus": {
        "description": "The connection state of System",
        "enum": [
          "CONNECTED",
          "DISCONNECTED",
          "UNKNOWN"
        ],
        "example": "CONNECTED",
        "type": "string"
      },
      "cpgAlert": {
        "description": "Information for posted alerts",
        "nullable": true,
        "properties": {
          "fail": {
            "description": "Alert when there is a growth failure for admin/data space",
            "example": "--",
            "type": "string"
          },
          "limit": {
            "description": "Alert corresponding to limit for admin/data space",
            "example": "--",
            "type": "string"
          },
          "warn": {
            "description": "Alert corresponding to warning for admin/data space",
            "example": "--",
            "type": "string"
          },
          "warnPercent": {
            "description": "Alert corresponding to warning percentage for admin/data space",
            "example": 2,
            "format": "Uint32",
            "type": "number"
          }
        },
        "type": "object"
      },
      "cpgGrow": {
        "description": "CPG grow information",
        "nullable": true,
        "properties": {
          "args": {
            "description": "The admin/data LD creation arguments used by the CPG when growing new LDs",
            "example": "-p -devtype SSD",
            "type": "string"
          },
          "limitMiB": {
            "description": "Limit size in MiB beyond which the admin/data space will not grow",
            "example": 10,
            "format": "Uint64",
            "type": "number"
          },
          "sizeMiB": {
            "description": "Amount of admin/data LD storage in MiB created on each auto-grow",
            "example": 12,
            "format": "Uint64",
            "type": "number"
          },
          "warnMiB": {
            "description": "Size in MiB of the admin/data space at which a warning alert is generated",
            "example": 10,
            "format": "Uint64",
            "type": "number"
          }
        },
        "type": "object"
      },
      "createAppSetInput": {
        "description": "Request body for creating Application Sets",
        "nullable": true,
        "properties": {
          "appSetBusinessUnit": {
            "description": "App set business unit",
            "example": "HPE",
            "nullable": true,
            "type": "string"
          },
          "appSetComments": {
            "description": "App set comments",
            "example": "Edit appset",
            "nullable": true,
            "type": "string"
          },
          "appSetImportance": {
            "description": "App set importance",
            "example": "High",
            "nullable": true,
            "type": "string"
          },
          "appSetName": {
            "description": "App set name",
            "example": "Appset_134",
            "nullable": false,
            "type": "string"
          },
          "appSetType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/vsAppSetType"
              },
              {
                "$ref": "#/components/schemas/volumeSetApplicationType"
              }
            ]
          },
          "customAppType": {
            "description": "App set name for Custom workloads when appSetType=CUSTOM",
            "example": "CustomWorkload_123",
            "nullable": true,
            "type": "string"
          },
          "members": {
            "description": "volumes list",
            "example": [
              "vol1",
              "vol2"
            ],
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "appSetName",
          "appSetType"
        ],
        "type": "object"
      },
      "createCloneSnapshotInput": {
        "description": "Request body for creating physical copy of a snapshot.",
        "nullable": false,
        "properties": {
          "autoLun": {
            "description": "Secify to use auto lun number.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "destinationCpg": {
            "description": "Name of the User CPG",
            "example": "SSD_r6",
            "nullable": true,
            "type": "string"
          },
          "destinationVolume": {
            "description": "Name of the destination volume.",
            "example": "destinationVol1",
            "nullable": false,
            "type": "string"
          },
          "hostGroupId": {
            "description": "Unique identifier of host group.",
            "example": "fd3244ef7f1ab8bd16500c7a41bdf8f8",
            "nullable": true,
            "type": "string"
          },
          "lun": {
            "description": "LUN of volume.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "priority": {
            "description": "Priority of the task for clone of a snashot. Defualts to MEDIUM.",
            "enum": [
              "PRIORITYTYPE_HIGH",
              "PRIORITYTYPE_MED",
              "PRIORITYTYPE_LOW"
            ],
            "example": "PRIORITYTYPE_MED",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "destinationVolume"
        ],
        "type": "object"
      },
      "createCloneVolumeInput": {
        "description": "Request body for creating physical copy of a volume.",
        "nullable": false,
        "properties": {
          "destinationVolume": {
            "description": "Name of the destination volume.",
            "example": "destinationVol1",
            "nullable": false,
            "type": "string"
          },
          "offlineClone": {
            "description": "Offline clone of a volume.",
            "items": {
              "$ref": "#/components/schemas/offlineClone"
            },
            "nullable": true
          },
          "online": {
            "description": "Create an online or offline clone of a volume.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "onlineClone": {
            "description": "Online clone of a volume.",
            "items": {
              "$ref": "#/components/schemas/onlineClone"
            },
            "nullable": true
          },
          "priority": {
            "description": "Priority of the task for clone volume. Defualts to MEDIUM.",
            "enum": [
              "PRIORITYTYPE_HIGH",
              "PRIORITYTYPE_MED",
              "PRIORITYTYPE_LOW"
            ],
            "example": "PRIORITYTYPE_MED",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "destinationVolume"
        ],
        "type": "object"
      },
      "createVolume": {
        "description": "Create a new volume for clone.",
        "nullable": true,
        "properties": {
          "destinationCpg": {
            "description": "Name of the User CPG",
            "example": "SSD_r6",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "createVolumeInput": {
        "description": "Request body for creating volumes",
        "nullable": true,
        "properties": {
          "comments": {
            "description": "test",
            "example": "test",
            "nullable": true,
            "type": "string"
          },
          "count": {
            "description": "Volumes count",
            "example": 2,
            "nullable": true,
            "type": "integer"
          },
          "dataReduction": {
            "description": "Data Reduction",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the volume",
            "example": "<resource_name>",
            "nullable": false,
            "type": "string"
          },
          "sizeMib": {
            "description": "Size in MB",
            "example": 16384,
            "nullable": false,
            "type": "integer"
          },
          "snapCpg": {
            "description": "Snap CPG",
            "example": "SSD_r6",
            "nullable": true,
            "type": "string"
          },
          "snapshotAllocWarning": {
            "description": "Snapshot Alloc Warning",
            "example": 5,
            "nullable": true,
            "type": "integer"
          },
          "userAllocWarning": {
            "description": "User Alloc Warning",
            "example": 5,
            "nullable": true,
            "type": "integer"
          },
          "userCpg": {
            "description": "User CPG",
            "example": "SSD_r6",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "name",
          "userCpg",
          "sizeMib"
        ],
        "type": "object"
      },
      "dc4data": {
        "nullable": true,
        "properties": {
          "cpuStatus": {
            "nullable": true,
            "type": "string"
          },
          "fwStatus": {
            "nullable": true,
            "type": "string"
          },
          "fwVersion": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "dc4dataSingle": {
        "nullable": true,
        "properties": {
          "hplLED": {
            "$ref": "#/components/schemas/HPLLEDSINGLE"
          },
          "left": {
            "nullable": true,
            "type": "boolean"
          },
          "right": {
            "nullable": true,
            "type": "boolean"
          },
          "systemLED": {
            "$ref": "#/components/schemas/SYSTEMLEDSINGLE"
          }
        },
        "type": "object"
      },
      "descriptors": {
        "description": "System descriptors",
        "nullable": true,
        "properties": {
          "comment": {
            "description": "CommeUser-specified comment for the system",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "contact": {
            "description": "User-specified contact for the system",
            "example": "First Last, 12345678, prabhakar.jasiwal@hpe.com",
            "nullable": true,
            "type": "string"
          },
          "location": {
            "description": "User-specified location of the system",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "owner": {
            "description": "User-specified owner for the system",
            "example": "",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "details": {
        "items": {
          "properties": {
            "args": {
              "items": {
                "description": "arguments",
                "properties": {
                  "ms": {
                    "description": "Epoch time in milliseconds",
                    "example": 1599631885,
                    "format": "Uint64",
                    "nullable": true,
                    "type": "integer"
                  },
                  "tz": {
                    "description": "Time zone name",
                    "example": "Asia/Kolkata",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "nullable": true,
              "type": "array"
            },
            "default": {
              "description": "Text in the default language",
              "nullable": true,
              "type": "string"
            },
            "key": {
              "description": "Key of the message",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "deviceSpeed": {
        "description": "device speed",
        "nullable": true,
        "properties": {
          "text": {
            "nullable": true,
            "type": "string"
          },
          "value": {
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "deviceSpeedSingle": {
        "description": "device speed",
        "nullable": true,
        "properties": {
          "text": {
            "nullable": true,
            "type": "string"
          },
          "value": {
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "deviceTypes": {
        "properties": {
          "description": {
            "description": "Description of the device family",
            "example": "HPE deviceType1 Storage",
            "nullable": true,
            "type": "string"
          },
          "deviceType": {
            "description": "Storage Device type",
            "example": "deviceType1",
            "type": "string"
          }
        },
        "type": "object"
      },
      "diskAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/v1/storage-systems/device-type1/7CE751P312",
            "type": "systems"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/7CE751P312/enclosures/0",
            "type": "enclosures"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "diskDetails": {
        "properties": {
          "admitTime": {
            "$ref": "#/components/schemas/AdmitTime"
          },
          "associatedLinks": {
            "$ref": "#/components/schemas/diskAssociatedLinks"
          },
          "capacity": {
            "$ref": "#/components/schemas/DiskCapacity"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/disks/d4b13e70924d29afdb77d932f7563ea6",
            "nullable": true,
            "type": "string"
          },
          "consumableSizeMiB": {
            "description": "consumable size of disk in MiB",
            "example": 1829888,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "devType": {
            "description": "Type of the disk",
            "example": "DEVTYPE_SSD",
            "nullable": true,
            "type": "string"
          },
          "diskId": {
            "description": "id of the disk",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "Drive 0.SIDE_NONE.2.0",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "fwStatus": {
            "description": "firmware status",
            "example": "--",
            "nullable": true,
            "type": "string"
          },
          "fwVersion": {
            "description": "firmware version",
            "example": "3P00",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource",
            "example": "d4b13e70924d29afdb77d932f7563ea6",
            "nullable": true,
            "type": "string"
          },
          "lifeLeftPCT": {
            "description": "Life Left Percentage",
            "example": 100,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "loopA0": {
            "$ref": "#/components/schemas/DiskLoop"
          },
          "loopA1": {
            "$ref": "#/components/schemas/DiskLoop"
          },
          "loopB0": {
            "$ref": "#/components/schemas/DiskLoop"
          },
          "loopB1": {
            "$ref": "#/components/schemas/DiskLoop"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "mediaType": {
            "description": "Media Type of the disk",
            "example": "MLC",
            "nullable": true,
            "type": "string"
          },
          "mfgCapacityGB": {
            "description": "manufacturing capacity of disk in GB",
            "example": 1920,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "positionLast": {
            "$ref": "#/components/schemas/DiskPosition"
          },
          "positionNow": {
            "$ref": "#/components/schemas/DiskPositionNow"
          },
          "protocol": {
            "description": "protocol over the disk",
            "example": "SAS",
            "nullable": true,
            "type": "string"
          },
          "rawSizeMiB": {
            "description": "raw Size of disk in GB",
            "example": 1831420,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "readErrors": {
            "$ref": "#/components/schemas/ErrorCount"
          },
          "requestUri": {
            "description": "requestUri for detailed disk object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/disks/d4b13e70924d29afdb77d932f7563ea6",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed disk object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/enclosures/0/disks/d4b13e70924d29afdb77d932f7563ea6",
            "nullable": true,
            "type": "string"
          },
          "sedStatus": {
            "description": "SED Status",
            "example": "FIPS Capable",
            "nullable": true,
            "type": "string"
          },
          "speed": {
            "description": "speed",
            "example": -1,
            "nullable": true,
            "type": "integer"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemId / SerialNumber of the array",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "tempMax": {
            "description": "Max Temp of the disk",
            "example": 35,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tempMin": {
            "description": "Min Temp of the disk",
            "example": 31,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tempNow": {
            "description": "Current Temp of the disk, will be updated at most once in an hour",
            "example": 34,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "writeErrors": {
            "$ref": "#/components/schemas/ErrorCount"
          },
          "wwn": {
            "description": "unique WWN of the disk",
            "example": "5002538B10249591",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "diskPortPosition": {
        "description": "Port Position",
        "nullable": true,
        "properties": {
          "node": {
            "description": "node ID",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "port": {
            "description": "port ID",
            "example": 2,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "slot": {
            "description": "slot ID",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "diskPosition": {
        "nullable": true,
        "properties": {
          "cage": {
            "nullable": true,
            "type": "integer"
          },
          "disk": {
            "nullable": true,
            "type": "integer"
          },
          "side": {
            "enum": [
              "SIDE_NONE",
              "SIDE_LEFT",
              "SIDE_RIGHT",
              null
            ],
            "nullable": true,
            "type": "string"
          },
          "sled": {
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "disksList": {
        "properties": {
          "admitTime": {
            "$ref": "#/components/schemas/AdmitTime"
          },
          "capacity": {
            "$ref": "#/components/schemas/filterDiskCapacity"
          },
          "consumableSizeMiB": {
            "description": "consumable size of disk in MiB",
            "example": 1829888,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "devType": {
            "description": "Type of the disk.",
            "example": "DEVTYPE_SSD",
            "nullable": true,
            "type": "string"
          },
          "diskId": {
            "description": "id of the disk",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "Drive 0.SIDE_NONE.2.0",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "fwStatus": {
            "description": "firmware status",
            "example": "--",
            "nullable": true,
            "type": "string"
          },
          "fwVersion": {
            "description": "firmware version",
            "example": "3P00",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "d4b13e70924d29afdb77d932f7563ea6",
            "nullable": true,
            "type": "string"
          },
          "lifeLeftPCT": {
            "description": "Life Left Percentage",
            "example": 100,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "loopA0": {
            "$ref": "#/components/schemas/DiskLoop"
          },
          "loopA1": {
            "$ref": "#/components/schemas/DiskLoop"
          },
          "loopB0": {
            "$ref": "#/components/schemas/DiskLoop"
          },
          "loopB1": {
            "$ref": "#/components/schemas/DiskLoop"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "mediaType": {
            "description": "Media Type of the disk",
            "example": "MLC",
            "nullable": true,
            "type": "string"
          },
          "mfgCapacityGB": {
            "description": "manufacturing capacity of disk in GB",
            "example": 1920,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "positionLast": {
            "$ref": "#/components/schemas/DiskPosition"
          },
          "positionNow": {
            "$ref": "#/components/schemas/filterDiskPositionNow"
          },
          "protocol": {
            "description": "protocol over the disk",
            "example": "SAS",
            "nullable": true,
            "type": "string"
          },
          "rawSizeMiB": {
            "description": "raw Size of disk in GB",
            "example": 1831420,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "readErrors": {
            "$ref": "#/components/schemas/ErrorCount"
          },
          "resourceUri": {
            "description": "resourceUri for detailed disk object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/enclosures/0/disks/d4b13e70924d29afdb77d932f7563ea6",
            "nullable": true,
            "type": "string"
          },
          "sedStatus": {
            "description": "SED Status",
            "example": "FIPS Capable",
            "nullable": true,
            "type": "string"
          },
          "speed": {
            "description": "speed",
            "example": -1,
            "nullable": true,
            "type": "integer"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemId/SerialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "tempMax": {
            "description": "Max Temp of the disk",
            "example": 35,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tempMin": {
            "description": "Min Temp of the disk",
            "example": 31,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tempNow": {
            "description": "Current Temp of the disk, will be updated at most once in an hour",
            "example": 34,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "writeErrors": {
            "$ref": "#/components/schemas/ErrorCount"
          },
          "wwn": {
            "description": "unique WWN of the disk. `Filter, Sort`",
            "example": "5002538B10249591",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "disksSummaryList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/disksList"
            },
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed disks object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/enclosures/0/disks",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of disks",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ecAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF",
            "type": "systems"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f",
            "type": "enclosures"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "ecDc4data": {
        "nullable": true,
        "properties": {
          "hplLED": {
            "$ref": "#/components/schemas/LED"
          },
          "splitLED": {
            "$ref": "#/components/schemas/LED"
          },
          "systemLED": {
            "$ref": "#/components/schemas/LED"
          }
        },
        "type": "object"
      },
      "ecDcsdata": {
        "nullable": true,
        "properties": {
          "fwStatus": {
            "nullable": true,
            "type": "string"
          },
          "fwVersion": {
            "nullable": true,
            "type": "string"
          },
          "master": {
            "nullable": true,
            "type": "boolean"
          },
          "sasStatus": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ecpAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF",
            "type": "systems"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f",
            "type": "enclosures"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "ecpDc4data": {
        "nullable": true,
        "properties": {
          "linkRxLED": {
            "$ref": "#/components/schemas/LED"
          },
          "linkTxLED": {
            "$ref": "#/components/schemas/LED"
          }
        },
        "type": "object"
      },
      "ecpDcsdata": {
        "nullable": true,
        "properties": {
          "sasLinkEnabled": {
            "nullable": true,
            "type": "boolean"
          },
          "sasLinkOnline": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "edAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF",
            "type": "systems"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f",
            "type": "enclosures"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "edDc4data": {
        "nullable": true,
        "properties": {
          "esi": {
            "nullable": true,
            "type": "boolean"
          },
          "esiStatus": {
            "nullable": true,
            "type": "string"
          },
          "systemLED": {
            "$ref": "#/components/schemas/LED"
          }
        },
        "type": "object"
      },
      "edDcsdata": {
        "nullable": true,
        "properties": {
          "esi": {
            "nullable": true,
            "type": "boolean"
          },
          "esiStatus": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "editEnclosureInput": {
        "nullable": false,
        "properties": {
          "id": {
            "description": "New Id of the enclosure",
            "example": "5",
            "nullable": true,
            "type": "string"
          },
          "location": {
            "description": "Location of the enclosure in the datacenter",
            "example": "MIP-01 H29 36-38",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "editNetworkSettingsInput": {
        "description": "Proxy Setting details for a device",
        "nullable": true,
        "properties": {
          "dnsAddresses": {
            "description": "Dns address of the system",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "ipv4Address": {
            "description": "ipv4 address of the system",
            "nullable": true,
            "type": "string"
          },
          "ipv4Gateway": {
            "description": "ipv4 gateway of the system",
            "nullable": true,
            "type": "string"
          },
          "ipv4SubnetMask": {
            "description": "NetMask for IPV4 address",
            "nullable": true,
            "type": "string"
          },
          "ipv6Address": {
            "description": "IPV6 address of the system",
            "nullable": true,
            "type": "string"
          },
          "ipv6Gateway": {
            "description": "IPV6 address of the system",
            "nullable": true,
            "type": "string"
          },
          "ipv6PrefixLen": {
            "description": "IPV6 Prefix length",
            "nullable": true,
            "type": "string"
          },
          "proxyParams": {
            "description": "Proxy Setting details for a device",
            "nullable": true,
            "properties": {
              "authenticationRequired": {
                "description": "Is authentication required. Allowed values are enabled or disabled",
                "nullable": true,
                "type": "string"
              },
              "proxyPassword": {
                "description": "Password for authentication. (Required only if Authentication required is enabled)",
                "nullable": true,
                "type": "string"
              },
              "proxyPort": {
                "description": "Proxy Server Port. Allowed values are 1-65535",
                "nullable": true,
                "type": "integer"
              },
              "proxyProtocol": {
                "description": "Supported proxy protocols are HTTP, SOCKS4 and SOCKS5.",
                "nullable": true,
                "type": "string"
              },
              "proxyServer": {
                "description": "Proxy server IP address",
                "nullable": true,
                "type": "string"
              },
              "proxyUser": {
                "description": "Username for authentication. (Required only if Authentication required is enabled)",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "editVCenterSettingsInput": {
        "description": "Request body to edit vCenter Settings",
        "nullable": false,
        "properties": {
          "certChainPem": {
            "description": "Certificate chain of the VCenter server as PEM data",
            "example": "-----BEGIN CERTIFICATE-----\nMIID2jCCAsKgAwIBAgIJAOiAEUfqLBfBMA0GCSqGSIb3DQEBCwUAMIGQMQswCQYD\n-----END CERTIFICATE-----\n",
            "nullable": false,
            "type": "string"
          },
          "description": {
            "description": "Description of the vCenter setting",
            "example": "vCenter - dataCenter1",
            "nullable": false,
            "type": "string"
          },
          "inetaddress": {
            "description": "Host name or IP address of vCenter server",
            "example": "15.71.130.25",
            "nullable": false,
            "type": "string"
          },
          "name": {
            "description": "Name of the vCenter setting",
            "example": "dataCenter1",
            "nullable": false,
            "type": "string"
          },
          "password": {
            "description": "Password to login to the vCenter server",
            "example": "pass",
            "nullable": false,
            "type": "string"
          },
          "port": {
            "description": "Port number of the vCenter server.",
            "example": 443,
            "format": "int64",
            "nullable": false,
            "type": "integer"
          },
          "username": {
            "description": "Username to login to the vCenter server",
            "example": "user1",
            "nullable": false,
            "type": "string"
          }
        },
        "type": "object"
      },
      "eeAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF",
            "type": "systems"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f",
            "type": "enclosures"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "efAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF",
            "type": "systems"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f",
            "type": "enclosures"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "encAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/v1/storage-systems/device-type1/7CE751P312",
            "type": "systems"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/7CE751P312/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-card-ports",
            "type": "enclosure-card-ports"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/7CE751P312/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-cards",
            "type": "enclosure-cards"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/7CE751P312/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-disks",
            "type": "enclosure-disks"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/7CE751P312/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-sleds",
            "type": "enclosure-sleds"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/7CE751P312/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-fans",
            "type": "enclosure-fans"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/7CE751P312/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-expanders",
            "type": "enclosure-expanders"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "encDcsdata": {
        "nullable": true,
        "properties": {
          "fwStatus": {
            "nullable": true,
            "type": "string"
          },
          "fwVersion": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "encPortPosition": {
        "nullable": true,
        "properties": {
          "node": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "port": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "slot": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "enclosureCardDetails": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/ecAssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-cards/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dc4data": {
            "$ref": "#/components/schemas/ecDc4data"
          },
          "dcsdata": {
            "$ref": "#/components/schemas/ecDcsdata"
          },
          "displayname": {
            "description": "Enclosure Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "elementStatusCode": {
            "description": "Enclosure status code",
            "nullable": true,
            "type": "string"
          },
          "enclosureCardId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "type": "integer"
          },
          "enclosureDeviceId": {
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource.",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure.",
            "nullable": true,
            "type": "string"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureTypeSingle"
          },
          "failIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource.",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "loopA": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "loopB": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "SASB",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-cards/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-cards/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosureCardList": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/ecAssociatedLinks"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dc4data": {
            "$ref": "#/components/schemas/ecDc4data"
          },
          "dcsdata": {
            "$ref": "#/components/schemas/ecDcsdata"
          },
          "displayname": {
            "description": "Enclosure Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "elementStatusCode": {
            "description": "Enclosure status code",
            "nullable": true,
            "type": "string"
          },
          "enclosureCardId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureDeviceId": {
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource. `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure. `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureTypeSingle"
          },
          "failIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "loopA": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "loopB": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturing"
          },
          "name": {
            "description": "Name of the resource. `Filter, Sort`",
            "example": "SASB",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure card object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-cards/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosureCardPortDetails": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/ecpAssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-card-ports/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dc4data": {
            "$ref": "#/components/schemas/ecpDc4data"
          },
          "dcsdata": {
            "$ref": "#/components/schemas/ecpDcsdata"
          },
          "disabled": {
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "elementStatusCode": {
            "description": "Enclosure status code",
            "nullable": true,
            "type": "string"
          },
          "enclosureCardDeviceId": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureCardId": {
            "description": "UID for the resource",
            "example": "4c592313a65224f9dc804ca4ced2b88b",
            "nullable": true,
            "type": "string"
          },
          "enclosureCardPortId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureCardPortType": {
            "example": "External",
            "nullable": true,
            "type": "string"
          },
          "enclosureDeviceId": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureTypeSingle"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "linkSpeed": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "loopA": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "loopIndex": {
            "example": 2,
            "nullable": true,
            "type": "integer"
          },
          "nodePort": {
            "$ref": "#/components/schemas/encPortPosition"
          },
          "osDisplayName": {
            "example": "DP-3",
            "nullable": true,
            "type": "string"
          },
          "portWwn": {
            "example": "50050CC111510A3E",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure fan object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-card-ports/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure fan object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-card-ports/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "sfp": {
            "$ref": "#/components/schemas/FcPortSfpSingle"
          },
          "systemId": {
            "description": "SystemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosureCardPortList": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/ecpAssociatedLinks"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dc4data": {
            "$ref": "#/components/schemas/ecpDc4data"
          },
          "dcsdata": {
            "$ref": "#/components/schemas/ecpDcsdata"
          },
          "disabled": {
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "elementStatusCode": {
            "description": "Enclosure status code",
            "nullable": true,
            "type": "string"
          },
          "enclosureCardDeviceId": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureCardId": {
            "description": "UID for the resource",
            "example": "4c592313a65224f9dc804ca4ced2b88b",
            "nullable": true,
            "type": "string"
          },
          "enclosureCardPortId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureCardPortType": {
            "example": "External",
            "nullable": true,
            "type": "string"
          },
          "enclosureDeviceId": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource.`Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureTypeSingle"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "linkSpeed": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "loopA": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "loopIndex": {
            "example": 2,
            "nullable": true,
            "type": "integer"
          },
          "nodePort": {
            "$ref": "#/components/schemas/encPortPosition"
          },
          "osDisplayName": {
            "example": "DP-3",
            "nullable": true,
            "type": "string"
          },
          "portWwn": {
            "example": "50050CC111510A3E",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure expander object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-card-ports/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "sfp": {
            "$ref": "#/components/schemas/FcPortSfp"
          },
          "systemId": {
            "description": "SystemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosureCardPortsSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/enclosureCardPortList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure fans object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-card-ports",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of enclosure cards",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "enclosureCardsSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/enclosureCardList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure cards object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-cards",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of enclosure cards",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "enclosureDiskDetails": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/edAssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-disks/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dc4data": {
            "$ref": "#/components/schemas/edDc4data"
          },
          "dcsdata": {
            "$ref": "#/components/schemas/edDcsdata"
          },
          "displayname": {
            "description": "Enclosure Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "enclosureDeviceId": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource.",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureTypeSingle"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource.",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "loopA": {
            "$ref": "#/components/schemas/enclosureDiskLoop"
          },
          "loopB": {
            "$ref": "#/components/schemas/enclosureDiskLoop"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "SASB",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/diskPosition"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-disks/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-disks/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "temperature": {
            "deprecated": true,
            "description": "temperature of the resource part",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "wwn": {
            "description": "WWN of the resource.",
            "example": "5000C500997AB7B0",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosureDiskList": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/edAssociatedLinks"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dc4data": {
            "$ref": "#/components/schemas/edDc4data"
          },
          "dcsdata": {
            "$ref": "#/components/schemas/edDcsdata"
          },
          "displayname": {
            "description": "Enclosure Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "enclosureDeviceId": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource. `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureType"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "loopA": {
            "$ref": "#/components/schemas/enclosureDiskLoop"
          },
          "loopB": {
            "$ref": "#/components/schemas/enclosureDiskLoop"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource. `Filter, Sort`",
            "example": "SASB",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/diskPosition"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure disk object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-disks/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "temperature": {
            "deprecated": true,
            "description": "temperature of the resource part",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "wwn": {
            "description": "WWN of the resource. `Filter, Sort`",
            "example": "5000C500997AB7B0",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosureDiskLoop": {
        "nullable": true,
        "properties": {
          "alpa": {
            "nullable": true,
            "type": "integer"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          }
        },
        "type": "object"
      },
      "enclosureDisksSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/enclosureDiskList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure cards object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-disks",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of enclosure cards",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "enclosureExpanderDetails": {
        "properties": {
          "address": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "associatedLinks": {
            "$ref": "#/components/schemas/eeAssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-expanders/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "elementStatusCode": {
            "description": "Enclosure status code",
            "nullable": true,
            "type": "string"
          },
          "enclosureDeviceId": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureExpanderId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource.",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource.",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Enclosure Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure fan object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-expanders/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure fan object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-expanders/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "systemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosureExpanderList": {
        "nullable": true,
        "properties": {
          "address": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "associatedLinks": {
            "$ref": "#/components/schemas/eeAssociatedLinks"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "elementStatusCode": {
            "description": "Enclosure status code",
            "nullable": true,
            "type": "string"
          },
          "enclosureDeviceId": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureExpanderId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource. `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Enclosure Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure expander object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-expanders/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "systemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosureExpandersSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/enclosureExpanderList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure fans object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-fans",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of enclosure cards",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "enclosureFanDetails": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/efAssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-fans/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Enclosure Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "elementStatusCode": {
            "description": "Enclosure status code.",
            "nullable": true,
            "type": "string"
          },
          "enclosureCoolingFanId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureDeviceId": {
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource.",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureTypeSingle"
          },
          "failIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource.",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "SASB",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "partNumber": {
            "nullable": true,
            "type": "string"
          },
          "protocol": {
            "example": "SAS",
            "nullable": true,
            "type": "string"
          },
          "psId": {
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure fan object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-fans/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure fan object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-fans/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "speed": {
            "description": "Speed of the resource",
            "nullable": true,
            "type": "string"
          },
          "speedRpm": {
            "deprecated": true,
            "description": "Speed in rpm",
            "format": "Uint32",
            "nullable": true,
            "type": "integer"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "wwn": {
            "example": "5000C500997AB7B0",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosureFanList": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/efAssociatedLinks"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Enclosure Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "elementStatusCode": {
            "description": "Enclosure status code.",
            "nullable": true,
            "type": "string"
          },
          "enclosureCoolingFanId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureDeviceId": {
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource. `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureTypeSingle"
          },
          "failIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource. `Filter, Sort`",
            "example": "SASB",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "partNumber": {
            "nullable": true,
            "type": "string"
          },
          "protocol": {
            "example": "SAS",
            "nullable": true,
            "type": "string"
          },
          "psId": {
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure card object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-fans/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "speed": {
            "description": "Speed of the resource",
            "nullable": true,
            "type": "string"
          },
          "speedRpm": {
            "deprecated": true,
            "description": "Speed in rpm",
            "format": "Uint32",
            "nullable": true,
            "type": "integer"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "wwn": {
            "example": "5000C500997AB7B0",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosureFanSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/enclosureFanList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure fans object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-fans",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of enclosure cards",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "enclosurePowerDetails": {
        "properties": {
          "acStatus": {
            "nullable": true,
            "type": "string"
          },
          "associatedLinks": {
            "$ref": "#/components/schemas/epAssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-powers/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dcStatus": {
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Enclosure power Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "elementStatusCode": {
            "description": "Enclosure status code",
            "nullable": true,
            "type": "string"
          },
          "enclosureDeviceId": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource.",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure power.",
            "nullable": true,
            "type": "string"
          },
          "enclosurePowerId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureTypeSingle"
          },
          "failIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "failInput": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "failOutput": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource.",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "modelReadOnly": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "SASB",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-powers/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-powers/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosurePowersList": {
        "nullable": true,
        "properties": {
          "acStatus": {
            "nullable": true,
            "type": "string"
          },
          "associatedLinks": {
            "$ref": "#/components/schemas/epAssociatedLinks"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dcStatus": {
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Enclosure power Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "elementStatusCode": {
            "description": "Enclosure status code",
            "nullable": true,
            "type": "string"
          },
          "enclosureDeviceId": {
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource. `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure power.",
            "nullable": true,
            "type": "string"
          },
          "enclosurePowerId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureTypeSingle"
          },
          "failIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "failInput": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "failOutput": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "modelReadOnly": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "SASB",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure power object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-powers/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosurePowersSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/enclosurePowersList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure powers object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-powers",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of enclosure cards",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "enclosureSledDetails": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/esAssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-sleds/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dc4data": {
            "$ref": "#/components/schemas/dc4dataSingle"
          },
          "diskCount": {
            "description": "Number of disks present",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "displayname": {
            "description": "Enclosure Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "elementStatusCode": {
            "description": "Enclosure status code",
            "nullable": true,
            "type": "string"
          },
          "enclosureDeviceId": {
            "example": 1,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource.",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureTypeSingle"
          },
          "failIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource.",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "SASB",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "okIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "portBypassA": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "portBypassB": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "power": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "predFailIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "protocol": {
            "example": "SAS",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-sleds/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-sleds/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "sledId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "stateLoopA": {
            "$ref": "#/components/schemas/STATE"
          },
          "stateLoopB": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "temperature": {
            "deprecated": true,
            "example": 30,
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "wwn": {
            "example": "5000C500997AB7B0",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosureSledList": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/esAssociatedLinks"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dc4data": {
            "$ref": "#/components/schemas/esDc4data"
          },
          "diskCount": {
            "description": "Number of disks present",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "displayname": {
            "description": "Enclosure Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "elementStatusCode": {
            "description": "Enclosure status code",
            "nullable": true,
            "type": "string"
          },
          "enclosureDeviceId": {
            "example": 1,
            "type": "integer"
          },
          "enclosureId": {
            "description": "Parent UID of the resource. `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "enclosureName": {
            "description": "Name of the enclosure",
            "nullable": true,
            "type": "string"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureTypeSingle"
          },
          "failIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource. `Filter, Sort`",
            "example": "SASB",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "okIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "portBypassA": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "portBypassB": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "power": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "predFailIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "protocol": {
            "example": "SAS",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure card object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-sleds/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "sledId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "stateLoopA": {
            "$ref": "#/components/schemas/STATE"
          },
          "stateLoopB": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "temperature": {
            "deprecated": true,
            "example": 30,
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "wwn": {
            "example": "5000C500997AB7B0",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "enclosureSledsSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/enclosureSledList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure sleds object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f/enclosure-sleds",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of enclosure cards",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "enclosureType": {
        "description": "Enclosure Type. `Filter, Sort`",
        "enum": [
          "ENCLOSURE_UNKNOWN",
          "ENCLOSURE_DC0",
          "ENCLOSURE_DC1",
          "ENCLOSURE_DC2",
          "ENCLOSURE_DC3",
          "ENCLOSURE_DC4",
          "ENCLOSURE_DCS1",
          "ENCLOSURE_DCS2",
          "ENCLOSURE_DCN1",
          "ENCLOSURE_DCS3",
          "ENCLOSURE_DCS4",
          "ENCLOSURE_DCS5",
          "ENCLOSURE_DCS6",
          "ENCLOSURE_DCS7",
          "ENCLOSURE_DCS8",
          "ENCLOSURE_DCN2",
          "ENCLOSURE_DCN3",
          "ENCLOSURE_DCN4",
          "ENCLOSURE_DCS9",
          "ENCLOSURE_DCS10",
          "ENCLOSURE_DCS11",
          "ENCLOSURE_DCN5",
          "ENCLOSURE_DCS12",
          "ENCLOSURE_DCN6",
          "ENCLOSURE_DCF1"
        ],
        "example": "ENCLOSURE_DCS8",
        "type": "string"
      },
      "enclosureTypeSingle": {
        "description": "Enclosure Type.",
        "enum": [
          "ENCLOSURE_UNKNOWN",
          "ENCLOSURE_DC0",
          "ENCLOSURE_DC1",
          "ENCLOSURE_DC2",
          "ENCLOSURE_DC3",
          "ENCLOSURE_DC4",
          "ENCLOSURE_DCS1",
          "ENCLOSURE_DCS2",
          "ENCLOSURE_DCN1",
          "ENCLOSURE_DCS3",
          "ENCLOSURE_DCS4",
          "ENCLOSURE_DCS5",
          "ENCLOSURE_DCS6",
          "ENCLOSURE_DCS7",
          "ENCLOSURE_DCS8",
          "ENCLOSURE_DCN2",
          "ENCLOSURE_DCN3",
          "ENCLOSURE_DCN4",
          "ENCLOSURE_DCS9",
          "ENCLOSURE_DCS10",
          "ENCLOSURE_DCS11",
          "ENCLOSURE_DCN5",
          "ENCLOSURE_DCS12",
          "ENCLOSURE_DCN6",
          "ENCLOSURE_DCF1"
        ],
        "example": "ENCLOSURE_DCS8",
        "type": "string"
      },
      "enclosuresDetails": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/encAssociatedLinks"
          },
          "chainPosLoopA": {
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "chainPosLoopB": {
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dc4data": {
            "$ref": "#/components/schemas/dc4data"
          },
          "dcsdata": {
            "$ref": "#/components/schemas/encDcsdata"
          },
          "detailedState": {
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Enclosure Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "enclosureId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureTypeSingle"
          },
          "errors": {
            "$ref": "#/components/schemas/errors"
          },
          "failIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "failRequested": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "formFactor": {
            "example": "SFF",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource.",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "location": {
            "description": "Location of the resource",
            "nullable": true,
            "type": "string"
          },
          "loopSplit": {
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "cage1",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "nodeWwn": {
            "description": "WWn of the node resource",
            "example": "50050CC106233428",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosure object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "subType": {
            "description": "Enclosure sub type",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "warnIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "warnRequested": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "enclosuresList": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/encAssociatedLinks"
          },
          "chainPosLoopA": {
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "chainPosLoopB": {
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dc4data": {
            "$ref": "#/components/schemas/dc4data"
          },
          "dcsdata": {
            "$ref": "#/components/schemas/encDcsdata"
          },
          "detailedState": {
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Enclosure Display name",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "enclosureId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "enclosureType": {
            "$ref": "#/components/schemas/enclosureTypeSingle"
          },
          "errors": {
            "$ref": "#/components/schemas/errors"
          },
          "failIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "failRequested": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "formFactor": {
            "example": "SFF",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "9c3c4f29a82fd8d632ff379116fa0b8f",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "location": {
            "description": "Location of the resource",
            "nullable": true,
            "type": "string"
          },
          "loopSplit": {
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource. `Filter, Sort`",
            "example": "cage1",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "nodeWwn": {
            "description": "WWn of the node resource",
            "example": "50050CC106233428",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed enclosure object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/ENC_STATE"
          },
          "subType": {
            "description": "Enclosure sub type",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "warnIndicator": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "warnRequested": {
            "example": false,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "enclosuresSummaryList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/enclosuresList"
            },
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "resourceUri for detailed enclosures object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/enclosures",
            "type": "string"
          },
          "total": {
            "description": "Number of enclosures",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "epAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF",
            "type": "systems"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f",
            "type": "enclosures"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "errorResponse": {
        "description": "Standardized model for the error response from the server, returned for any internal / unexpected errors",
        "properties": {
          "error": {
            "description": "Description of the error",
            "type": "string"
          },
          "errorCode": {
            "description": "Internal error code",
            "type": "string"
          }
        },
        "type": "object"
      },
      "errors": {
        "description": "Errors occurred in enclosure",
        "items": {
          "nullable": true,
          "properties": {
            "alarmCode": {
              "description": "Alarm code",
              "nullable": true,
              "type": "string"
            },
            "alarmText": {
              "nullable": true,
              "type": "string"
            },
            "iom": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "esAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF",
            "type": "systems"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/enclosures/9c3c4f29a82fd8d632ff379116fa0b8f",
            "type": "enclosures"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "esDc4data": {
        "nullable": true,
        "properties": {
          "hplLED": {
            "$ref": "#/components/schemas/LED"
          },
          "left": {
            "nullable": true,
            "type": "boolean"
          },
          "right": {
            "nullable": true,
            "type": "boolean"
          },
          "systemLED": {
            "$ref": "#/components/schemas/LED"
          }
        },
        "type": "object"
      },
      "expirationDate": {
        "description": "expiray Date of the battery",
        "nullable": true,
        "properties": {
          "ms": {
            "description": "time in millisecond",
            "example": 1591599192000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tz": {
            "description": "timezone",
            "example": "Asia/Calcutta",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "exportAppSetPost": {
        "nullable": true,
        "properties": {
          "hostGroupIds": {
            "description": "HostGroups",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "proximity": {
            "description": "Host proximity setting for Active Peer Persistence configuration. Supported values are - PRIMARY, SECONDARY and ALL",
            "enum": [
              "PRIMARY",
              "SECONDARY",
              "ALL"
            ],
            "example": "PRIMARY",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "hostGroupIds"
        ],
        "type": "object"
      },
      "exportInput": {
        "description": "Nimble volume Export input.",
        "properties": {
          "hostGroups": {
            "description": "list of hostGroups",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "filterDiskCapacity": {
        "description": "Capacity of the Disk",
        "nullable": true,
        "properties": {
          "allocatedMiB": {
            "description": "allocated Size in MiB",
            "example": 595968,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "failedMiB": {
            "description": "failed Size in MiB",
            "example": 0,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "freeMiB": {
            "description": "free Size in MiB",
            "example": 1233920,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "totalMiB": {
            "description": "total Size in MiB. `Filter, Sort`",
            "example": 595968,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "unavailableMiB": {
            "description": "unavailable Size in MiB",
            "example": 0,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "filterDiskPositionNow": {
        "description": "Disk Position Now",
        "nullable": true,
        "properties": {
          "cage": {
            "description": "cage ID. `Filter, Sort`",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "disk": {
            "description": "disk ID.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "side": {
            "description": "disk side",
            "enum": [
              "SIDE_NONE",
              "SIDE_LEFT",
              "SIDE_RIGHT",
              null
            ],
            "example": "SIDE_NONE",
            "nullable": true,
            "type": "string"
          },
          "sled": {
            "description": "sled ID.",
            "example": 2,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "fleetAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/api/v1/storage-systems",
            "type": "storage-systems"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE809P009/storage-pools/8fdba044f8d90c7922c17b9340b65178/volumes",
            "type": "volumes"
          }
        ],
        "items": {
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Type",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "fleetSystemVolumeset": {
        "nullable": true,
        "properties": {
          "appType": {
            "description": "Application name `Filter`",
            "example": "Oracle Database",
            "nullable": true,
            "type": "string"
          },
          "associatedLinks": {
            "description": "Associated Links Details",
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "id of the volume set `Filter`",
            "example": "4c74ec5c-ecec-4483-9506-3fb5dc45b5d0",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "name of volume-set `Filter, Sort`",
            "example": "snap11",
            "nullable": true,
            "type": "string"
          },
          "productFamily": {
            "description": "Product Family",
            "example": "deviceType1",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "RequestUri for applicationsets resources",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/applicationsets/14dbcb4be4836ff8f012a6d0118ba83a",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed volume object",
            "example": "/v1/storage-systems/volume-sets",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "system ID. `Filter, Sort`",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "volumesCount": {
            "description": "The number of volumes in an application",
            "example": 5,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "fleetVolumeDetails": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "description": "Associated Links",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/storage-pools/{uid}",
                "type": "storage-pools"
              },
              {
                "resourceUri": "/v1/storage-systems/volume-sets/{uid}",
                "type": "volume-sets"
              },
              {
                "resourceUri": "/v1/storage-systems/{uid}",
                "type": "systems"
              }
            ],
            "items": {
              "properties": {
                "resourceUri": {
                  "description": "Resource URI",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/volumes/{uid}",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "healthState": {
            "description": "Health State of volume.`",
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          },
          "hostWrittenCapacityMiB": {
            "description": "Host written data size in MiB.",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "id": {
            "description": "UUID string uniquely identifying the storage system object.",
            "nullable": true,
            "type": "string"
          },
          "initiators": {
            "description": "Initiator details",
            "items": {
              "properties": {
                "deviceDiscoveredName": {
                  "description": "Host/HostGroup name on device.",
                  "example": "TEST11",
                  "nullable": true,
                  "type": "string"
                },
                "id": {
                  "description": "Resource id",
                  "example": "6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "resourceUri": {
                  "description": "Resource URI",
                  "example": "/v1/host-initiators/6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "example": "host-initiators",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "isInternal": {
            "description": "boolean value which specifies if it is a systemVolume or not `Filter`",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "isSystemVolume": {
            "deprecated": true,
            "description": "boolean value which specifies if it is a systemVolume or not `Filter`",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "A user friendly name to identify the storage system volume (resourceName).",
            "example": "Finance",
            "nullable": true,
            "type": "string"
          },
          "productFamily": {
            "description": "Product Family",
            "example": "deviceType1",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "resourceUri for detailed volume object",
            "example": "/v1/storage-systems/{systemUid}/volumes/{uid}",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed volume object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/volumes/{uid}",
            "nullable": true,
            "type": "string"
          },
          "sizeMiB": {
            "description": "Size in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "spaceWarning": {
            "$ref": "#/components/schemas/spaceWarning"
          },
          "subType": {
            "description": "subType of the volume",
            "example": "PROVTYPE_DDS",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "thinSavings": {
            "description": "Thin savings",
            "example": "1:1",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "usedCapacityPercent": {
            "description": "Used capacity percentage of volume. `Filter, Sort`",
            "example": 1.2345,
            "nullable": true,
            "type": "number"
          },
          "usedSizeMiB": {
            "description": "Size in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "volumeSetId": {
            "description": "SystemUid/serialNumber of the volumeSet.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "volumeType": {
            "description": "VV Type",
            "example": "VVTYPE_BASE",
            "nullable": true,
            "type": "string"
          },
          "wwn": {
            "description": "Volume wwn.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "fleetVolumeDetailsList": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "description": "Associated Links",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/storage-pools/{uid}",
                "type": "storage-pools"
              },
              {
                "resourceUri": "/v1/storage-systems/volume-sets/{uid}",
                "type": "volume-sets"
              },
              {
                "resourceUri": "/v1/storage-systems/{uid}",
                "type": "systems"
              }
            ],
            "items": {
              "properties": {
                "resourceUri": {
                  "description": "Resource URI",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/{uid}/volumes",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "healthState": {
            "description": "Health State of volume. `Filter, Sort`",
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          },
          "hostWrittenCapacityMiB": {
            "description": "Host written data size in MiB. `Filter, Sort`",
            "example": 0,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "id": {
            "description": "UUID string uniquely identifying the storage system object. `Filter`",
            "example": "e66ed5ce8d35961481a48b4f78bb06b4",
            "nullable": true,
            "type": "string"
          },
          "initiators": {
            "description": "Initiator details",
            "items": {
              "properties": {
                "deviceDiscoveredName": {
                  "description": "Host/HostGroup name on device.",
                  "example": "TEST11",
                  "nullable": true,
                  "type": "string"
                },
                "id": {
                  "description": "Resource id",
                  "example": "6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "resourceUri": {
                  "description": "Resource URI",
                  "example": "/v1/host-initiators/6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "example": "host-initiators",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "isInternal": {
            "description": "boolean value which specifies if it is a systemVolume or not `Filter`",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "isSystemVolume": {
            "deprecated": true,
            "description": "boolean value which specifies if it is a systemVolume or not `Filter`",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "A user friendly name to identify the storage system volume (resourceName). `Filter, Sort`",
            "example": "Finance",
            "nullable": true,
            "type": "string"
          },
          "productFamily": {
            "description": "Product Family",
            "example": "deviceType1",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed volume object",
            "example": "/v1/storage-systems/volumes",
            "nullable": true,
            "type": "string"
          },
          "sizeMiB": {
            "description": "Size in MiB `Filter, Sort`",
            "example": 2048,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "spaceWarning": {
            "$ref": "#/components/schemas/spaceWarning"
          },
          "subType": {
            "description": "subType of the volume",
            "example": "PROVTYPE_DDS",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array. `Filter, Sort`",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "thinSavings": {
            "description": "Thin savings",
            "example": "1:1",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "volume",
            "nullable": true,
            "type": "string"
          },
          "usedCapacityPercent": {
            "description": "Used capacity percentage of volume. `Filter, Sort`",
            "example": 1.2345,
            "nullable": true,
            "type": "number"
          },
          "usedSizeMiB": {
            "description": "Size in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "volumeSetId": {
            "description": "SystemUid/serialNumber of the volumeSet.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "volumeType": {
            "description": "VV Type",
            "example": "VVTYPE_BASE",
            "nullable": true,
            "type": "string"
          },
          "wwn": {
            "description": "Volume wwn.",
            "example": "60002AC0000000000000006B0001FFEB",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "fleetVolumeSetDetails": {
        "nullable": true,
        "properties": {
          "appType": {
            "description": "Application name `Filter`",
            "example": "Oracle Database",
            "nullable": true,
            "type": "string"
          },
          "application": {
            "deprecated": true,
            "description": "Application name",
            "nullable": true,
            "type": "string"
          },
          "associatedLinks": {
            "description": "Associated Links Details",
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "id of the volume set `Filter`",
            "example": "4c74ec5c-ecec-4483-9506-3fb5dc45b5d0",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "name of volume-set `Filter, Sort`",
            "example": "snap11",
            "nullable": true,
            "type": "string"
          },
          "productFamily": {
            "description": "Product Family",
            "example": "deviceType1",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed volume object",
            "example": "/v1/storage-systems/volume-sets",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "system ID. `Filter, Sort`",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "fleetVolumeSetList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/fleetVolumeset"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "RequestUri for applicationsets resources",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/applicationsets/14dbcb4be4836ff8f012a6d0118ba83a",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Total Number of volume sets.",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "fleetVolumesList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/fleetVolumeDetailsList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed volume object",
            "example": "/v1/storage-systems/volumes",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of volumes.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "fleetVolumeset": {
        "nullable": true,
        "properties": {
          "appType": {
            "description": "Application name `Filter`",
            "example": "Oracle Database",
            "nullable": true,
            "type": "string"
          },
          "application": {
            "deprecated": true,
            "description": "Application name",
            "nullable": true,
            "type": "string"
          },
          "associatedLinks": {
            "description": "Associated Links Details",
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "id of the volume set `Filter`",
            "example": "4c74ec5c-ecec-4483-9506-3fb5dc45b5d0",
            "nullable": true,
            "type": "string"
          },
          "members": {
            "deprecated": true,
            "description": "Members of the volume set. This field is deprecated.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "name of volume-set `Filter, Sort`",
            "example": "snap11",
            "nullable": true,
            "type": "string"
          },
          "productFamily": {
            "description": "Product Family",
            "example": "deviceType1",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed volume object",
            "example": "/v1/storage-systems/volume-sets",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "system ID. `Filter, Sort`",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "friendlyCert": {
        "description": "Certificate detail in readable format",
        "nullable": true,
        "properties": {
          "ValidFrom": {
            "$ref": "#/components/schemas/validity"
          },
          "ValidUntil": {
            "$ref": "#/components/schemas/validity"
          },
          "issuedTo": {
            "description": "Name of the certificate issued to",
            "example": "15.213.64.88",
            "nullable": true,
            "type": "string"
          },
          "issuer": {
            "description": "Name of Certificate issued to",
            "example": "CA",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "friendlyCertificate": {
        "description": "Friendly info of the SMTP/mail server certificate",
        "nullable": true,
        "properties": {
          "ValidFrom": {
            "description": "Certificate Validity start time",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "Epoch time in milliseconds",
                "example": 1552301131000,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "time zone",
                "example": "UTC",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "ValidUntil": {
            "description": "Certificate Validity end time",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "Epoch time in milliseconds",
                "example": 1615416331000,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "time zone",
                "example": "UTC",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "issuedTo": {
            "description": "Certificate issued to",
            "example": "smtp1.hpe.com",
            "nullable": true,
            "type": "string"
          },
          "issuer": {
            "description": "Certificate issuer",
            "example": "CA",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "historicalMetricData": {
        "description": "Timeseries data for particular metric type",
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/metricSeriesData"
            },
            "nullable": true,
            "type": "array"
          },
          "total": {
            "description": "count of series data",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "historyData": {
        "description": "Performance history data for given time range and granularily for a device",
        "nullable": true,
        "properties": {
          "iopsMetricsData": {
            "$ref": "#/components/schemas/historicalMetricData"
          },
          "latencyMetricsDataMs": {
            "$ref": "#/components/schemas/historicalMetricData"
          },
          "throughputMetricsDataKbps": {
            "$ref": "#/components/schemas/historicalMetricData"
          }
        },
        "type": "object"
      },
      "hostHistoricalMetricData": {
        "description": "Timeseries data for particular metric type",
        "nullable": true,
        "properties": {
          "count": {
            "description": "count of series data",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "seriesData": {
            "items": {
              "$ref": "#/components/schemas/hostMetricSeriesData"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "hostHistoryData": {
        "description": "Performance history data for given time range and granularily for a volume",
        "nullable": true,
        "properties": {
          "iopsMetricsData": {
            "items": {
              "$ref": "#/components/schemas/hostPerfHistory"
            },
            "nullable": true,
            "type": "array"
          },
          "latencyMetricsDataMs": {
            "items": {
              "$ref": "#/components/schemas/hostPerfHistory"
            },
            "nullable": true,
            "type": "array"
          },
          "throughputMetricsDataKbps": {
            "items": {
              "$ref": "#/components/schemas/hostPerfHistory"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "hostMetricSeriesData": {
        "nullable": true,
        "properties": {
          "timestampMs": {
            "description": "epoch timestamp",
            "example": 1605063600,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "value": {
            "description": "average metric value at particular timestamp",
            "example": 46,
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "hostPerfHistory": {
        "nullable": true,
        "properties": {
          "historicalData": {
            "$ref": "#/components/schemas/hostHistoricalMetricData"
          },
          "id": {
            "description": "The id of the volume",
            "example": "60002AC0000000000000001B00025BB2",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "The id of the system",
            "example": "SGH014XGSP",
            "nullable": true,
            "type": "string"
          },
          "volumeName": {
            "description": "The name of the volume",
            "example": "test-vv",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "hostProximityDetail": {
        "nullable": true,
        "properties": {
          "isRemoteArraySupportReplication": {
            "description": "Boolean value to indicate if remote array OS version supports replication",
            "example": true,
            "nullable": false,
            "type": "boolean"
          },
          "isSourceArraySupportReplication": {
            "description": "Boolean value to indicate if source array OS version supports replication",
            "example": true,
            "nullable": false,
            "type": "boolean"
          },
          "localSystem": {
            "description": "Local system where host I/O path is Active optimized",
            "example": "CS2-A630-SVQ8",
            "nullable": true,
            "type": "string"
          },
          "proximityValue": {
            "description": "Host proximity to determine the Asymmetric Logical path access state",
            "example": "PRIMARY",
            "nullable": true,
            "type": "string"
          },
          "remoteSystem": {
            "description": "Remote system where host I/O path is Active Non-optimized",
            "example": "s2937",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "hostStoragePerformanceHistory": {
        "nullable": true,
        "properties": {
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "hostVolumePerfTrendData": {
            "$ref": "#/components/schemas/hostHistoryData"
          },
          "requestURI": {
            "description": "requestUri for host storage performance history data",
            "example": "/v1/host-initiators/2b09e744496246859fde6c132b2091d3/storage-performance-history",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "hostStorageVolumes": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/hostVolumes"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed object",
            "example": "/v1/host-initiators/2b09e744496246859fde6c132b2091d3/volumes",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of volume count for the host.",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "hostVolumes": {
        "nullable": true,
        "properties": {
          "iops": {
            "description": "IOPS",
            "example": 4702,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "latencyMs": {
            "description": "Latency in ms",
            "example": 1.2,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "pathCount": {
            "description": "The number of connections from that volume",
            "example": 2,
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "description": "resourceUri of the volume",
            "example": "/v1/storage-systems/device-type1/7CE738P06J/volumes/e1839c72fef8784f2c77194efb8b2620",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid of the system associated with the volume",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "throughputKbps": {
            "description": "The throughput in kbps",
            "example": 477219.2,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "volumeName": {
            "description": "The name of the volume",
            "example": "test-vv",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "hstatus": {
        "description": "The connection state of System",
        "enum": [
          "NORMAL",
          "DEGRADED",
          "UNKNOWN"
        ],
        "example": "NORMAL",
        "type": "string"
      },
      "initiatorPort": {
        "nullable": true,
        "properties": {
          "aliases": {
            "description": "Initiator port alias",
            "nullable": true,
            "type": "string"
          },
          "currentSpeed": {
            "description": "Initiator port current",
            "nullable": true,
            "type": "string"
          },
          "hbaDriverVersion": {
            "description": "Initiator port hba driver version",
            "nullable": true,
            "type": "string"
          },
          "hbaFirmwareVersion": {
            "description": "Initiator port hba firmware version",
            "nullable": true,
            "type": "string"
          },
          "hbaManufacturer": {
            "description": "Initiator port hba manufacturer",
            "nullable": true,
            "type": "string"
          },
          "hbaModel": {
            "description": "Initiator port hba model",
            "nullable": true,
            "type": "string"
          },
          "hbaOsNameVersion": {
            "description": "Initiator port hba os version",
            "nullable": true,
            "type": "string"
          },
          "hostName": {
            "description": "Initiator port host name",
            "nullable": true,
            "type": "string"
          },
          "number": {
            "description": "Initiator port number",
            "nullable": true,
            "type": "integer"
          },
          "osDeviceName": {
            "description": "Initiator port os device name",
            "nullable": true,
            "type": "string"
          },
          "ssanQosSupport": {
            "description": "Initiator port Smart SAN qos support",
            "nullable": true,
            "type": "string"
          },
          "ssanSecuritySupport": {
            "description": "Initiator port Smart SAN security",
            "nullable": true,
            "type": "string"
          },
          "supportedSpeeds": {
            "description": "Initiator port supported speeds",
            "nullable": true,
            "type": "string"
          },
          "wwn": {
            "description": "Initiator port wwn",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ip4": {
        "description": "An IP address or FQDN to address the storage system.",
        "example": "192.168.0.1",
        "format": "ipv4",
        "nullable": true,
        "type": "string"
      },
      "ip6": {
        "description": "An IP address or FQDN to address the storage system.",
        "example": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
        "format": "ipv6",
        "nullable": true,
        "type": "string"
      },
      "ips": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/ip4"
          },
          {
            "$ref": "#/components/schemas/ip6"
          }
        ],
        "nullable": true
      },
      "lastConnectedTime": {
        "description": "Last time when the system was connected",
        "example": 1600084190299,
        "nullable": true,
        "type": "integer"
      },
      "mailsettings": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/msAssociatedLinks"
          },
          "authenticationRequired": {
            "description": "Authentication needed for SMTP settings,possible options are:enabled or disabled",
            "example": "enabled",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1cq",
            "type": "string"
          },
          "friendlyCert": {
            "$ref": "#/components/schemas/friendlyCertificate"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date. ",
            "example": 1627540911681,
            "format": "int64",
            "type": "integer"
          },
          "mailHostDomain": {
            "description": "SMTP server's Host Domain",
            "example": "hpe.com",
            "nullable": true,
            "type": "string"
          },
          "mailHostServer": {
            "description": "SMTP server address/IP",
            "example": "smtp1.hpe.com",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "SMTP server's port number",
            "enum": [
              25,
              465,
              587,
              2525
            ],
            "example": 25,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for mail settings   ",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/mailsettings",
            "nullable": true,
            "type": "string"
          },
          "senderEmailId": {
            "description": "Sender email address",
            "example": "someone@maildomain.com",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "example": "mail-settings",
            "type": "string"
          },
          "username": {
            "description": "SMTP server's username authentication",
            "example": "username",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "mailsettingsInput": {
        "properties": {
          "mailHostDomain": {
            "description": "SMTP server's Host Domain",
            "example": "hpe.com",
            "nullable": true,
            "type": "string"
          },
          "mailHostServer": {
            "description": "SMTP server address/IP",
            "example": "smtp1.hpe.com",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "SMTP server's port number",
            "enum": [
              25,
              465,
              587,
              2525
            ],
            "example": 25,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "senderEmailId": {
            "description": "Sender email address",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "maintenanceMode": {
        "description": "Maintenance mode details of the system",
        "items": {
          "properties": {
            "comment": {
              "description": "Comments",
              "nullable": true,
              "type": "string"
            },
            "endTime": {
              "description": "end time",
              "nullable": true,
              "properties": {
                "ms": {
                  "description": "stat time",
                  "nullable": true,
                  "type": "integer"
                },
                "tz": {
                  "description": "time zone",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "instances": {
              "description": "Instances",
              "nullable": true,
              "type": "integer"
            },
            "reasonCode": {
              "description": "Reason code",
              "format": "Any",
              "nullable": true,
              "type": "string"
            },
            "startTime": {
              "description": "start time",
              "nullable": true,
              "properties": {
                "ms": {
                  "description": "epoc time",
                  "nullable": true,
                  "type": "integer"
                },
                "tz": {
                  "description": "time zone",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "user": {
              "description": "User",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "manufacturing": {
        "description": "Manufacturing information",
        "nullable": true,
        "properties": {
          "assemblyRev": {
            "description": "Assembly revision",
            "example": "002*",
            "nullable": true,
            "type": "string"
          },
          "checkSum": {
            "description": "Checksum",
            "example": "--",
            "nullable": true,
            "type": "string"
          },
          "hpeModelName": {
            "description": "HPE model name",
            "example": "HPE 3PAR 600 2S Node",
            "nullable": true,
            "type": "string"
          },
          "manufacturer": {
            "description": "Manufacturer. `Filter, Sort`",
            "example": "XYRATEX",
            "nullable": true,
            "type": "string"
          },
          "model": {
            "description": "Model",
            "example": "0974244-06",
            "nullable": true,
            "type": "string"
          },
          "saleablePartNumber": {
            "description": "Saleable part number",
            "example": "0974244-06",
            "nullable": true,
            "type": "string"
          },
          "saleableSerialNumber": {
            "description": "Saleable serial number",
            "example": "4UW0002941",
            "nullable": true,
            "type": "string"
          },
          "serialNumber": {
            "description": "Serial number. `Filter, Sort`",
            "example": "PMW0974244G4T88",
            "nullable": true,
            "type": "string"
          },
          "sparePartNumber": {
            "description": "Spare part number",
            "example": "P04031-001",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "manufacturingSingle": {
        "description": "Manufacturing information",
        "nullable": true,
        "properties": {
          "assemblyRev": {
            "description": "Assembly revision",
            "example": "002*",
            "nullable": true,
            "type": "string"
          },
          "checkSum": {
            "description": "Checksum",
            "example": "--",
            "nullable": true,
            "type": "string"
          },
          "hpeModelName": {
            "description": "HPE model name",
            "example": "HPE 3PAR 600 2S Node",
            "nullable": true,
            "type": "string"
          },
          "manufacturer": {
            "description": "Manufacturer.",
            "example": "XYRATEX",
            "nullable": true,
            "type": "string"
          },
          "model": {
            "description": "Model",
            "example": "0974244-06",
            "nullable": true,
            "type": "string"
          },
          "saleablePartNumber": {
            "description": "Saleable part number",
            "example": "0974244-06",
            "nullable": true,
            "type": "string"
          },
          "saleableSerialNumber": {
            "description": "Saleable serial number",
            "example": "4UW0002941",
            "nullable": true,
            "type": "string"
          },
          "serialNumber": {
            "description": "Serial number.",
            "example": "PMW0974244G4T88",
            "nullable": true,
            "type": "string"
          },
          "sparePartNumber": {
            "description": "Spare part number",
            "example": "P04031-001",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "manufacturingSys": {
        "description": "Manufacturing information",
        "nullable": true,
        "properties": {
          "assemblyRev": {
            "description": "Assembly revision",
            "nullable": true,
            "type": "string"
          },
          "checkSum": {
            "description": "Checksum",
            "nullable": true,
            "type": "string"
          },
          "hpeModelName": {
            "description": "HPE model name",
            "nullable": true,
            "type": "string"
          },
          "manufacturer": {
            "description": "Manufacturer `Filter`",
            "example": "HPE 3PAR",
            "nullable": true,
            "type": "string"
          },
          "model": {
            "description": "Model `Filter`",
            "example": "HPE_3PAR 8400",
            "nullable": true,
            "type": "string"
          },
          "saleablePartNumber": {
            "description": "Saleable part number",
            "nullable": true,
            "type": "string"
          },
          "saleableSerialNumber": {
            "description": "Saleable serial number",
            "nullable": true,
            "type": "string"
          },
          "serialNumber": {
            "description": "Serial number `Filter, Sort`",
            "example": "MXN5442108",
            "nullable": true,
            "type": "string"
          },
          "sparePartNumber": {
            "description": "Spare part number",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "metricSeriesData": {
        "nullable": true,
        "properties": {
          "readValue": {
            "description": "average read metric value at particular timestamp",
            "example": 46,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "timestampms": {
            "description": "epoch timestamp",
            "example": 1605063600,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "totalValue": {
            "description": "total metric value at particular timestamp",
            "example": 89.76,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "writeValue": {
            "description": "average write metric value at particular timestamp",
            "example": 23.76,
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "msAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/api/v1/storage-systems/device-type1/7CE751P312",
            "type": "systems"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "namePattern": {
        "description": "name pattern",
        "enum": [
          "PARENT_TIMESTAMP",
          "PARENT_SEC_SINCE_EPOCH",
          "CUSTOM"
        ],
        "example": "PARENT_TIMESTAMP",
        "nullable": true,
        "type": "string"
      },
      "network-services_cim": {
        "nullable": true,
        "properties": {
          "items": {
            "$ref": "#/components/schemas/cimDetails"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/network-services/cim",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "network-services_snmp": {
        "nullable": true,
        "properties": {
          "items": {
            "$ref": "#/components/schemas/snmpMgrDetails"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object              ",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/network-services/snmp-mgr",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "network-services_vasa": {
        "nullable": true,
        "properties": {
          "items": {
            "$ref": "#/components/schemas/vasaDetails"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object       ",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/network-services/vasa",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "network-settings": {
        "description": "Network-Settings details for a device",
        "nullable": true,
        "properties": {
          "portManagement": {
            "$ref": "#/components/schemas/sysPortManagement"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object ",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/network-settings",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nimblecapacityHistory": {
        "description": "capacity performance trends for given granularity",
        "nullable": true,
        "properties": {
          "count": {
            "description": "count of series data",
            "example": 127,
            "nullable": true,
            "type": "integer"
          },
          "requestURI": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/nimble/00473102de2f5f39d8000000000000000000000001/capacity-history",
            "nullable": true,
            "type": "string"
          },
          "series_data": {
            "items": {
              "$ref": "#/components/schemas/nimblecapacitySeriesData"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "nimblecapacitySeriesData": {
        "nullable": true,
        "properties": {
          "savings": {
            "description": "capacity savings value at particular timestamp  (in MiB)",
            "example": 5,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "timestamp": {
            "description": "epoch timestamp",
            "example": 1605063600,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "usage": {
            "description": "capacity usage value at particular timestamp  (in MiB)",
            "example": 4,
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "nimblehistoricalMetricData": {
        "description": "Timeseries data for particular metric type",
        "nullable": true,
        "properties": {
          "count": {
            "description": "count of series data",
            "example": 5,
            "nullable": true,
            "type": "integer"
          },
          "series_data": {
            "items": {
              "$ref": "#/components/schemas/nimblemetricSeriesData"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "nimblemetricSeriesData": {
        "nullable": true,
        "properties": {
          "read_value": {
            "description": "average read metric value at particular timestamp",
            "example": 46,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "timestampms": {
            "description": "epoch timestamp",
            "example": 1605063600,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "total_value": {
            "description": "total metric value at particular timestamp",
            "example": 89.76,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "write_value": {
            "description": "average write metric value at particular timestamp",
            "example": 23.76,
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "nimbleperfData": {
        "description": "Performance metrics average values",
        "nullable": true,
        "properties": {
          "avg_1day": {
            "description": "last one day avg data",
            "example": 33.65,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "avg_1hour": {
            "description": "last one hour avg data",
            "example": 40.4,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "avg_8hours": {
            "description": "last 8 hours avg data",
            "example": 50.98,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "avg_latest": {
            "description": "latest perf data",
            "example": 3.4,
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "nimblevolumeCapacityHistory": {
        "description": "volume capacity trends for given granularity",
        "nullable": true,
        "properties": {
          "count": {
            "description": "count of series data",
            "example": 144,
            "nullable": true,
            "type": "integer"
          },
          "requestURI": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type2/00473102de2f5f39d8000000000000000000000001/volumes/37473102de2f5f39d8000000000000000000000027/capacity-history",
            "nullable": true,
            "type": "string"
          },
          "series_data": {
            "items": {
              "$ref": "#/components/schemas/nimblevolumeCapacitySeriesData"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "nimblevolumeCapacitySeriesData": {
        "nullable": true,
        "properties": {
          "snapshot_usage": {
            "description": "capacity usage value at particular timestamp  (in MiB)",
            "example": 20,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "timestamp": {
            "description": "epoch timestamp",
            "example": 1605063600,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "volume_usage": {
            "description": "capacity usage value at particular timestamp  (in MiB)",
            "example": 25,
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "nimblevolumePerformanceHistory": {
        "description": "volume performance trends for given granularity and time range",
        "nullable": true,
        "properties": {
          "iops_metrics_data": {
            "$ref": "#/components/schemas/nimblehistoricalMetricData"
          },
          "latency_metrics_data": {
            "$ref": "#/components/schemas/nimblehistoricalMetricData"
          },
          "requestURI": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type2/00473102de2f5f39d8000000000000000000000001/volumes/37473102de2f5f39d8000000000000000000000027/performance-history",
            "nullable": true,
            "type": "string"
          },
          "throughput_metrics_data": {
            "$ref": "#/components/schemas/nimblehistoricalMetricData"
          }
        },
        "type": "object"
      },
      "nodeAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF",
            "type": "systems"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cpus",
            "type": "node-cpus"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cards",
            "type": "node-cards"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-drives",
            "type": "node-drives"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/0/node-powers",
            "type": "node-powers"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mcus",
            "type": "node-mcus"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mems",
            "type": "node-mems"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/0/nodes-batteries",
            "type": "nodes-batteries"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "nodeBatteriesList": {
        "properties": {
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC018D94/node/e9d353bf98fc1a6bdb90b824e3ca14b5",
                "type": "node"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "chargeLevel": {
            "description": "Battery charge level.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dischargeLED": {
            "$ref": "#/components/schemas/LED"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "Controller Node - 0",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "expirationDate": {
            "$ref": "#/components/schemas/expirationDate"
          },
          "faultLED": {
            "$ref": "#/components/schemas/LED"
          },
          "fullyCharged": {
            "description": "Indicates if battery is fully charged or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "life": {
            "description": "Life of the battery",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "maxLife": {
            "description": "Maximum life of the battery",
            "example": 16,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the resource. `Filter, Sort`",
            "example": "Battery",
            "nullable": true,
            "type": "string"
          },
          "nodeBatteryId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "powerSupplyId": {
            "description": "Power supply ID for this battery.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "primaryNodeId": {
            "description": "Primary node ID. `Filter, Sort`",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node battery object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/0/nodes-batteries/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "description": "Indicates if the component is safe to remove",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "secondaryNodeId": {
            "description": "Secondary node ID",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "serviceLED": {
            "$ref": "#/components/schemas/LED"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "statusLED": {
            "$ref": "#/components/schemas/LED"
          },
          "systemId": {
            "description": "systemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "testInProgress": {
            "description": "Indicates if test is in progress or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "timeToCharge": {
            "deprecated": true,
            "description": "Remaining time to charge",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nodeBatteriesSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/nodeBatteriesList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed node battery object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/0/nodes-batteries",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of node Batteries.",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "nodeBatteryDetails": {
        "properties": {
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC018D94/node/e9d353bf98fc1a6bdb90b824e3ca14b5",
                "type": "node"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "chargeLevel": {
            "description": "Battery charge level.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/nodes-batteries/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dischargeLED": {
            "$ref": "#/components/schemas/LED"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "Controller Node - 0",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "expirationDate": {
            "$ref": "#/components/schemas/expirationDate"
          },
          "faultLED": {
            "$ref": "#/components/schemas/LED"
          },
          "fullyCharged": {
            "description": "Indicates if battery is fully charged or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource.",
            "example": "8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "life": {
            "description": "Life of the battery",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "maxLife": {
            "description": "Maximum life of the battery",
            "example": 16,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "Battery",
            "nullable": true,
            "type": "string"
          },
          "nodeBatteryId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "powerSupplyId": {
            "description": "Power supply ID for this battery.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "primaryNodeId": {
            "description": "Primary node ID.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed node battery object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/nodes-batteries/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node battery object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/0/nodes-batteries/8621946048c1cb24bdfc57e9b3b460ac",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "description": "Indicates if the component is safe to remove",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "secondaryNodeId": {
            "description": "Secondary node ID",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "serviceLED": {
            "$ref": "#/components/schemas/LED"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "statusLED": {
            "$ref": "#/components/schemas/LED"
          },
          "systemId": {
            "description": "systemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "testInProgress": {
            "description": "Indicates if test is in progress or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "timeToCharge": {
            "deprecated": true,
            "description": "Remaining time to charge",
            "example": -1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nodeCardDetails": {
        "properties": {
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC018D94/node/e9d353bf98fc1a6bdb90b824e3ca14b5",
                "type": "node"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cards/60c3831bf1e682693d0319c10333af92",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "NODE_CARD_NAME",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "fwVersion": {
            "description": "Firmware version",
            "example": "10.10.03.00",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource.",
            "example": "9aeec8a12315995e1efc340a79b6b5bd",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "0:1",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "nodeCardType": {
            "description": "Type of the node adapter card",
            "example": "pcicard_type-5",
            "nullable": true,
            "type": "string"
          },
          "nodeDeviceId": {
            "description": "ID of the node",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nodeId": {
            "description": "Unique Identifier of the node.",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for detailed node card object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cards/9aeec8a12315995e1efc340a79b6b5bd",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node card object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cards/9aeec8a12315995e1efc340a79b6b5bd",
            "nullable": true,
            "type": "string"
          },
          "revision": {
            "description": "Revision",
            "example": "02",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "description": "Indicates if the component is safe to remove",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "serviceLED": {
            "$ref": "#/components/schemas/LED"
          },
          "slot": {
            "description": "Slot of the node adapter card",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "systemId": {
            "description": "systemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nodeCardList": {
        "properties": {
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC018D94/node/e9d353bf98fc1a6bdb90b824e3ca14b5",
                "type": "node"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "NODE_CARD_NAME",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "fwVersion": {
            "description": "Firmware version",
            "example": "10.10.03.00",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "9aeec8a12315995e1efc340a79b6b5bd",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "0:1",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "nodeCardType": {
            "description": "Type of the node adapter card",
            "example": "pcicard_type-5",
            "nullable": true,
            "type": "string"
          },
          "nodeDeviceId": {
            "description": "ID of the node",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nodeId": {
            "description": "Unique Identifier of the node. `Filter, Sort`",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node card object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cards/9aeec8a12315995e1efc340a79b6b5bd",
            "nullable": true,
            "type": "string"
          },
          "revision": {
            "description": "Revision",
            "example": "02",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "description": "Indicates if the component is safe to remove",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "serviceLED": {
            "$ref": "#/components/schemas/LED"
          },
          "slot": {
            "description": "Slot of the node adapter card",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "systemId": {
            "description": "systemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nodeCardsSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/nodeCardList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed node card object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cards",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of node Cards.",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "nodeCpuList": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/childAssociatedLinks"
          },
          "busSpeed": {
            "description": "Bus speed in Mhz",
            "example": 100,
            "format": "float",
            "nullable": true,
            "type": "number"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayName": {
            "description": "Name to be used for display purposes",
            "example": "NODE_CPU_NAME",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "family": {
            "description": "Family",
            "example": "0",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource `Filter`",
            "example": "60c3831bf1e682693d0319c10333af92",
            "nullable": true,
            "type": "string"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource. `Filter, Sort`",
            "example": "CPU 0",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "nodeCpuId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nodeDeviceId": {
            "description": "ID of the node",
            "example": "1",
            "nullable": true,
            "type": "string"
          },
          "nodeId": {
            "description": "Unique Identifier of the node. `Filter, Sort`",
            "example": "41af9ebf50bd94d27972f9faf39318af",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node cpu object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cpus/60c3831bf1e682693d0319c10333af92",
            "nullable": true,
            "type": "string"
          },
          "speed": {
            "description": "Speed in Mhz",
            "example": 2194,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "stepping": {
            "description": "Stepping level",
            "example": "4",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "systemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nodeCpusSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/nodeCpuList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed node cpu object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cpus",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of node Cpus.",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "nodeDetails": {
        "properties": {
          "NodeId": {
            "description": "Numeric ID of the resource.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "associatedLinks": {
            "$ref": "#/components/schemas/nodeAssociatedLinks"
          },
          "biosVersion": {
            "description": "Bios version",
            "example": "6.1.18",
            "nullable": true,
            "type": "string"
          },
          "cacheAvailablePct": {
            "description": "Percentage of the cache available",
            "example": 100,
            "nullable": true,
            "type": "integer"
          },
          "cacheEnabled": {
            "description": "Percentage of the cache enabled on the node",
            "example": 100,
            "nullable": true,
            "type": "integer"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "controlMemoryMiB": {
            "description": "Total control memory in the node in MiB",
            "example": 208576,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dataMemoryMiB": {
            "description": "Total data memory in the node in MiB",
            "example": 53248,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "Controller Node 0",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource.",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "inCluster": {
            "description": "Indicates if this node is part of the cluster.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "kernelVersion": {
            "description": "Kernel version",
            "example": "4.2.1",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "master": {
            "description": "Indicates if this is the master node.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "4UW0002941-0",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "online": {
            "description": "Indicates if this node is online",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "requestUri": {
            "description": "requestUri for detailed node object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "description": "Indicates if the component is safe to remove",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "serviceLED": {
            "description": "LED state.",
            "enum": [
              "LED_UNKNOWN",
              "LED_OFF",
              "LED_GREEN",
              "LED_GREEN_BLNK",
              "LED_AMBER",
              "LED_AMBER_BLNK",
              "LED_BLUE",
              "LED_BLUE_BLNK",
              null
            ],
            "example": "LED_UNKNOWN",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "stateDescription": {
            "description": "State of the resource",
            "example": "OK",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "systemLED": {
            "$ref": "#/components/schemas/LED"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "uptime": {
            "$ref": "#/components/schemas/nodeuptime"
          }
        },
        "type": "object"
      },
      "nodeDriveDetails": {
        "properties": {
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC018D94/node/e9d353bf98fc1a6bdb90b824e3ca14b5",
                "type": "node"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-drives/b7b233212d3ed5608da55539a7008b5b",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "NODE_IDE_NAME",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "fwVersion": {
            "description": "Firmware version",
            "example": "X2200400",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource.",
            "example": "b7b233212d3ed5608da55539a7008b5b",
            "nullable": true,
            "type": "string"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "maxLBA": {
            "description": "Max Logical Block Address",
            "example": "EE7C2B0",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "Internal Drive 0",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "nodeDeviceId": {
            "description": "ID of the node",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nodeDriveId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nodeDriveType": {
            "description": "Node type",
            "example": "drive_type-2",
            "nullable": true,
            "type": "string"
          },
          "nodeId": {
            "description": "Unique Identifier of the node.",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for detailed node object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-drives/b7b233212d3ed5608da55539a7008b5b",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-drives/b7b233212d3ed5608da55539a7008b5b",
            "nullable": true,
            "type": "string"
          },
          "sedState": {
            "description": "SED state",
            "example": "Capable",
            "nullable": true,
            "type": "string"
          },
          "sizeMiB": {
            "description": "Size in MiB.",
            "example": 122104,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "systemId": {
            "description": "SystemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "wwn": {
            "description": "Unique World Wide Name",
            "example": "5001B444A99566ED",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nodeDrivesList": {
        "properties": {
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC018D94/node/e9d353bf98fc1a6bdb90b824e3ca14b5",
                "type": "node"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "NODE_IDE_NAME",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "fwVersion": {
            "description": "Firmware version",
            "example": "X2200400",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "b7b233212d3ed5608da55539a7008b5b",
            "nullable": true,
            "type": "string"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturing"
          },
          "maxLBA": {
            "description": "Max Logical Block Address",
            "example": "EE7C2B0",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the resource. `Filter, Sort`",
            "example": "Internal Drive 0",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "nodeDeviceId": {
            "description": "ID of the node",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nodeDriveId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nodeDriveType": {
            "description": "Node type",
            "example": "drive_type-2",
            "nullable": true,
            "type": "string"
          },
          "nodeId": {
            "description": "Unique Identifier of the node. `Filter, Sort`",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-drives/b7b233212d3ed5608da55539a7008b5b",
            "nullable": true,
            "type": "string"
          },
          "sedState": {
            "description": "SED state",
            "example": "Capable",
            "nullable": true,
            "type": "string"
          },
          "sizeMiB": {
            "description": "Size in MiB. `Filter, Sort`",
            "example": 122104,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "systemId": {
            "description": "SystemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "wwn": {
            "description": "Unique World Wide Name",
            "example": "5001B444A99566ED",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nodeDrivesSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/nodeDrivesList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed node Drive object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-drives",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of node Drives.",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "nodeMcuDetails": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/childAssociatedLinks"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mcus/60c3831bf1e682693d0319c10333af92",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "fwVersion": {
            "description": "Firmware version",
            "example": "4.9.20",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource.",
            "example": "be97ad7351f8562440c909460061d0cb",
            "nullable": true,
            "type": "string"
          },
          "model": {
            "description": "Model name",
            "example": "NEMOE",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name to be used for display purposes",
            "example": "Controller Node 1 MCU",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "nodeDeviceId": {
            "description": "ID of the node",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nodeId": {
            "description": "Unique Identifier of the node.",
            "example": "624fc670a5bc9a6e6e5c7833da4bab13",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for detailed node mcu object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mcus/be97ad7351f8562440c909460061d0cb",
            "nullable": true,
            "type": "string"
          },
          "resetReason": {
            "description": "The reason why MicroController Unit was reset",
            "example": "Cold Power-on",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node mcu object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mcus/be97ad7351f8562440c909460061d0cb",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "uptime": {
            "$ref": "#/components/schemas/uptime"
          }
        },
        "type": "object"
      },
      "nodeMcuList": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/childAssociatedLinks"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "fwVersion": {
            "description": "Firmware version",
            "example": "4.9.20",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "be97ad7351f8562440c909460061d0cb",
            "nullable": true,
            "type": "string"
          },
          "model": {
            "description": "Model name",
            "example": "NEMOE",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name to be used for display purposes",
            "example": "Controller Node 1 MCU",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "nodeDeviceId": {
            "description": "ID of the node",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nodeId": {
            "description": "Unique Identifier of the node. `Filter, Sort`",
            "example": "624fc670a5bc9a6e6e5c7833da4bab13",
            "nullable": true,
            "type": "string"
          },
          "resetReason": {
            "description": "The reason why MicroController Unit was reset",
            "example": "Cold Power-on",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node mcu object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mcus/be97ad7351f8562440c909460061d0cb",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "uptime": {
            "$ref": "#/components/schemas/uptime"
          }
        },
        "type": "object"
      },
      "nodeMcusSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/nodeMcuList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed node mcu object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mcus",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of node Mcus.",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "nodeMemoriesList": {
        "properties": {
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC018D94/node/e9d353bf98fc1a6bdb90b824e3ca14b5",
                "type": "node"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "cacheType": {
            "description": "Type of the cache memory is used for",
            "example": "CACHE_DATA",
            "nullable": true,
            "type": "string"
          },
          "casLatency": {
            "description": "CAS latency",
            "example": "CL11.0/1.1",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "NODE_MEM_NAME",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "UUID string uniquely identifying the node object. `Filter`",
            "example": "cc43b7fdca33ea82d84e0ca260940483",
            "nullable": true,
            "type": "string"
          },
          "jedecId": {
            "description": "JEDEC ID",
            "example": "80AD000000000000",
            "nullable": true,
            "type": "string"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource. `Filter, Sort`",
            "example": "DIMM0.0",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "nodeDeviceId": {
            "description": "ID of the node",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nodeId": {
            "description": "Unique Identifier of the node. `Filter, Sort`",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "nodeMemoryType": {
            "description": "Type of the physical memory",
            "example": "dimm_type-2",
            "nullable": true,
            "type": "string"
          },
          "partNumber": {
            "description": "Part number",
            "example": "HMT41GV7DFR4A-PB  T4",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node memory object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mems/cc43b7fdca33ea82d84e0ca260940483",
            "nullable": true,
            "type": "string"
          },
          "revision": {
            "description": "Revision",
            "example": "17",
            "nullable": true,
            "type": "string"
          },
          "riser": {
            "description": "Riser",
            "example": "n/a",
            "nullable": true,
            "type": "string"
          },
          "size": {
            "description": "Size in MiB",
            "example": "8192",
            "nullable": true,
            "type": "string"
          },
          "slot": {
            "description": "Slot of the node physical memory",
            "example": -1,
            "nullable": true,
            "type": "integer"
          },
          "slotId": {
            "description": "Slot ID of the node physical memory",
            "example": "J-16768283",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nodeMemoryDetails": {
        "properties": {
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC018D94/node/e9d353bf98fc1a6bdb90b824e3ca14b5",
                "type": "node"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "cacheType": {
            "description": "Type of the cache memory is used for",
            "example": "CACHE_DATA",
            "nullable": true,
            "type": "string"
          },
          "casLatency": {
            "description": "CAS latency",
            "example": "CL11.0/1.1",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mems/60c3831bf1e682693d0319c10333af92",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "NODE_MEM_NAME",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "UUID string uniquely identifying the node object.",
            "example": "cc43b7fdca33ea82d84e0ca260940483",
            "nullable": true,
            "type": "string"
          },
          "jedecId": {
            "description": "JEDEC ID",
            "example": "80AD000000000000",
            "nullable": true,
            "type": "string"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "DIMM0.0",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "nodeDeviceId": {
            "description": "ID of the node",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nodeId": {
            "description": "Unique Identifier of the node.",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "nodeMemoryType": {
            "description": "Type of the physical memory",
            "example": "dimm_type-2",
            "nullable": true,
            "type": "string"
          },
          "partNumber": {
            "description": "Part number",
            "example": "HMT41GV7DFR4A-PB  T4",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for detailed node memory object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mems/cc43b7fdca33ea82d84e0ca260940483",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node memory object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mems/cc43b7fdca33ea82d84e0ca260940483",
            "nullable": true,
            "type": "string"
          },
          "revision": {
            "description": "Revision",
            "example": "17",
            "nullable": true,
            "type": "string"
          },
          "riser": {
            "description": "Riser",
            "example": "n/a",
            "nullable": true,
            "type": "string"
          },
          "size": {
            "description": "Size in MiB",
            "example": "8192",
            "nullable": true,
            "type": "string"
          },
          "slot": {
            "description": "Slot of the node physical memory",
            "example": -1,
            "nullable": true,
            "type": "integer"
          },
          "slotId": {
            "description": "Slot ID of the node physical memory",
            "example": "J-16768283",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nodePerfStats": {
        "description": "nodes component performance statistics",
        "nullable": true,
        "properties": {
          "cachePercentage": {
            "$ref": "#/components/schemas/perfData"
          },
          "cpuPercentage": {
            "$ref": "#/components/schemas/perfData"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for detailed performance stats object",
            "example": "v1/storage-systems/device-type1/7CE751P312/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/component-performance-statistics",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nodePowerSuppliesList": {
        "properties": {
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC018D94/node/e9d353bf98fc1a6bdb90b824e3ca14b5",
                "type": "node"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "NODE_PS_NAME",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "fanspeed": {
            "description": "Fan speed of the node power supply",
            "example": "Low",
            "nullable": true,
            "type": "string"
          },
          "fanstate": {
            "$ref": "#/components/schemas/STATE"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "1f9624301fd2f5ecef723c6ecd17c377",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource. `Filter, Sort`",
            "example": "Power Supply 1",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "nodePowerId": {
            "description": "Numeric ID of the resource",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "primaryNodeId": {
            "description": "Primary node ID. `Filter, Sort`",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node power object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/0/node-powers/1f9624301fd2f5ecef723c6ecd17c377",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "description": "Indicates if the component is safe to remove",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "secondaryNodeId": {
            "description": "Secondary node ID",
            "example": 2,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "serviceLED": {
            "$ref": "#/components/schemas/LED"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nodePowerSupplyDetails": {
        "properties": {
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/v1/storage-systems/device-type1/2FF70002AC018D94/node/e9d353bf98fc1a6bdb90b824e3ca14b5",
                "type": "node"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/2FF70002AC018D94/nodes/8621946048c1cb24bdfc57e9b3b460ac/node-powers/1f9624301fd2f5ecef723c6ecd17c377",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "NODE_PS_NAME",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "fanspeed": {
            "description": "Fan speed of the node power supply",
            "example": "Low",
            "nullable": true,
            "type": "string"
          },
          "fanstate": {
            "$ref": "#/components/schemas/STATE"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource.",
            "example": "1f9624301fd2f5ecef723c6ecd17c377",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "Power Supply 1",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "nodePowerId": {
            "description": "Numeric ID of the resource",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "primaryNodeId": {
            "description": "Primary node ID.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed node power object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/8621946048c1cb24bdfc57e9b3b460ac/node-powers/1f9624301fd2f5ecef723c6ecd17c377",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node power object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/0/node-powers/1f9624301fd2f5ecef723c6ecd17c377",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "description": "Indicates if the component is safe to remove",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "secondaryNodeId": {
            "description": "Secondary node ID",
            "example": 2,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "serviceLED": {
            "$ref": "#/components/schemas/LED"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemUid/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nodesCpuDetails": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/childAssociatedLinks"
          },
          "busSpeed": {
            "description": "Bus speed in Mhz",
            "example": 100,
            "format": "float",
            "nullable": true,
            "type": "number"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cpus/60c3831bf1e682693d0319c10333af92",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayName": {
            "description": "Name to be used for display purposes",
            "example": "NODE_CPU_NAME",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "family": {
            "description": "Family",
            "example": "0",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource",
            "example": "60c3831bf1e682693d0319c10333af92",
            "nullable": true,
            "type": "string"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "name": {
            "description": "Name of the resource.",
            "example": "CPU 0",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "nodeCpuId": {
            "description": "Numeric ID of the resource",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nodeDeviceId": {
            "description": "ID of the node",
            "example": "1",
            "nullable": true,
            "type": "string"
          },
          "nodeId": {
            "description": "Unique Identifier of the node.",
            "example": "41af9ebf50bd94d27972f9faf39318af",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for detailed node Cpu object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cpus/60c3831bf1e682693d0319c10333af92",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node cpu object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cpus/60c3831bf1e682693d0319c10333af92",
            "nullable": true,
            "type": "string"
          },
          "speed": {
            "description": "Speed in Mhz",
            "example": 2194,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "stepping": {
            "description": "Stepping level",
            "example": "4",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "systemId/Serial Number  of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nodesList": {
        "properties": {
          "NodeId": {
            "description": "Numeric ID of the resource. `Filter, Sort`",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "associatedLinks": {
            "$ref": "#/components/schemas/nodeAssociatedLinks"
          },
          "biosVersion": {
            "description": "Bios version",
            "example": "6.1.18",
            "nullable": true,
            "type": "string"
          },
          "cacheAvailablePct": {
            "description": "Percentage of the cache available",
            "example": 100,
            "nullable": true,
            "type": "integer"
          },
          "cacheEnabled": {
            "description": "Percentage of the cache enabled on the node",
            "example": 100,
            "nullable": true,
            "type": "integer"
          },
          "controlMemoryMiB": {
            "description": "Total control memory in the node in MiB",
            "example": 208576,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dataMemoryMiB": {
            "description": "Total data memory in the node in MiB",
            "example": 53248,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "Controller Node 0",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource. `Filter`",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "inCluster": {
            "description": "Indicates if this node is part of the cluster.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "kernelVersion": {
            "description": "Kernel version",
            "example": "4.2.1",
            "nullable": true,
            "type": "string"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "master": {
            "description": "Indicates if this is the master node.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the resource. `Filter, Sort`",
            "example": "4UW0002941-0",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "online": {
            "description": "Indicates if this node is online",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "resourceUri": {
            "description": "resourceUri for detailed node object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "description": "Indicates if the component is safe to remove",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "serviceLED": {
            "description": "LED state.",
            "enum": [
              "LED_UNKNOWN",
              "LED_OFF",
              "LED_GREEN",
              "LED_GREEN_BLNK",
              "LED_AMBER",
              "LED_AMBER_BLNK",
              "LED_BLUE",
              "LED_BLUE_BLNK",
              null
            ],
            "example": "LED_UNKNOWN",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "stateDescription": {
            "description": "State of the resource",
            "example": "OK",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemId/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "systemLED": {
            "$ref": "#/components/schemas/LED"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "uptime": {
            "$ref": "#/components/schemas/nodeuptime"
          }
        },
        "type": "object"
      },
      "nodesMemorySummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/nodeMemoriesList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed node memory object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mems",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of node Memories.",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "nodesPowerSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/nodePowerSuppliesList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed node power object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/0/node-powers",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of node power supplies.",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "nodesSummaryList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/nodesList"
            },
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed nodes object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/nodes",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of nodes",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "nodeuptime": {
        "deprecated": true,
        "description": "The time that the system has been up since",
        "nullable": true,
        "properties": {
          "ms": {
            "description": "Epoch time in milliseconds",
            "example": 123423423,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "tz": {
            "description": "Time zone name",
            "example": "IST",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "nwAddSnmpMgr": {
        "nullable": true,
        "properties": {
          "snmpConfig": {
            "description": "Specify the SNMP params",
            "items": {
              "$ref": "#/components/schemas/SnmpConfigParams"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "nwAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/api/v1/storage-systems/device-type1/{uid}",
            "type": "systems"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "nwCimEdit": {
        "nullable": false,
        "properties": {
          "cim": {
            "nullable": true,
            "properties": {
              "cimPolicy": {
                "description": "Specifies the CIM Policy of CIM server.",
                "example": true,
                "nullable": true,
                "type": "boolean"
              },
              "enableCimService": {
                "description": "Enable or disbale Cim service.",
                "example": true,
                "nullable": true,
                "type": "boolean"
              },
              "httpState": {
                "description": "Specifies whether HTTPState is enabled or disabled for CIM Server.",
                "example": true,
                "nullable": true,
                "type": "boolean"
              },
              "httpsState": {
                "description": "Specifies whether HTTPS state is enabled or disabled for cim server.",
                "example": true,
                "nullable": true,
                "type": "boolean"
              },
              "id": {
                "description": "Unique identifier of the CIM Server.",
                "nullable": true,
                "type": "string"
              },
              "slpState": {
                "description": "SLPport specification.",
                "example": true,
                "nullable": true,
                "type": "boolean"
              }
            }
          }
        },
        "type": "object"
      },
      "nwSnmpMgrEdit": {
        "nullable": true,
        "properties": {
          "managerIP": {
            "description": "Specify the IP address of the host from which the manager runs",
            "example": "15.218.169.163",
            "nullable": false,
            "type": "string"
          },
          "notify": {
            "description": "Indicates the trap notification types defined by the HPE deviceType1 MIB",
            "enum": [
              "ALL",
              "NODUP",
              "STANDARD"
            ],
            "example": "STANDARD",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "Specify the port number where the SNMP manager receives traps",
            "example": 162,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "retry": {
            "description": "Specify the number of times to send a trap (retry) if the SNMP manager is not available.",
            "example": 2,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "timeoutSecs": {
            "description": "Specify the number of seconds to wait before sending a trap (timeout).",
            "example": 162,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "user": {
            "description": "Specify the SNMPv3 user name",
            "example": "user1",
            "nullable": true,
            "type": "string"
          },
          "version": {
            "description": "Specify the SNMP version supported",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "objData": {
        "nullable": true,
        "properties": {
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "targetName": {
            "description": "target name",
            "example": "volume1",
            "nullable": true,
            "type": "string"
          },
          "targetType": {
            "description": "target type",
            "example": "vv",
            "nullable": true,
            "type": "string"
          },
          "timestampms": {
            "items": {
              "description": "epoch timestamp",
              "example": 1605063600,
              "format": "int64",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "offlineClone": {
        "description": "Offline clone of a volume.",
        "nullable": true,
        "properties": {
          "createVolume": {
            "description": "Create a new volume for clone.",
            "items": {
              "$ref": "#/components/schemas/createVolume"
            },
            "nullable": true
          },
          "enableResync": {
            "description": "Secify to save a snapshot for fast resynchronization.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "useExistingVolume": {
            "description": "Secify to use existing volume or create a new volume for clone.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "onlineClone": {
        "description": "Online clone of a volume.",
        "nullable": true,
        "properties": {
          "autoLun": {
            "description": "Secify to use auto lun number.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "destinationCpg": {
            "description": "Name of the User CPG",
            "example": "SSD_r6",
            "nullable": true,
            "type": "string"
          },
          "hostGroupId": {
            "description": "Unique identifier of host group.",
            "example": "fd3244ef7f1ab8bd16500c7a41bdf8f8",
            "nullable": true,
            "type": "string"
          },
          "lun": {
            "description": "LUN of volume.",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "parameters": {
        "description": "System parameters",
        "nullable": true,
        "properties": {
          "ServiceProcessorCookie": {
            "description": "Service processor cookie",
            "example": "SPMXN5442108",
            "nullable": true,
            "type": "string"
          },
          "allowDomainUsersAffectNoDomain": {
            "nullable": true,
            "type": "boolean"
          },
          "allowSSZ": {
            "description": "Enables or disables support for using the -ssz option during CPG creation",
            "nullable": true,
            "type": "boolean"
          },
          "allowWrtbackSingleNode": {
            "description": "Allow writeback single node setting in days",
            "example": 7,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "allowWrtbackUpgrade": {
            "description": "Allow the system to continue caching when in a single node state during an upgrade for up to the specified number of days",
            "example": 7,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "autoAdmitTune": {
            "description": "Enables or disables automatic rebalancing when admithw detects new disks. Only applies to 2-node systems",
            "nullable": true,
            "type": "boolean"
          },
          "autoExportAfterReboot": {
            "description": "Enables or disables automatically exporting vluns after a reboot. If disabled, vluns and host ports will not become active after a reboot until \"setsysmgr export_vluns\" is issued.",
            "nullable": true,
            "type": "boolean"
          },
          "complianceOfficerApproval": {
            "description": "Specifies whether to enable or disable the compliance officer approval mode.",
            "nullable": true,
            "type": "boolean"
          },
          "disableChunkletInitUNMAP": {
            "description": "Flag to know if the ChunkletInitUNMAP is disabled",
            "nullable": true,
            "type": "boolean"
          },
          "enableAIQoS": {
            "description": "Enable or disable AI QoS feature, values are:yes or no",
            "example": "yes",
            "nullable": true,
            "type": "string"
          },
          "eventLogNum": {
            "description": "The number of event log files",
            "example": 1,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "eventLogSize": {
            "description": "The size of the event log file",
            "example": "4M",
            "nullable": true,
            "type": "string"
          },
          "failoverMatchedSet": {
            "description": "When using Matched Set VLUN templates for exports and Persistent Ports together, you must enable this parameter. The default for this setting is disabled",
            "nullable": true,
            "type": "boolean"
          },
          "fcRawSpaceAlert": {
            "description": "FC raw space alert setting in MiB",
            "example": 1,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "hostDIF": {
            "description": "Host Data Integrity Field type are:yes or no",
            "example": "yes",
            "nullable": true,
            "type": "string"
          },
          "hostDIFTemplate": {
            "description": "HostDIF Template",
            "enum": [
              "NO_HOST_DIF",
              "THREEPAR_HOST_DIF",
              "STD_HOST_DIF",
              "HBA_HOST_DIF",
              null
            ],
            "example": "STD_HOST_DIF",
            "nullable": true,
            "type": "string"
          },
          "maxVolumeRetention": {
            "description": "Maximum global volume retention policy in seconds",
            "example": 1209600,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "nlRawSpaceAlert": {
            "description": "NL raw space alert setting in MiB",
            "example": 0,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "overprovRatioLimit": {
            "description": "Over provisioning ratio limit setting",
            "example": 0,
            "nullable": true,
            "type": "number"
          },
          "overprovRatioWarning": {
            "description": "Over provisioning ratio warning setting",
            "example": 0,
            "nullable": true,
            "type": "number"
          },
          "personaProfile": {
            "description": "If set to 'block-preferred' File persona is supported. The default is 'block-only'",
            "example": "block-only",
            "nullable": true,
            "type": "string"
          },
          "portFailoverEnabled": {
            "description": "Enables or disables the automatic failover of target ports to their designated partner ports",
            "nullable": true,
            "type": "boolean"
          },
          "r6LayoutVersion": {
            "description": "RAID6 implementation version in use",
            "example": "Default",
            "nullable": true,
            "type": "string"
          },
          "remoteCopyHostThrottling": {
            "description": "Enables or disables Remote Copy throttling policy for host IO replicated in asynchronous streaming mode",
            "nullable": true,
            "type": "boolean"
          },
          "remoteSysLog": {
            "description": "Remote Syslog Enabled/Disabled",
            "example": 0,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "remoteSysLogHost": {
            "description": "Host details for Remote Syslog",
            "example": "0.0.0.0",
            "nullable": true,
            "type": "string"
          },
          "remoteSysLogSecurityHost": {
            "description": "Security Host details for Remote Syslog",
            "example": "0.0.0.0",
            "nullable": true,
            "type": "string"
          },
          "sessionTimeout": {
            "description": "Idle session timeout for a CLI session",
            "example": 3600,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "singleLunHost": {
            "description": "Enables or disables support to limit volume exports such that each volume can only be exported to a given host one time",
            "nullable": true,
            "type": "boolean"
          },
          "ssdRawSpaceAlert": {
            "description": "SSD raw space alert setting in MiB",
            "example": 0,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "thermalShutdown": {
            "description": "Enables or disables a system shutdown when the temperature gets too hot",
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "partner": {
        "nullable": true,
        "properties": {
          "nodeWwnOrName": {
            "description": "Node WWN (for FC) or iSCSI name (for iSCSI)  `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "portWwnOrIp": {
            "description": "Port WWN (for FC) or IP address (for iSCSI)  `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/partnerPortPosition"
          }
        },
        "type": "object"
      },
      "partnerPort": {
        "nullable": true,
        "properties": {
          "nodeWwnOrName": {
            "description": "Node WWN (for FC) or iSCSI name (for iSCSI)",
            "nullable": true,
            "type": "string"
          },
          "portWwnOrIp": {
            "description": "Port WWN (for FC) or IP address (for iSCSI)",
            "nullable": true,
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/partnerPortPosition"
          }
        },
        "type": "object"
      },
      "partnerPortPosition": {
        "nullable": true,
        "properties": {
          "node": {
            "description": "Port position node number",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "port": {
            "description": "Port position port number",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "slot": {
            "description": "Port position slot number",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "perfData": {
        "description": "Performance stats for the device",
        "nullable": true,
        "properties": {
          "avgOf1day": {
            "description": "last one day avg data",
            "example": 33.65,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "avgOf1hour": {
            "description": "last one hour avg data",
            "example": 40.4,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "avgOf8hours": {
            "description": "last 8 hours avg data",
            "example": 50.98,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "avgOflatest": {
            "description": "latest perf data",
            "example": 3.4,
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "perfStats": {
        "description": "Collection of average cpu percentage and average cache percentage for various durations.",
        "nullable": true,
        "properties": {
          "cachePercentage": {
            "$ref": "#/components/schemas/perfData"
          },
          "cpuPercentage": {
            "$ref": "#/components/schemas/perfData"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for detailed performance stats object",
            "example": "v1/storage-systems/device-type1/7CE751P312/component-performance-statistics",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "performanceHeadroom": {
        "description": "System performance Headroom",
        "nullable": true,
        "properties": {
          "availableHeadroom": {
            "description": "Available Headroom on the systems (High Medium or Low)",
            "example": "Low",
            "nullable": true,
            "type": "string"
          },
          "utilization": {
            "description": "Utilization in percentage",
            "example": 10,
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "pmPerfData": {
        "description": "Performance metrics average values",
        "nullable": true,
        "properties": {
          "avgOf1day": {
            "description": "last one day avg data",
            "example": 33.65,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "avgOf1hour": {
            "description": "last one hour avg data",
            "example": 40.4,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "avgOf8hours": {
            "description": "last 8 hours avg data",
            "example": 50.98,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "avgOfLatest": {
            "description": "latest perf data",
            "example": 3.4,
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "policy": {
        "nullable": true,
        "properties": {
          "fileService": {
            "nullable": true,
            "type": "boolean"
          },
          "hostDif3par": {
            "nullable": true,
            "type": "boolean"
          },
          "hostDifStd": {
            "nullable": true,
            "type": "boolean"
          },
          "noCache": {
            "nullable": true,
            "type": "boolean"
          },
          "oneHost": {
            "nullable": true,
            "type": "boolean"
          },
          "staleSnapshot": {
            "nullable": true,
            "type": "boolean"
          },
          "system": {
            "nullable": true,
            "type": "boolean"
          },
          "zeroDetect": {
            "nullable": true,
            "type": "boolean"
          },
          "zeroFill": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "poolCapacityHistory": {
        "description": "capacity performance trends for given granularity",
        "nullable": true,
        "properties": {
          "count": {
            "description": "count of series data",
            "example": 127,
            "nullable": true,
            "type": "integer"
          },
          "requestURI": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type2/00473102de2f5f39d8000000000000000000000001/storage-pools/37473102de2f5f39d8000000000000000000000027/capacity-history",
            "nullable": true,
            "type": "string"
          },
          "series_data": {
            "items": {
              "$ref": "#/components/schemas/nimblecapacitySeriesData"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "poolsprimeraAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/api/v1/storage-systems/device-type1/7CE809P009",
            "type": "storage-systems"
          },
          {
            "resourceUri": "/api/v1/storage-systems/device-type1/7CE809P009/storage-pools/8fdba044f8d90c7922c17b9340b65178/volumes",
            "type": "volumes"
          }
        ],
        "items": {
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "portClearInput": {
        "nullable": true,
        "properties": {
          "ipType": {
            "description": "For RCIP ports, the IP version of the address that needs to be cleared from the port. Either the IPv4 address or IPv6 address or both addresses can be cleared. Possible values: v4,v6,both",
            "example": "v6",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "portDetails": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/portsAssociatedLinks"
          },
          "cardType": {
            "$ref": "#/components/schemas/cardType"
          },
          "class": {
            "description": "Fibre Channel class (can be either 2 or 3)",
            "nullable": true,
            "type": "integer"
          },
          "class2": {
            "description": "Class2 state and configuration",
            "nullable": true,
            "type": "string"
          },
          "config": {
            "description": "Configuration state of port",
            "example": "valid",
            "nullable": true,
            "type": "string"
          },
          "configMode": {
            "description": "Connection mode of the port",
            "nullable": true,
            "type": "string"
          },
          "connectionType": {
            "description": "port connection type",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/7CE751P312/ports/220fcd48857f63c0f354c6723ec5d5cb",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "devices": {
            "$ref": "#/components/schemas/connectedDevices"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "nullable": true,
            "type": "string"
          },
          "failoverStatus": {
            "description": "Failover status of this port and the partner",
            "nullable": true,
            "type": "string"
          },
          "fcData": {
            "$ref": "#/components/schemas/portFC"
          },
          "fwVersion": {
            "description": "Firmware version",
            "example": "12.2.396.1",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource",
            "example": "9d765763116c20a508e8996f2a10821d",
            "nullable": true,
            "type": "string"
          },
          "initiatorPorts": {
            "$ref": "#/components/schemas/initiatorPort"
          },
          "interuptCoalesce": {
            "description": "Interupt Coalesce",
            "nullable": true,
            "type": "string"
          },
          "ipData": {
            "$ref": "#/components/schemas/portIP"
          },
          "iscsiData": {
            "$ref": "#/components/schemas/portISCSI"
          },
          "label": {
            "description": "Label",
            "example": "IP0",
            "nullable": true,
            "type": "string"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "mode": {
            "description": "Current mode the port is in",
            "nullable": true,
            "type": "string"
          },
          "modeChange": {
            "description": "Indicates if the mode change is allowed or prohibited",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the resource",
            "nullable": true,
            "type": "string"
          },
          "nodeCardId": {
            "description": "Unique Identifier of the node adapter card",
            "nullable": true,
            "type": "string"
          },
          "nodeId": {
            "description": "Unique Identifier of the node",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "partner": {
            "$ref": "#/components/schemas/partnerPort"
          },
          "portSfp": {
            "$ref": "#/components/schemas/portSfp"
          },
          "portType": {
            "description": "Type of the port based on the device it is connected to",
            "nullable": true,
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/portPosition"
          },
          "protocol": {
            "description": "Current protocol the port is in",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for detailed ports object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/ports/220fcd48857f63c0f354c6723ec5d5cb",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed ports object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/ports/220fcd48857f63c0f354c6723ec5d5cb",
            "nullable": true,
            "type": "string"
          },
          "revision": {
            "description": "Revision of the Host Bus Adapter",
            "nullable": true,
            "type": "string"
          },
          "smartSAN": {
            "description": "Smart SAN status",
            "nullable": true,
            "type": "string"
          },
          "speedActual": {
            "description": "Actual speed that port is running at",
            "nullable": true,
            "type": "string"
          },
          "speedConfigured": {
            "description": "Speed that is configured to run as",
            "nullable": true,
            "type": "string"
          },
          "speedMax": {
            "description": "Maximum speed that port can run at",
            "nullable": true,
            "type": "string"
          },
          "speedMin": {
            "description": "Minimum speed that port can run at",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "stateDescription": {
            "$ref": "#/components/schemas/stateDescription"
          },
          "systemId": {
            "description": "SystemUid / SerialNumber of the array",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "tgtModeWriteOpt": {
            "description": "Target mode write optimization setting",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "uniqueWWN": {
            "description": "Unique WWN setting",
            "nullable": true,
            "type": "string"
          },
          "vlans": {
            "items": {
              "$ref": "#/components/schemas/vlan"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "portEnableInput": {
        "description": "Request body for port enable/disable",
        "nullable": false,
        "properties": {
          "portEnable": {
            "description": "Port enable true or false",
            "example": true,
            "nullable": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "portFC": {
        "nullable": true,
        "properties": {
          "nodeWWN": {
            "description": "nodeWWN of the FC port",
            "nullable": true,
            "type": "string"
          },
          "portWWN": {
            "description": "portWWN of the FC port",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "portFCEdit": {
        "nullable": false,
        "properties": {
          "configMode": {
            "description": "Configuration of Port. Possible Values: Disk, Host, RCFC, Peer",
            "example": "Host",
            "nullable": true,
            "type": "string"
          },
          "connectionType": {
            "description": "Port connection Type. Possible Values: Point, Loop",
            "example": "Loop",
            "nullable": true,
            "type": "string"
          },
          "interuptCoalesce": {
            "description": "Port interuptCoalesce enabled or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "label": {
            "description": "Port name",
            "example": "FCPort1",
            "nullable": false,
            "type": "string"
          },
          "speedConfigured": {
            "description": "Port speed. Possible Values: auto, \"4\", \"8\", \"16\", \"32\"",
            "example": "8",
            "nullable": true,
            "type": "string"
          },
          "uniqueWWN": {
            "description": "Port uniquewwn enabled or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "vcn": {
            "description": "VLUN change notification enabled or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "portIP": {
        "nullable": true,
        "properties": {
          "autoneg": {
            "description": "Auto negotiation state of IP port",
            "nullable": true,
            "type": "boolean"
          },
          "duplex": {
            "description": "Duplex state of IP port",
            "nullable": true,
            "type": "string"
          },
          "gatewayAddress": {
            "description": "Gateway Address of IP port",
            "nullable": true,
            "type": "string"
          },
          "gatewayAddressV6": {
            "description": "Gateway Address of IP port",
            "nullable": true,
            "type": "string"
          },
          "ipAddress": {
            "description": "IP address of IP port",
            "nullable": true,
            "type": "string"
          },
          "ipAddressV6": {
            "description": "IP address of IP port",
            "nullable": true,
            "type": "string"
          },
          "macAddress": {
            "description": "IP address of IP port",
            "nullable": true,
            "type": "string"
          },
          "mtu": {
            "description": "Maximum transmission unit (MTU) size",
            "nullable": true,
            "type": "string"
          },
          "subnetMask": {
            "description": "NetMask of IP port",
            "nullable": true,
            "type": "string"
          },
          "subnetMaskV6": {
            "description": "NetMask of IP port",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "portISCSI": {
        "nullable": true,
        "properties": {
          "gatewayAddress": {
            "description": "Gateway Address of iSCSI port",
            "nullable": true,
            "type": "string"
          },
          "iSNSPrimaryAddress": {
            "description": "Primary iSNS address",
            "nullable": true,
            "type": "string"
          },
          "iSNSTcpPort": {
            "description": "iSNS TCP port",
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "ipAddress": {
            "description": "IP address of iSCSI port",
            "nullable": true,
            "type": "string"
          },
          "iscsiName": {
            "description": "iSCSI name of iSCSI port",
            "nullable": true,
            "type": "string"
          },
          "macAddress": {
            "description": "IP address of iSCSI port",
            "nullable": true,
            "type": "string"
          },
          "mtu": {
            "description": "Maximum transmission unit (MTU) size",
            "nullable": true,
            "type": "string"
          },
          "sendTargetGroupTag": {
            "description": "Send target group of the iSCSI port",
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "subnetMask": {
            "description": "NetMask of iSCSI port",
            "nullable": true,
            "type": "string"
          },
          "supportsVlan": {
            "description": "Indicates if the port support VLAN",
            "nullable": true,
            "type": "boolean"
          },
          "targetPortalGroupTag": {
            "description": "Target portal group of the iSCSI port",
            "format": "int32",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "portISCSIEdit": {
        "nullable": false,
        "properties": {
          "gatewayAddress": {
            "description": "Gateway address to edit to",
            "example": "255.255.255.0",
            "format": "ipv4",
            "nullable": true,
            "type": "string"
          },
          "ipAddress": {
            "description": "IP address to edit to",
            "example": "192.168.193.21",
            "format": "ipv4",
            "nullable": false,
            "type": "string"
          },
          "label": {
            "description": "label of the port to edit to",
            "example": "port_123",
            "nullable": true,
            "type": "string"
          },
          "mtu": {
            "description": "MTU to edit to. Possible Values: \"1500\", \"9000\"",
            "example": "1500",
            "nullable": false,
            "type": "string"
          },
          "netMask": {
            "description": "NetMask address to edit to",
            "example": "255.255.255.0",
            "format": "ipv4",
            "nullable": false,
            "type": "string"
          },
          "sendTargetGroupTag": {
            "example": 13,
            "format": "Uint32",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "portISCSIPing": {
        "nullable": false,
        "properties": {
          "ipAddress": {
            "description": "IP Address to ping",
            "example": "192.168.193.32",
            "format": "ipv4",
            "nullable": false,
            "type": "string"
          },
          "ipAddressv6": {
            "description": "IP Address to ping",
            "example": "2001:db8:abcd:12:ffff:ffff:ffff:ff16",
            "format": "ipv6",
            "nullable": false,
            "type": "string"
          },
          "pingCount": {
            "description": "ping count",
            "example": 4,
            "nullable": false,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "portPosition": {
        "nullable": true,
        "properties": {
          "node": {
            "description": "Port position node number `Filter, Sort`",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "port": {
            "description": "Port position port number `Filter, Sort`",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "slot": {
            "description": "Port position slot number `Filter, Sort`",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "portRCIPEdit": {
        "nullable": false,
        "properties": {
          "gatewayAddress": {
            "description": "Gateway address to edit to for IPv4 address",
            "example": "255.255.255.0",
            "format": "ipv4",
            "nullable": true,
            "type": "string"
          },
          "gatewayAddressV6": {
            "description": "Gateway address to edit to for IPv6 address",
            "example": "FE80::1",
            "nullable": true,
            "type": "string"
          },
          "ipAddress": {
            "description": "IPv4 address to edit to",
            "example": "192.168.193.21",
            "format": "ipv4",
            "nullable": true,
            "type": "string"
          },
          "ipAddressV6": {
            "description": "IPv6 address to edit to",
            "example": "2001:db8:abcd:12:ffff:ffff:ffff:ff16",
            "nullable": true,
            "type": "string"
          },
          "label": {
            "deprecated": true,
            "description": "label of the port to edit to",
            "example": "port_123",
            "nullable": true,
            "type": "string"
          },
          "mtu": {
            "description": "MTU to edit to. Possible Values: \"1500\", \"9000\"",
            "example": "1500",
            "nullable": false,
            "type": "string"
          },
          "netMask": {
            "description": "NetMask address to edit to for IPv4 address",
            "example": "255.255.255.0",
            "format": "ipv4",
            "nullable": true,
            "type": "string"
          },
          "netMaskV6": {
            "description": "NetMask address to edit to for IPv6 address",
            "example": "64",
            "nullable": true,
            "type": "string"
          },
          "speedConfigured": {
            "description": "Configured speed. Possible Values: auto, \"1\", \"2\", \"4\", \"8\", \"16\", \"32\"",
            "example": "1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "portRCIPPing": {
        "nullable": false,
        "properties": {
          "PacketSize": {
            "description": "Packet size of the ping",
            "example": 4,
            "nullable": false,
            "type": "integer"
          },
          "WaitTime": {
            "description": "Wait time",
            "example": 100,
            "nullable": false,
            "type": "integer"
          },
          "ipAddress": {
            "description": "IP Address to ping",
            "example": "192.168.193.32",
            "format": "ipv4",
            "nullable": false,
            "type": "string"
          },
          "ipAddressv6": {
            "description": "IP Address to ping",
            "example": "2001:db8:abcd:12:ffff:ffff:ffff:ff16",
            "format": "ipv6",
            "nullable": false,
            "type": "string"
          },
          "pingCount": {
            "description": "ping count",
            "example": 4,
            "nullable": false,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "portSfp": {
        "nullable": true,
        "properties": {
          "fwVersion": {
            "description": "Firmware version",
            "nullable": true,
            "type": "string"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "qualified": {
            "description": "Indicates if the SFP is qualified or not",
            "nullable": true,
            "type": "boolean"
          },
          "rxLossPin": {
            "$ref": "#/components/schemas/rxLossPin"
          },
          "rxPowerLow": {
            "description": "Indicates if RX power is low or not",
            "nullable": true,
            "type": "boolean"
          },
          "speed": {
            "description": "Speed in bits per second",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "supportDDM": {
            "description": "Indicates if the SFP supports DDM",
            "nullable": true,
            "type": "boolean"
          },
          "txDisablePin": {
            "$ref": "#/components/schemas/txDisablePin"
          },
          "txFaultPin": {
            "$ref": "#/components/schemas/txFaultPin"
          }
        },
        "type": "object"
      },
      "portsAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/v1/storage-systems/device-type1/7CE751P312",
            "type": "systems"
          },
          {
            "resourceUri": "/v1/storage-systems/device-type1/7CE751P312/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5",
            "type": "nodes"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "portsList": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/portsAssociatedLinks"
          },
          "cardType": {
            "$ref": "#/components/schemas/cardType"
          },
          "class": {
            "description": "Fibre Channel class (can be either 2 or 3)",
            "nullable": true,
            "type": "integer"
          },
          "class2": {
            "description": "Class2 state and configuration",
            "nullable": true,
            "type": "string"
          },
          "config": {
            "description": "Configuration state of port",
            "example": "valid",
            "nullable": true,
            "type": "string"
          },
          "configMode": {
            "description": "Connection mode of the port",
            "nullable": true,
            "type": "string"
          },
          "connectionType": {
            "description": "port connection type",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "devices": {
            "$ref": "#/components/schemas/connectedDevices"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "nullable": true,
            "type": "string"
          },
          "failoverStatus": {
            "description": "Failover status of this port and the partner `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "fcData": {
            "$ref": "#/components/schemas/portFC"
          },
          "fwVersion": {
            "description": "Firmware version",
            "example": "12.2.396.1",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource `Filter`",
            "example": "9d765763116c20a508e8996f2a10821d",
            "nullable": true,
            "type": "string"
          },
          "initiatorPorts": {
            "$ref": "#/components/schemas/initiatorPort"
          },
          "interuptCoalesce": {
            "description": "Interupt Coalesce",
            "nullable": true,
            "type": "string"
          },
          "ipData": {
            "$ref": "#/components/schemas/portIP"
          },
          "iscsiData": {
            "$ref": "#/components/schemas/portISCSI"
          },
          "label": {
            "description": "Label `Filter, Sort`",
            "example": "IP0",
            "nullable": true,
            "type": "string"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "mode": {
            "description": "Current mode the port is in `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "modeChange": {
            "description": "Indicates if the mode change is allowed or prohibited",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the resource `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "nodeCardId": {
            "description": "Unique Identifier of the node adapter card",
            "nullable": true,
            "type": "string"
          },
          "nodeId": {
            "description": "Unique Identifier of the node `Filter`",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "nullable": true,
            "type": "string"
          },
          "partner": {
            "$ref": "#/components/schemas/partner"
          },
          "portSfp": {
            "$ref": "#/components/schemas/portSfp"
          },
          "portType": {
            "description": "Type of the port based on the device it is connected to `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/portPosition"
          },
          "protocol": {
            "description": "Current protocol the port is in `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed port object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/ports/220fcd48857f63c0f354c6723ec5d5cb",
            "nullable": true,
            "type": "string"
          },
          "revision": {
            "description": "Revision of the Host Bus Adapter",
            "nullable": true,
            "type": "string"
          },
          "smartSAN": {
            "description": "Smart SAN status",
            "nullable": true,
            "type": "string"
          },
          "speedActual": {
            "description": "Actual speed that port is running at  `Filter`",
            "nullable": true,
            "type": "string"
          },
          "speedConfigured": {
            "description": "Speed that is configured to run as",
            "nullable": true,
            "type": "string"
          },
          "speedMax": {
            "description": "Maximum speed that port can run at",
            "nullable": true,
            "type": "string"
          },
          "speedMin": {
            "description": "Minimum speed that port can run at",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "stateDescription": {
            "$ref": "#/components/schemas/stateDescription"
          },
          "systemId": {
            "description": "SystemUid/SerialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "tgtModeWriteOpt": {
            "description": "Target mode write optimization setting",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "uniqueWWN": {
            "description": "Unique WWN setting",
            "nullable": true,
            "type": "string"
          },
          "vlans": {
            "items": {
              "$ref": "#/components/schemas/vlan"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "portsSummaryList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/portsList"
            },
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed ports object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/ports",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of ports",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "primeraAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/device-type1/recommendations",
            "type": "recommendations"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/device-type1/supportsettings",
            "type": "support-settings"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/device-type1/telemetry",
            "type": "telemetry"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/device-type1/capacity-summary",
            "type": "system capacity"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/device-type1/network-settings",
            "type": "network-settings"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/device-type1/component-summary",
            "type": "component-summary"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/device-type1/certificates",
            "type": "certificates"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/device-type1/mail-settings",
            "type": "mail-settings"
          },
          {
            "resourceUri": "/api/v1/storage-systems/7CE751P312/device-type1/network-services",
            "type": "network-services"
          }
        ],
        "items": {
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "primeraPoolDetails": {
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/cpgAlert"
          },
          "allocationSettings": {
            "$ref": "#/components/schemas/allocation"
          },
          "aoConfigID": {
            "description": "Numeric ID of the AO config where the CPG is a member",
            "example": 1,
            "format": "int64",
            "type": "number"
          },
          "associatedLinks": {
            "$ref": "#/components/schemas/poolsprimeraAssociatedLinks"
          },
          "baseSizeMiB": {
            "description": "Number of LD MiB used in base virtual volumes",
            "example": 67584,
            "type": "integer"
          },
          "baseSizePrivateMiB": {
            "description": "Number of LD MiB private to individual base virtual volumes, not shared by deduplication",
            "example": 1215872,
            "format": "Uint64",
            "type": "number"
          },
          "baseSizeRawMiB": {
            "description": "Number of physical (raw) MiB used in base virtual volumes",
            "example": 90111,
            "format": "Uint64",
            "type": "number"
          },
          "compactRatio": {
            "description": "Ratio between the virtual sizes of all volumes in the CPG and the amount of disk space they are currently using",
            "example": 5.722643930878938,
            "format": "float64",
            "type": "number"
          },
          "compressRatio": {
            "description": "Ratio between the amount of data written to Dedup Volumes and the amount that is not duplicated",
            "example": 4.233684210526316,
            "format": "float64",
            "type": "number"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dataReduceRatio": {
            "description": "Ratio between the amount written to all volumes in the CPG and the amount of disk space used after compression and deduplication",
            "example": 2.25,
            "format": "float64",
            "type": "number"
          },
          "dedupCapable": {
            "description": "Indicates whether the CPG supports dedup",
            "example": true,
            "type": "boolean"
          },
          "dedupRatio": {
            "description": "Ratio between the amount of data written to Dedup Volumes and the amount that is not duplicated",
            "example": 2.2464644143676713,
            "format": "float64",
            "type": "number"
          },
          "dedupVersion": {
            "description": "Version of Dedup that is being used by volumes in the CPG",
            "nullable": true,
            "properties": {
              "default": {
                "nullable": true,
                "type": "string"
              },
              "key": {
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "CPG Vega_7_test",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Name of the domain that the CPG belongs to",
            "example": "testdomain",
            "type": "string"
          },
          "freeForAllocationMiB": {
            "description": "Estimated free space for volume allocation (MiB)",
            "example": 4141056,
            "format": "Uint64",
            "type": "number"
          },
          "freeSizeMiB": {
            "description": "Number of LD MiB allocated and available in the CPG",
            "example": 44672,
            "format": "Uint64",
            "type": "number"
          },
          "freeSizeRawMiB": {
            "description": "Number of physical (raw) MiB allocated and available in the CPG",
            "example": 16896,
            "format": "Uint64",
            "type": "number"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource          ",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "type": "string"
          },
          "name": {
            "description": "Name of the resource",
            "example": "Vega_7_test",
            "maxLength": 255,
            "type": "string"
          },
          "numberOfSnapRC": {
            "description": "Number of VVs used for Remote copy snapshot CPG usage",
            "example": 5,
            "format": "Uint32",
            "type": "number"
          },
          "numberOfTDVV": {
            "description": "Number of TDVVs using the CPG",
            "example": 14,
            "format": "Uint32",
            "type": "number"
          },
          "numberOfTPVV": {
            "description": "Number of TPVVs using the CPG",
            "example": 1062,
            "format": "Uint32",
            "type": "number"
          },
          "numberOfUserRC": {
            "description": "Number of VVs used for Remote copy user CPG usage",
            "example": 5,
            "format": "Uint32",
            "type": "number"
          },
          "overProvRatio": {
            "description": "Ratio between the virtual sizes of all volumes and the amount of used and free disk spaces",
            "example": 0.58,
            "format": "float64",
            "type": "number"
          },
          "resourceUri": {
            "description": "resourceUri for detailed storage-pool object",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/storage-pools/8fdba044f8d90c7922c17b9340b65178",
            "type": "string"
          },
          "saGrow": {
            "$ref": "#/components/schemas/cpgGrow"
          },
          "sdGrow": {
            "$ref": "#/components/schemas/cpgGrow"
          },
          "sharedSizeMiB": {
            "description": "Number of LD MiB shared between volumes via deduplication",
            "example": 512,
            "format": "Uint64",
            "type": "number"
          },
          "snapSizePrivateMiB": {
            "description": "Number of LD MiB private to individual snapshot virtual volumes, not shared by deduplication",
            "example": 526848,
            "format": "Uint64",
            "type": "number"
          },
          "snapSizeRawMiB": {
            "description": "Number of physical (raw) MiB used in snapshot virtual volumes",
            "example": 56831,
            "format": "Uint64",
            "type": "number"
          },
          "snapSpaceAdmin": {
            "$ref": "#/components/schemas/snapSpace"
          },
          "snapSpaceData": {
            "$ref": "#/components/schemas/snapSpace"
          },
          "state": {
            "$ref": "#/components/schemas/state"
          },
          "storagePoolId": {
            "description": "Numeric ID of the resource",
            "example": 4,
            "format": "int64",
            "type": "number"
          },
          "systemId": {
            "description": "SystemID of the array",
            "example": "7CE809P009",
            "type": "string"
          },
          "totalReservedMiB": {
            "description": "Total amount of space reserved by CPG  (MiB)",
            "example": 1806336,
            "format": "Uint64",
            "type": "number"
          },
          "totalSizeMiB": {
            "description": "Total logical capacity in the user/snapshot space (MiB)",
            "example": 122880,
            "type": "integer"
          },
          "totalSizeRawMiB": {
            "description": "Total physical (raw) MiB in the user/snapshot space",
            "example": 163839,
            "format": "Uint64",
            "type": "number"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "userSpace": {
            "$ref": "#/components/schemas/snapSpace"
          },
          "warnPercent": {
            "description": "Allocation warning percentage",
            "example": 5,
            "format": "Uint32",
            "type": "number"
          }
        },
        "type": "object"
      },
      "primeraPoolList": {
        "nullable": true,
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/cpgAlert"
          },
          "allocationSettings": {
            "$ref": "#/components/schemas/allocation"
          },
          "aoConfigID": {
            "description": "Numeric ID of the AO config where the CPG is a member",
            "example": 1,
            "format": "int64",
            "type": "number"
          },
          "baseSizeMiB": {
            "description": "Number of LD MiB used in base virtual volumes",
            "example": 67584,
            "type": "integer"
          },
          "baseSizePrivateMiB": {
            "description": "Number of LD MiB private to individual base virtual volumes, not shared by deduplication",
            "example": 1215872,
            "format": "Uint64",
            "type": "number"
          },
          "baseSizeRawMiB": {
            "description": "Number of physical (raw) MiB used in base virtual volumes",
            "example": 90111,
            "format": "Uint64",
            "type": "number"
          },
          "compactRatio": {
            "description": "Ratio between the virtual sizes of all volumes in the CPG and the amount of disk space they are currently using",
            "example": 5.722643930878938,
            "format": "float64",
            "type": "number"
          },
          "compressRatio": {
            "description": "Ratio between the amount of data written to Dedup Volumes and the amount that is not duplicated",
            "example": 4.233684210526316,
            "format": "float64",
            "type": "number"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dataReduceRatio": {
            "description": "Ratio between the amount written to all volumes in the CPG and the amount of disk space used after compression and deduplication",
            "example": 2.25,
            "format": "float64",
            "type": "number"
          },
          "dedupCapable": {
            "description": "Indicates whether the CPG supports dedup",
            "example": true,
            "type": "boolean"
          },
          "dedupRatio": {
            "description": "Ratio between the amount of data written to Dedup Volumes and the amount that is not duplicated",
            "example": 2.2464644143676713,
            "format": "float64",
            "type": "number"
          },
          "dedupVersion": {
            "description": "Version of Dedup that is being used by volumes in the CPG",
            "nullable": true,
            "properties": {
              "default": {
                "nullable": true,
                "type": "string"
              },
              "key": {
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "CPG Vega_7_test",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Name of the domain that the CPG belongs to",
            "example": "testdomain",
            "type": "string"
          },
          "freeForAllocationMiB": {
            "description": "Estimated free space for volume allocation (MiB)",
            "example": 4141056,
            "format": "Uint64",
            "type": "number"
          },
          "freeSizeMiB": {
            "description": "Number of LD MiB allocated and available in the CPG",
            "example": 44672,
            "format": "Uint64",
            "type": "number"
          },
          "freeSizeRawMiB": {
            "description": "Number of physical (raw) MiB allocated and available in the CPG",
            "example": 16896,
            "format": "Uint64",
            "type": "number"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource          ",
            "example": "e9d353bf98fc1a6bdb90b824e3ca14b5",
            "type": "string"
          },
          "name": {
            "description": "Name of the resource",
            "example": "Vega_7_test",
            "maxLength": 255,
            "type": "string"
          },
          "numberOfSnapRC": {
            "description": "Number of VVs used for Remote copy snapshot CPG usage",
            "example": 5,
            "format": "Uint32",
            "type": "number"
          },
          "numberOfTDVV": {
            "description": "Number of TDVVs using the CPG",
            "example": 14,
            "format": "Uint32",
            "type": "number"
          },
          "numberOfTPVV": {
            "description": "Number of TPVVs using the CPG",
            "example": 1062,
            "format": "Uint32",
            "type": "number"
          },
          "numberOfUserRC": {
            "description": "Number of VVs used for Remote copy user CPG usage",
            "example": 5,
            "format": "Uint32",
            "type": "number"
          },
          "overProvRatio": {
            "description": "Ratio between the virtual sizes of all volumes and the amount of used and free disk spaces",
            "example": 0.58,
            "format": "float64",
            "type": "number"
          },
          "resourceUri": {
            "description": "resourceUri for detailed storage-pool object",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/storage-pools/8fdba044f8d90c7922c17b9340b65178",
            "type": "string"
          },
          "saGrow": {
            "$ref": "#/components/schemas/cpgGrow"
          },
          "sdGrow": {
            "$ref": "#/components/schemas/cpgGrow"
          },
          "sharedSizeMiB": {
            "description": "Number of LD MiB shared between volumes via deduplication",
            "example": 512,
            "format": "Uint64",
            "type": "number"
          },
          "snapSizePrivateMiB": {
            "description": "Number of LD MiB private to individual snapshot virtual volumes, not shared by deduplication",
            "example": 526848,
            "format": "Uint64",
            "type": "number"
          },
          "snapSizeRawMiB": {
            "description": "Number of physical (raw) MiB used in snapshot virtual volumes",
            "example": 56831,
            "format": "Uint64",
            "type": "number"
          },
          "snapSpaceAdmin": {
            "$ref": "#/components/schemas/snapSpace"
          },
          "snapSpaceData": {
            "$ref": "#/components/schemas/snapSpace"
          },
          "state": {
            "$ref": "#/components/schemas/state"
          },
          "storagePoolId": {
            "description": "Numeric ID of the resource",
            "example": 4,
            "format": "int64",
            "type": "number"
          },
          "systemId": {
            "description": "SystemID of the array",
            "example": "7CE809P009",
            "type": "string"
          },
          "totalReservedMiB": {
            "description": "Total amount of space reserved by CPG  (MiB)",
            "example": 1806336,
            "format": "Uint64",
            "type": "number"
          },
          "totalSizeMiB": {
            "description": "Total logical capacity in the user/snapshot space (MiB)",
            "example": 122880,
            "type": "integer"
          },
          "totalSizeRawMiB": {
            "description": "Total physical (raw) MiB in the user/snapshot space",
            "example": 163839,
            "format": "Uint64",
            "type": "number"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "userSpace": {
            "$ref": "#/components/schemas/snapSpace"
          },
          "warnPercent": {
            "description": "Allocation warning percentage",
            "example": 5,
            "format": "Uint32",
            "type": "number"
          }
        },
        "type": "object"
      },
      "primeraPoolsSummaryList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/primeraPoolList"
            },
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "resourceUri for detailed storage-pool object",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/storage-pools",
            "type": "string"
          },
          "total": {
            "description": "Number of storage-pools",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "primeraStorageSystemDetail": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/primeraAssociatedLinks"
          },
          "centerplaneType": {
            "description": "Centerplane type",
            "example": "4 Node Centerplane",
            "nullable": true,
            "type": "string"
          },
          "chunkletSizeMiB": {
            "description": "Size of chunklet in MiB",
            "example": 1024,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "clusterLED": {
            "description": "Cluster LED state",
            "enum": [
              "LED_UNKNOWN",
              "LED_OFF",
              "LED_GREEN",
              "LED_GREEN_BLNK",
              "LED_AMBER",
              "LED_AMBER_BLNK",
              "LED_BLUE",
              "LED_BLUE_BLNK"
            ],
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "descriptors": {
            "$ref": "#/components/schemas/descriptors"
          },
          "deviceId": {
            "description": "Numeric ID of the resource",
            "example": 101780,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "deviceType": {
            "description": "device Type",
            "nullable": true,
            "properties": {
              "default": {
                "description": "Text in the default language",
                "example": "HPE_3PAR 8450",
                "nullable": true,
                "type": "string"
              },
              "key": {
                "description": "Key of the message",
                "example": "sys_type-41",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "displayname": {
            "description": "Array Display name",
            "example": "System VEGA_CB1507_8400_2N_150",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "nullable": true,
            "type": "string"
          },
          "fqdn": {
            "description": "Fully qualified domain name of the system",
            "example": "s9.in.hpecorp.net",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "SerialNumber/UUID string uniquely identifying the storage system object.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "inClusterNodes": {
            "description": "IDs of the nodes that are in cluster",
            "example": [
              0,
              1
            ],
            "items": {
              "format": "Uint64",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "isFIPSEnabled": {
            "description": "Flag for FIPS",
            "nullable": true,
            "type": "boolean"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "nullable": true,
            "type": "boolean"
          },
          "maintenanceMode": {
            "$ref": "#/components/schemas/maintenanceMode"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSingle"
          },
          "masterNode": {
            "description": "ID of the master node",
            "example": 4,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "minimumPasswordLength": {
            "description": "Minimum length of password for users",
            "example": 6,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the resource",
            "example": "VEGA_CB1507_8400_2N_150",
            "nullable": true,
            "type": "string"
          },
          "networkMasterNode": {
            "description": "The Node ID of the current network master",
            "example": 1,
            "format": "Uint32",
            "nullable": true,
            "type": "integer"
          },
          "nodeMemory": {
            "description": "Node memory size",
            "example": "16",
            "nullable": true,
            "type": "string"
          },
          "nodesCount": {
            "description": "Number of nodes in the system",
            "example": 2,
            "format": "Uint32",
            "nullable": true,
            "type": "integer"
          },
          "nodesPresent": {
            "description": "IDs of the nodes that are present",
            "example": [
              0,
              1
            ],
            "items": {
              "format": "Uint64",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "onlineNodes": {
            "description": "IDs of the nodes that are online",
            "example": [
              0,
              1
            ],
            "items": {
              "format": "Uint64",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "parameters": {
            "$ref": "#/components/schemas/parameters"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "description": "Indicates if the component is safe to remove",
            "nullable": true,
            "type": "boolean"
          },
          "softwareVersions": {
            "$ref": "#/components/schemas/softwareVersionsSolo"
          },
          "state": {
            "$ref": "#/components/schemas/systemState"
          },
          "sysLogStatus": {
            "$ref": "#/components/schemas/sysLogStatus"
          },
          "systemDate": {
            "description": "Current date of the system",
            "example": 1597918380,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "systemHeadroom": {
            "$ref": "#/components/schemas/systemHeadroom"
          },
          "systemWWN": {
            "description": "WWN of the array.",
            "example": "2FF70002AC018D94",
            "nullable": true,
            "type": "string"
          },
          "timezone": {
            "description": "Current timezone of the system.",
            "example": "Asia/Calcutta",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "uptime": {
            "$ref": "#/components/schemas/uptime"
          },
          "version": {
            "$ref": "#/components/schemas/version"
          }
        },
        "type": "object"
      },
      "primeraStorageSystemDetailList": {
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/primeraAssociatedLinks"
          },
          "centerplaneType": {
            "description": "Centerplane type",
            "example": "4 Node Centerplane",
            "nullable": true,
            "type": "string"
          },
          "chunkletSizeMiB": {
            "description": "Size of chunklet in MiB",
            "example": 1024,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "clusterLED": {
            "description": "Cluster LED state",
            "enum": [
              "LED_UNKNOWN",
              "LED_OFF",
              "LED_GREEN",
              "LED_GREEN_BLNK",
              "LED_AMBER",
              "LED_AMBER_BLNK",
              "LED_BLUE",
              "LED_BLUE_BLNK",
              null
            ],
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "descriptors": {
            "$ref": "#/components/schemas/descriptors"
          },
          "deviceId": {
            "description": "Numeric ID of the resource `Filter`",
            "example": 101780,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "deviceType": {
            "description": "device Type",
            "nullable": true,
            "properties": {
              "default": {
                "description": "Text in the default language",
                "example": "HPE_3PAR 8450",
                "nullable": true,
                "type": "string"
              },
              "key": {
                "description": "Key of the message",
                "example": "sys_type-41",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "displayname": {
            "description": "Array Display name",
            "example": "System VEGA_CB1507_8400_2N_150",
            "format": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "SystemWWN/UUID string uniquely identifying the storage system object. `Filter`",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "inClusterNodes": {
            "description": "IDs of the nodes that are in cluster",
            "example": [
              0,
              1
            ],
            "items": {
              "format": "Uint64",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "isFIPSEnabled": {
            "description": "Flag for FIPS",
            "nullable": true,
            "type": "boolean"
          },
          "locateEnabled": {
            "description": "Indicates if the locate beacon is enabled or not",
            "nullable": true,
            "type": "boolean"
          },
          "maintenanceMode": {
            "$ref": "#/components/schemas/maintenanceMode"
          },
          "manufacturing": {
            "$ref": "#/components/schemas/manufacturingSys"
          },
          "masterNode": {
            "description": "ID of the master node",
            "example": 4,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "minimumPasswordLength": {
            "description": "Minimum length of password for users",
            "example": 6,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Name of the resource `Filter, Sort`",
            "example": "VEGA_CB1507_8400_2N_150",
            "nullable": true,
            "type": "string"
          },
          "networkMasterNode": {
            "description": "The Node ID of the current network master `Filter, Sort`",
            "example": 1,
            "format": "Uint32",
            "nullable": true,
            "type": "integer"
          },
          "nodeMemory": {
            "description": "Node memory size",
            "example": "16",
            "nullable": true,
            "type": "string"
          },
          "nodesCount": {
            "description": "Number of nodes in the system",
            "example": 2,
            "format": "Uint32",
            "nullable": true,
            "type": "integer"
          },
          "nodesPresent": {
            "description": "IDs of the nodes that are present",
            "example": [
              0,
              1
            ],
            "items": {
              "format": "Uint64",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "onlineNodes": {
            "description": "IDs of the nodes that are online",
            "example": [
              0,
              1
            ],
            "items": {
              "format": "Uint64",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "overallState": {
            "description": "overallState state derived from enclosure, disk and node state For deviceType1 State derived from ports, enclosure, disk and node state for deviceType2 state is state reported by deviceType2 array `Filter, Sort`",
            "enum": [
              "NORMAL",
              "DEGRADED",
              null
            ],
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/parameters"
          },
          "resourceUri": {
            "description": "resourceUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "safeToRemove": {
            "description": "Indicates if the component is safe to remove",
            "nullable": true,
            "type": "boolean"
          },
          "softwareVersions": {
            "$ref": "#/components/schemas/softwareVersions"
          },
          "state": {
            "$ref": "#/components/schemas/systemState"
          },
          "sysLogStatus": {
            "$ref": "#/components/schemas/sysLogStatus"
          },
          "systemDate": {
            "description": "Current date of the system",
            "example": 1597918380,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "systemHeadroom": {
            "$ref": "#/components/schemas/systemHeadroom"
          },
          "systemWWN": {
            "description": "WWN of the array `Filter, Sort`",
            "example": "2FF70002AC018D94",
            "nullable": true,
            "type": "string"
          },
          "timezone": {
            "description": "Current timezone of the system",
            "example": "Asia/Calcutta",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "uptime": {
            "$ref": "#/components/schemas/uptime"
          },
          "version": {
            "$ref": "#/components/schemas/version"
          }
        },
        "type": "object"
      },
      "primeraStorageSystemList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/primeraStorageSystemDetailList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of systems",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "priority": {
        "description": "Priority of the task for promoting the snapshot. Defualts to MEDIUM.",
        "enum": [
          "PRIORITYTYPE_HIGH",
          "PRIORITYTYPE_MED",
          "PRIORITYTYPE_LOW"
        ],
        "example": "PRIORITYTYPE_HIGH",
        "nullable": true,
        "type": "string"
      },
      "private": {
        "nullable": true,
        "properties": {
          "reserved": {
            "nullable": true,
            "type": "number"
          },
          "reservedVVols": {
            "nullable": true,
            "type": "number"
          },
          "total": {
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "qosMetricSeriesData": {
        "nullable": true,
        "properties": {
          "bwLimitKbps": {
            "description": "throughput threshold at particular timestamp",
            "example": 10,
            "format": "int64",
            "nullable": true,
            "type": "number"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/001491cb6652a03a6b000000000000000000000001/qos/name",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "timestampms": {
            "description": "epoch timestamp",
            "example": 1605063600,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "wqlen": {
            "description": "wait qlen value at particular timestamp",
            "example": 10,
            "format": "int64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "qosMetricsData": {
        "description": "Timeseries data for particular metric type",
        "nullable": true,
        "properties": {
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/qosMetricSeriesData"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "total": {
            "description": "total number of series data",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "qosPerformanceHistory": {
        "description": "qos performance trends for given granularity and time range",
        "nullable": true,
        "properties": {
          "qosMetricsData": {
            "$ref": "#/components/schemas/qosMetricsData"
          },
          "requestURI": {
            "description": "requestUri for detailed storage object",
            "example": "/v1/storage-systems/device-type1/SGH014XGSP/targets/testtarget/performance-history",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "qosPolicy": {
        "description": "qos policy details for given time range",
        "nullable": true,
        "properties": {
          "qospolicyDetails": {
            "$ref": "#/components/schemas/qospolicyDetails"
          },
          "requestURI": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/SGH014XGSP/qos-policy",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "qospolicyDetails": {
        "description": "QoS policy details for given time range for a device",
        "nullable": true,
        "properties": {
          "qosCappedObjsData": {
            "$ref": "#/components/schemas/cappedObjData"
          },
          "qosUnCappedObjsData": {
            "$ref": "#/components/schemas/uncappedObjData"
          },
          "recvdTotal": {
            "description": "Total number of received QoS policy details for a device based on the given query parameters",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "total": {
            "description": "Total number of QoS policy details for a device based on the given query parameters",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "recommendation": {
        "description": "Reccomendations for the device",
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/sysAssociatedLinks"
          },
          "checkTime": {
            "$ref": "#/components/schemas/calendarTime"
          },
          "displayname": {
            "description": "Display name",
            "example": "HPE 3par",
            "format": "Any",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "SystemWWN/UUID string uniquely identifying the object.",
            "nullable": true,
            "type": "string"
          },
          "patches": {
            "items": {
              "$ref": "#/components/schemas/swRecommendedPackageId"
            }
          },
          "releases": {
            "items": {
              "$ref": "#/components/schemas/swRecommendedPackageId"
            }
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/recommendations",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/recommendations",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "updateTime": {
            "$ref": "#/components/schemas/calendarTime"
          }
        },
        "type": "object"
      },
      "recommendationInput": {
        "description": "Request body for creating provisioning Workflow",
        "nullable": true,
        "properties": {
          "hostGroupId": {
            "description": "host group id",
            "example": "a7c4e6593f51d0b98f0e40d7e6df04fd",
            "nullable": true,
            "type": "string"
          },
          "productFamily": {
            "description": "Storage device type",
            "nullable": true,
            "type": "string"
          },
          "sizeMib": {
            "description": "volume size requirement",
            "example": 16384,
            "nullable": false,
            "type": "integer"
          }
        },
        "required": [
          "sizeMib"
        ],
        "type": "object"
      },
      "recoveryPoint": {
        "description": "Shows last data sync time",
        "nullable": true,
        "properties": {
          "ms": {
            "description": "Epoch time in milliseconds",
            "example": 1591601529000,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "tz": {
            "description": "Time zone name",
            "example": "Local",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "rxLossPin": {
        "description": "RX loss pin position. If position is HI, RX loss of signal",
        "nullable": true,
        "properties": {
          "default": {
            "nullable": true,
            "type": "string"
          },
          "key": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "scAssociatedLinks": {
        "description": "Associated Links Details",
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "servicePorts": {
        "nullable": true,
        "properties": {
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "domain of the service port object",
            "example": "domain_name",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "uid (Unique identifier) for the service port object",
            "example": "f5306b97759d80aab4bb5dcdf28dfff3",
            "nullable": true,
            "type": "string"
          },
          "ipv4address": {
            "description": "ipv4address of the service port object `Filter`",
            "example": "169.254.77.160",
            "nullable": true,
            "type": "string"
          },
          "ipv4netmask": {
            "description": "ipv4 net mask of the service port object",
            "example": "255.255.0.0",
            "nullable": true,
            "type": "string"
          },
          "ipv6address": {
            "description": "ipv6address of the service port object `Filter`",
            "example": "fe80::cbf3:360d:9ad:996a",
            "nullable": true,
            "type": "string"
          },
          "ipv6vnetmask": {
            "description": "ipv6 net mask for the service port objectt",
            "example": "64",
            "nullable": true,
            "type": "string"
          },
          "mode": {
            "description": "mode for the service port object",
            "example": "Service",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "display name of the service port object",
            "example": "Name_1",
            "nullable": true,
            "type": "string"
          },
          "node": {
            "description": "node for the service port object",
            "example": "0",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed service ports object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/nodes/0/serviceports",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "servicePortsList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/servicePorts"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed volume set object",
            "example": "/v1/storage-systems/device-type1/{systemUid}/nodes/serviceports",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of serviceports.",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "snapSpace": {
        "description": "snapSpace information",
        "nullable": true,
        "properties": {
          "ldCount": {
            "description": "Number of Logical Disks",
            "example": 4,
            "format": "Uint64",
            "type": "number"
          },
          "totalMiB": {
            "description": "Total logical capacity (MiB)",
            "example": 83968,
            "format": "Uint64",
            "type": "number"
          },
          "totalRawMiB": {
            "description": "Total physical (raw) capacity (MiB)",
            "example": 251904,
            "format": "Uint64",
            "type": "number"
          },
          "usedMiB": {
            "description": "Used logical capacity (MiB)",
            "example": 75008,
            "format": "Uint64",
            "type": "number"
          },
          "usedRawMiB": {
            "description": "Used physical (raw) capacity (MiB)",
            "example": 225024,
            "format": "Uint64",
            "type": "number"
          }
        },
        "type": "object"
      },
      "snapshotSetsSummaryList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/snapshotsetsList"
            },
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed snapshots object",
            "example": "/v1/storage-systems/device-type1/2FF70002AC018D94/snapshots",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of snapshots",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "snapshotTdvvsize": {
        "description": "Note, will be updated at most once in an hour",
        "nullable": true,
        "properties": {
          "ddcSizeMiB": {
            "description": "Note, will be updated at most once in an hour",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "ddsSizeMiB": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "virtualSizeMiB": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "writtenSizeMiB": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "snapshotsList": {
        "properties": {
          "adminAllocationSettings": {
            "$ref": "#/components/schemas/userAllocationSettingsSingle"
          },
          "adminSpace": {
            "$ref": "#/components/schemas/space"
          },
          "baseId": {
            "description": "snapshot Tdvv Size",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "comment": {
            "description": "Comments",
            "nullable": true,
            "type": "string"
          },
          "compactEfficiency": {
            "description": "Compact Efficiency",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "compressionEfficiency": {
            "description": "Compression Efficiency",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "compressionPolicy": {
            "description": "compression policy",
            "nullable": true,
            "type": "string"
          },
          "conversionType": {
            "description": "Conversion Type of Volume",
            "enum": [
              "CONVERSIONTYPE_THIN",
              "CONVERSIONTYPE_DDS",
              "CONVERSIONTYPE_V1",
              "CONVERSIONTYPE_V2",
              null
            ],
            "nullable": true,
            "type": "string"
          },
          "copiedMB": {
            "description": "Copied MB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "copiedPerc": {
            "description": "Copied Perecentage",
            "nullable": true,
            "type": "integer"
          },
          "copyOfID": {
            "description": "Copy of ID",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "creationTime": {
            "description": "Creation Time `Sort`",
            "nullable": true,
            "properties": {
              "ms": {
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dataReduction": {
            "description": "Data Reduction type",
            "nullable": true,
            "type": "string"
          },
          "ddcSize": {
            "description": "Note, will be updated at most once in an hour",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "ddsSize": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "dedup": {
            "nullable": true,
            "type": "string"
          },
          "dedupSavingsSize": {
            "description": "Note, will be updated at most once in an hour",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "dedupWrittenSize": {
            "description": "Note, will be updated at most once in an hour",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "devType": {
            "description": "Device Type",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Display name of the volume",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain of the volume",
            "nullable": true,
            "type": "string"
          },
          "efficiencyUpdateTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "expirationTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "fullyProvisioned": {
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "headsPerCylinder": {
            "description": "Heads per Cylinder",
            "nullable": true,
            "type": "integer"
          },
          "healthState": {
            "description": "Health status of the Volume.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "hidden": {
            "description": "Flag to know if the Volume is hidden or not",
            "nullable": true,
            "type": "boolean"
          },
          "hostWrittenMiB": {
            "description": "Host written data size in MiB.",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "hostWrittenToVirtualPercent": {
            "description": "Host written to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "id": {
            "description": "UID of the snapshot. `Filter`",
            "example": "b7107a30-260a-41c1-a47f-e50770c414c9",
            "nullable": true,
            "type": "string"
          },
          "initiators": {
            "description": "Initiator details",
            "items": {
              "properties": {
                "deviceDiscoveredName": {
                  "description": "Host/HostGroup name on device.",
                  "example": "TEST11",
                  "nullable": true,
                  "type": "string"
                },
                "id": {
                  "description": "Resource id",
                  "example": "6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "resourceUri": {
                  "description": "Resource URI",
                  "example": "/v1/host-initiators/6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "example": "host-initiators",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "A user friendly name to identify the storage system volume (resourceName).",
            "example": "Finance",
            "nullable": true,
            "type": "string"
          },
          "parentID": {
            "description": "Parent Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "physParentID": {
            "description": "physical Parent Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "physicalCopy": {
            "nullable": true,
            "type": "boolean"
          },
          "policy": {
            "$ref": "#/components/schemas/policy"
          },
          "provType": {
            "description": "Provisioning type",
            "nullable": true,
            "type": "string"
          },
          "raid": {
            "description": "Raid",
            "nullable": true,
            "type": "string"
          },
          "rcopyStatus": {
            "description": "RemoteCopy Status",
            "nullable": true,
            "type": "string"
          },
          "readOnly": {
            "nullable": true,
            "type": "boolean"
          },
          "retentionTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "roChildID": {
            "description": "RO child id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "rwChildID": {
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "sectorsPerTrack": {
            "description": "Sector per Track",
            "nullable": true,
            "type": "integer"
          },
          "sharedParentId": {
            "description": "Shared Parent Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "sizeMiB": {
            "description": "Size in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "snapshotAllocLimit": {
            "description": "Snapshot alloc limit",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotAllocWarning": {
            "description": "Snapshot alloc Warning",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotAllocationSettings": {
            "$ref": "#/components/schemas/userAllocationSettingsSingle"
          },
          "snapshotCpgID": {
            "description": "Snapshot CPG Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotCpgName": {
            "description": "Snapshot CPG name",
            "nullable": true,
            "type": "string"
          },
          "snapshotId": {
            "description": "Numeric ID of the resource",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotSpace": {
            "$ref": "#/components/schemas/space"
          },
          "snapshotTdvvSize": {
            "$ref": "#/components/schemas/snapshotTdvvsize"
          },
          "snapshotType": {
            "nullable": true,
            "type": "string"
          },
          "snapshotUsedToVirtualPercent": {
            "description": "Snapshot used to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "spaceCalculationTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "started": {
            "nullable": true,
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemUid/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "thinProvisioned": {
            "description": "Thin provisioning details",
            "nullable": true,
            "type": "boolean"
          },
          "totalRawReservedMiB": {
            "description": "Total Raw Reserved Space in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "totalReservedMiB": {
            "description": "Description",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "totalSpaceMiB": {
            "description": "Total Space in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "unrefSpaceFreedTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "usedCapacity": {
            "description": "Used volume capacity.",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "usedSizeMiB": {
            "description": "Used Size in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "userAllocLimit": {
            "description": "User alloc limit",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userAllocWarning": {
            "description": "User alloc space limit warning",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userAllocationSettings": {
            "$ref": "#/components/schemas/userAllocationSettingsSingle"
          },
          "userCpgID": {
            "description": "User CPG Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userCpgName": {
            "description": "User CPG Name",
            "nullable": true,
            "type": "string"
          },
          "userReservedToVirtualPercent": {
            "description": "User reseved to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "userSpace": {
            "$ref": "#/components/schemas/space"
          },
          "userUsedToVirtualPercent": {
            "description": "User used to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "vlunSectorSize": {
            "description": "VLUN sector size",
            "nullable": true,
            "type": "integer"
          },
          "wwn": {
            "description": "Volume wwn.",
            "example": "60002AC0000000000000006B0001FFEB",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "snapshotsListSingle": {
        "properties": {
          "adminAllocationSettings": {
            "$ref": "#/components/schemas/userAllocationSettingsSingle"
          },
          "adminSpace": {
            "$ref": "#/components/schemas/space"
          },
          "baseId": {
            "description": "snapshot Tdvv Size",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "comment": {
            "description": "Comments",
            "nullable": true,
            "type": "string"
          },
          "compactEfficiency": {
            "description": "Compact Efficiency",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "compressionEfficiency": {
            "description": "Compression Efficiency",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "compressionPolicy": {
            "description": "compression policy",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/volumes/014f8f647893f228bcf8b7c3f7eebbc5/snapshots/e1892c0fb437d0aeef880124c2db9957",
            "nullable": true,
            "type": "string"
          },
          "conversionType": {
            "description": "Conversion Type of Volume",
            "enum": [
              "CONVERSIONTYPE_THIN",
              "CONVERSIONTYPE_DDS",
              "CONVERSIONTYPE_V1",
              "CONVERSIONTYPE_V2",
              null
            ],
            "nullable": true,
            "type": "string"
          },
          "copiedMB": {
            "description": "Copied MB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "copiedPerc": {
            "description": "Copied Perecentage",
            "nullable": true,
            "type": "integer"
          },
          "copyOfID": {
            "description": "Copy of ID",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "creationTime": {
            "description": "Creation Time `Sort`",
            "nullable": true,
            "properties": {
              "ms": {
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "dataReduction": {
            "description": "Data Reduction type",
            "nullable": true,
            "type": "string"
          },
          "ddcSize": {
            "description": "Note, will be updated at most once in an hour",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "ddsSize": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "dedup": {
            "nullable": true,
            "type": "string"
          },
          "dedupSavingsSize": {
            "description": "Note, will be updated at most once in an hour",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "dedupWrittenSize": {
            "description": "Note, will be updated at most once in an hour",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "devType": {
            "description": "Device Type",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Display name of the volume",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain of the volume",
            "nullable": true,
            "type": "string"
          },
          "efficiencyUpdateTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "expirationTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "fullyProvisioned": {
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "headsPerCylinder": {
            "description": "Heads per Cylinder",
            "nullable": true,
            "type": "integer"
          },
          "healthState": {
            "description": "Health status of the Volume.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "hidden": {
            "description": "Flag to know if the Volume is hidden or not",
            "nullable": true,
            "type": "boolean"
          },
          "hostWrittenMiB": {
            "description": "Host written data size in MiB.",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "hostWrittenToVirtualPercent": {
            "description": "Host written to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "id": {
            "description": "UID of the snapshot. `Filter`",
            "example": "b7107a30-260a-41c1-a47f-e50770c414c9",
            "nullable": true,
            "type": "string"
          },
          "initiators": {
            "description": "Initiator details",
            "items": {
              "properties": {
                "deviceDiscoveredName": {
                  "description": "Host/HostGroup name on device.",
                  "example": "TEST11",
                  "nullable": true,
                  "type": "string"
                },
                "id": {
                  "description": "Resource id",
                  "example": "6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "resourceUri": {
                  "description": "Resource URI",
                  "example": "/v1/host-initiators/6848ef683c27403e96caa51816ddc72c",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "example": "host-initiators",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "A user friendly name to identify the storage system volume (resourceName).",
            "example": "Finance",
            "nullable": true,
            "type": "string"
          },
          "parentID": {
            "description": "Parent Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "physParentID": {
            "description": "physical Parent Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "physicalCopy": {
            "nullable": true,
            "type": "boolean"
          },
          "policy": {
            "$ref": "#/components/schemas/policy"
          },
          "provType": {
            "description": "Provisioning type",
            "nullable": true,
            "type": "string"
          },
          "raid": {
            "description": "Raid",
            "nullable": true,
            "type": "string"
          },
          "rcopyStatus": {
            "description": "RemoteCopy Status",
            "nullable": true,
            "type": "string"
          },
          "readOnly": {
            "nullable": true,
            "type": "boolean"
          },
          "retentionTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "roChildID": {
            "description": "RO child id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "rwChildID": {
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "sectorsPerTrack": {
            "description": "Sector per Track",
            "nullable": true,
            "type": "integer"
          },
          "sharedParentId": {
            "description": "Shared Parent Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "sizeMiB": {
            "description": "Size in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "snapshotAllocLimit": {
            "description": "Snapshot alloc limit",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotAllocWarning": {
            "description": "Snapshot alloc Warning",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotAllocationSettings": {
            "$ref": "#/components/schemas/userAllocationSettingsSingle"
          },
          "snapshotCpgID": {
            "description": "Snapshot CPG Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotCpgName": {
            "description": "Snapshot CPG name",
            "nullable": true,
            "type": "string"
          },
          "snapshotId": {
            "description": "Numeric ID of the resource",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapshotSpace": {
            "$ref": "#/components/schemas/space"
          },
          "snapshotTdvvSize": {
            "$ref": "#/components/schemas/snapshotTdvvsize"
          },
          "snapshotType": {
            "nullable": true,
            "type": "string"
          },
          "snapshotUsedToVirtualPercent": {
            "description": "Snapshot used to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "spaceCalculationTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "started": {
            "nullable": true,
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/STATE"
          },
          "systemId": {
            "description": "SystemUid/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "thinProvisioned": {
            "description": "Thin provisioning details",
            "nullable": true,
            "type": "boolean"
          },
          "totalRawReservedMiB": {
            "description": "Total Raw Reserved Space in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "totalReservedMiB": {
            "description": "Description",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "totalSpaceMiB": {
            "description": "Total Space in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "unrefSpaceFreedTime": {
            "$ref": "#/components/schemas/calendar"
          },
          "usedCapacity": {
            "description": "Used volume capacity.",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "usedSizeMiB": {
            "description": "Used Size in MiB",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "userAllocLimit": {
            "description": "User alloc limit",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userAllocWarning": {
            "description": "User alloc space limit warning",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userAllocationSettings": {
            "$ref": "#/components/schemas/userAllocationSettingsSingle"
          },
          "userCpgID": {
            "description": "User CPG Id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userCpgName": {
            "description": "User CPG Name",
            "nullable": true,
            "type": "string"
          },
          "userReservedToVirtualPercent": {
            "description": "User reseved to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "userSpace": {
            "$ref": "#/components/schemas/space"
          },
          "userUsedToVirtualPercent": {
            "description": "User used to virtual percent",
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "vlunSectorSize": {
            "description": "VLUN sector size",
            "nullable": true,
            "type": "integer"
          },
          "wwn": {
            "description": "Volume wwn.",
            "example": "60002AC0000000000000006B0001FFEB",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "snapshotsSummaryList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/snapshotsList"
            },
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed snapshots object",
            "example": "/v1/storage-systems/device-type1/7CE751P312/applicationsets/8c18425671d44803b4512f4ca1917410/snapshots",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of snapshots",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "snapshotsetListSingle": {
        "nullable": true,
        "properties": {
          "appSetBusinessUnit": {
            "description": "Appset BusinessUnit",
            "example": "cssl",
            "nullable": true,
            "type": "string"
          },
          "appSetComments": {
            "description": "Application set comments",
            "example": "app set comments",
            "nullable": true,
            "type": "string"
          },
          "appSetImportance": {
            "description": "Importance Level",
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          },
          "appSetName": {
            "description": "Application set name",
            "example": "KA_VEGA_APPSET1_186",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "appSetType": {
            "description": "Type of the snapshotset",
            "example": "Oracle Database",
            "nullable": true,
            "type": "string"
          },
          "comment": {
            "description": "Comments if any",
            "example": "Comments",
            "nullable": true,
            "type": "string"
          },
          "creationTime": {
            "description": "Creation Time",
            "nullable": true,
            "properties": {
              "ms": {
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayName": {
            "description": "Display Name",
            "example": "Application Set KA_VEGA_APPSET1_186 ",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain name",
            "example": "Domain",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "exportStatus": {
            "description": "Export status",
            "example": "PARTIALLY_EXPORTED",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "uid of the snapshotset. `Filter`",
            "example": "4c74ec5c-ecec-4483-9506-3fb5dc45b5d0",
            "nullable": true,
            "type": "string"
          },
          "kvPairsPresent": {
            "description": "Represents KV pairs present or not",
            "example": true,
            "type": "boolean"
          },
          "members": {
            "description": "Volume Names",
            "example": [
              "vol1",
              "vol2"
            ],
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of the snapshotset. `Filter, Sort`",
            "example": "KA_VEGA_APPSET2_186",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "RequestUri for snapshotsets resources",
            "example": "/v1/storage-systems/device-type1/7CE751P312/applicationsets/fd3244ef7f1ab8bd16500c7a41bdf8f8/snapshots",
            "nullable": true,
            "type": "string"
          },
          "serialNumber": {
            "description": "Serial number.",
            "example": "7CE738P06J",
            "nullable": true,
            "type": "string"
          },
          "snapSetId": {
            "description": "ID",
            "example": 5,
            "nullable": true,
            "type": "integer"
          },
          "snapSetParentId": {
            "description": "ParentId of the snapSet",
            "example": 5,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapSetParentName": {
            "description": "Parent name of the snapSet",
            "example": "HPE",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "vvSetType": {
            "description": "Type of the volume-set",
            "example": "VVSET",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "snapshotsetsList": {
        "nullable": true,
        "properties": {
          "appSetBusinessUnit": {
            "description": "Appset BusinessUnit",
            "example": "cssl",
            "nullable": true,
            "type": "string"
          },
          "appSetComments": {
            "description": "Application set comments",
            "example": "app set comments",
            "nullable": true,
            "type": "string"
          },
          "appSetExcludeAIQoS": {
            "description": "Exclusion from AI QoS",
            "example": "no",
            "nullable": true,
            "type": "string"
          },
          "appSetImportance": {
            "description": "Importance Level",
            "example": "MEDIUM",
            "nullable": true,
            "type": "string"
          },
          "appSetName": {
            "description": "Application set name",
            "example": "KA_VEGA_APPSET1_186",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "appSetType": {
            "description": "Type of the snapshotset",
            "example": "Oracle Database",
            "nullable": true,
            "type": "string"
          },
          "comment": {
            "description": "Comments if any",
            "example": "Comments",
            "nullable": true,
            "type": "string"
          },
          "creationTime": {
            "description": "Creation Time",
            "nullable": true,
            "properties": {
              "ms": {
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "displayName": {
            "description": "Display Name",
            "example": "Application Set KA_VEGA_APPSET1_186 ",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain name",
            "example": "Domain",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "exportStatus": {
            "description": "Export status",
            "example": "PARTIALLY_EXPORTED",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "uid of the snapshotset. `Filter`",
            "example": "4c74ec5c-ecec-4483-9506-3fb5dc45b5d0",
            "nullable": true,
            "type": "string"
          },
          "kvPairsPresent": {
            "description": "Represents KV pairs present or not",
            "example": true,
            "type": "boolean"
          },
          "members": {
            "description": "Volume Names",
            "example": [
              "vol1",
              "vol2"
            ],
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "Name of the snapshotset. `Filter, Sort`",
            "example": "KA_VEGA_APPSET2_186",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "RequestUri for snapshotsets resources",
            "example": "/v1/storage-systems/device-type1/7CE751P312/applicationsets/fd3244ef7f1ab8bd16500c7a41bdf8f8/snapshots",
            "nullable": true,
            "type": "string"
          },
          "serialNumber": {
            "description": "Serial number.",
            "example": "7CE738P06J",
            "nullable": true,
            "type": "string"
          },
          "snapSetId": {
            "description": "ID",
            "example": 5,
            "nullable": true,
            "type": "integer"
          },
          "snapSetParentId": {
            "description": "ParentId of the snapSet",
            "example": 5,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "snapSetParentName": {
            "description": "Parent name of the snapSet",
            "example": "HPE",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemUid/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "vvSetType": {
            "description": "Type of the volume-set",
            "example": "VVSET",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "snmp": {
        "description": "SNMP manager details for a device",
        "nullable": true,
        "properties": {
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1fg",
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627533045690,
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource",
            "example": "8be9321600cbf18e9c8c96bb3217f610",
            "nullable": true,
            "type": "string"
          },
          "managerIP": {
            "description": "Specify the IP address of the host from which the manager runs",
            "example": "15.218.169.163",
            "nullable": true,
            "type": "string"
          },
          "notify": {
            "description": "Indicates the trap notification types defined by the HPE deviceType1 MIB",
            "enum": [
              "ALL",
              "NODUP",
              "STANDARD"
            ],
            "example": "STANDARD",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "Specify the port number where the SNMP manager receives traps",
            "example": 162,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "systemId": {
            "description": "SystemId of the storage system",
            "example": "4UW0001540",
            "nullable": true,
            "type": "string"
          },
          "systemWWN": {
            "description": "WWN of the array",
            "example": "2FF70002AC018D94",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "example": "snmp-manager-settings",
            "type": "string"
          },
          "user": {
            "description": "Specify the SNMPv3 user name",
            "example": "user1",
            "nullable": true,
            "type": "string"
          },
          "version": {
            "description": "Specify the SNMP version supported",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "snmpDetails": {
        "description": "Snmp Details for a device",
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/snmp"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "total": {
            "description": "Number of snmp managers",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "snmpMgrDetails": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/nwAssociatedLinks"
          },
          "snmp": {
            "$ref": "#/components/schemas/snmpDetails"
          },
          "systemId": {
            "description": "SystemId of the storage system",
            "example": "4UW0001540",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "softwareVersions": {
        "description": "Software versions of the product",
        "nullable": true,
        "properties": {
          "baseVersion": {
            "description": "Base Version `Filter`",
            "example": "4.2.0",
            "nullable": true,
            "type": "string"
          },
          "components": {
            "items": {
              "nullable": true,
              "properties": {
                "baseVersion": {
                  "description": "Base Version",
                  "example": "4.2.0.48",
                  "nullable": true,
                  "type": "string"
                },
                "fullVersion": {
                  "description": "Full Version",
                  "example": "4.2.0.48",
                  "nullable": true,
                  "type": "string"
                },
                "name": {
                  "description": "Name of the Component",
                  "example": "CLI Server",
                  "nullable": true,
                  "type": "string"
                },
                "release": {
                  "description": "Release Version",
                  "example": "",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "fullVersion": {
            "description": "Full Version",
            "example": "4.2.0.48",
            "nullable": true,
            "type": "string"
          },
          "patches": {
            "description": "Set of Patches `Filter`",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "release": {
            "description": "Release Version",
            "example": "",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "softwareVersionsSolo": {
        "description": "Software versions of the product",
        "nullable": true,
        "properties": {
          "baseVersion": {
            "description": "Base Version",
            "example": "4.2.0",
            "nullable": true,
            "type": "string"
          },
          "components": {
            "items": {
              "nullable": true,
              "properties": {
                "baseVersion": {
                  "description": "Base Version",
                  "example": "4.2.0.48",
                  "nullable": true,
                  "type": "string"
                },
                "fullVersion": {
                  "description": "Full Version",
                  "example": "4.2.0.48",
                  "nullable": true,
                  "type": "string"
                },
                "name": {
                  "description": "Name of the Component",
                  "example": "CLI Server",
                  "nullable": true,
                  "type": "string"
                },
                "release": {
                  "description": "Release Version",
                  "example": "",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "fullVersion": {
            "description": "Full Version",
            "example": "4.2.0.48",
            "nullable": true,
            "type": "string"
          },
          "patches": {
            "description": "Set of Patches",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "release": {
            "description": "Release Version",
            "example": "",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "space": {
        "nullable": true,
        "properties": {
          "freeMiB": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "grownMiB": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "rawReservedMiB": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "reclaimedMiB": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "reservedMiB": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "totalMiB": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "usedMiB": {
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "spaceWarning": {
        "description": "User alloc space warning",
        "format": "float64",
        "nullable": true,
        "type": "number"
      },
      "state": {
        "description": "State of the resource",
        "nullable": true,
        "properties": {
          "detailed": {
            "description": "Array of the detailed states of the resource",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "overall": {
            "description": "Overall state of the resource",
            "enum": [
              "STATE_UNKNOWN",
              "STATE_NORMAL",
              "STATE_DEGRADED",
              "STATE_FAILED",
              "STATE_NOT_APPLICABLE",
              "STATE_NEW",
              null
            ],
            "example": "STATE_NORMAL",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "stateDescription": {
        "description": "Detailed descriptions of the port state",
        "items": {
          "nullable": true,
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "storagePoolPerformance": {
        "description": "storage pool performance trends for given granularity and time range",
        "nullable": true,
        "properties": {
          "iops": {
            "$ref": "#/components/schemas/nimbleperfData"
          },
          "latency": {
            "$ref": "#/components/schemas/nimbleperfData"
          },
          "requestURI": {
            "description": "requestUri for detailed storage pool object",
            "example": "/api/v1/storage-systems/device-type2/00473102de2f5f39d8000000000000000000000001/storage-pools/37473102de2f5f39d8000000000000000000000027/performance-statistics",
            "nullable": true,
            "type": "string"
          },
          "throughput": {
            "$ref": "#/components/schemas/nimbleperfData"
          }
        },
        "type": "object"
      },
      "storagePoolPerformanceHistory": {
        "description": "storage pool performance trends for given granularity and time range",
        "nullable": true,
        "properties": {
          "iops_metrics_data": {
            "$ref": "#/components/schemas/nimblehistoricalMetricData"
          },
          "latency_metrics_data": {
            "$ref": "#/components/schemas/nimblehistoricalMetricData"
          },
          "requestURI": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type2/00473102de2f5f39d8000000000000000000000001/storage-pools/37473102de2f5f39d8000000000000000000000027/performance-history",
            "nullable": true,
            "type": "string"
          },
          "throughput_metrics_data": {
            "$ref": "#/components/schemas/nimblehistoricalMetricData"
          }
        },
        "type": "object"
      },
      "storagePoolsFleetSummaryList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FleetPoolList"
            },
            "type": "array"
          },
          "pageLimit": {
            "description": "Page Limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "Page Offset",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "resourceUri for detailed storage-pool object",
            "example": "/api/v1/storage-systems/7CE809P009/storage-pools",
            "type": "string"
          },
          "total": {
            "description": "Number of storage-pools",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "storageSystemDetail": {
        "nullable": true,
        "properties": {
          "arrayList": {
            "description": "The list of Nimble arrays part of this system.",
            "items": {
              "$ref": "#/components/schemas/NimbleArraySummary"
            },
            "nullable": true,
            "type": "array"
          },
          "associatedLinks": {
            "$ref": "#/components/schemas/associatedLinks"
          },
          "callhomeStatus": {
            "description": "Device Call-home connectivity status",
            "enum": [
              "ENABLED_NORMAL",
              "ENABLED_DEGRADED",
              "DISABLED",
              "UNKNOWN"
            ],
            "example": "ENABLED_NORMAL",
            "type": "string"
          },
          "collectionStatus": {
            "$ref": "#/components/schemas/collectionStatus"
          },
          "connectionStatus": {
            "$ref": "#/components/schemas/connectionStatus"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "customerId",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "A brief description of the storage system.",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "fqdn": {
            "description": "Fully qualified domain name of the system",
            "example": "s9.in.hpecorp.net",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "UUID string uniquely identifying the storage system object.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "lastConnectedTime": {
            "$ref": "#/components/schemas/lastConnectedTime"
          },
          "mgmtIp": {
            "$ref": "#/components/schemas/ips"
          },
          "model": {
            "description": "Model of the storage system",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "A name to identify the storage system.",
            "example": "DeviceType1Billing",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "productFamily": {
            "description": "Storage device type",
            "example": "deviceType1",
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed storage object",
            "example": "/api/v1/storage-systems/7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "softwareVersion": {
            "description": "Software version of the storage system",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "For deviceType1 State derived from ports, enclosure, disk and node state for deviceType2 state is state reported by deviceType2 array",
            "enum": [
              "NORMAL",
              "DEGRADED"
            ],
            "example": "NORMAL",
            "type": "string"
          },
          "systemWWN": {
            "description": "WWN of the array",
            "example": "2FF70002AC018D94",
            "nullable": true,
            "type": "string"
          },
          "tierType": {
            "description": "StorageTier.",
            "enum": [
              "STORAGE_TIER_9000_NVME",
              "STORAGE_TIER_6000_NVME",
              "STORAGE_TIER_NIMBLE_HYBRID",
              "STORAGE_TIER_NIMBLE_AFA",
              "STORAGE_TIER_600_AFA",
              "STORAGE_TIER_600_HYBRID",
              "STORAGE_TIER_NIMBLE_VSA",
              "STORAGE_TIER_MISSION_CRITICAL",
              "STORAGE_TIER_BUSINESS_CRITICAL",
              "STORAGE_TIER_GENERAL_PURPOSE",
              "STORAGE_TIER_5000",
              "STORAGE_TIER_UNKNOWN"
            ],
            "example": "STORAGE_TIER_UNKNOWN",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "upSince": {
            "description": "The time that the system has been up since",
            "example": 1600084190299,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "storageSystemDetailList": {
        "properties": {
          "arrayList": {
            "description": "The list of Nimble arrays part of this system.",
            "items": {
              "$ref": "#/components/schemas/NimbleArraySummary"
            },
            "nullable": true,
            "type": "array"
          },
          "associatedLinks": {
            "$ref": "#/components/schemas/associatedLinks"
          },
          "callhomeStatus": {
            "description": "Device Call-home connectivity status.",
            "enum": [
              "ENABLED_NORMAL",
              "ENABLED_DEGRADED",
              "DISABLED",
              "UNKNOWN"
            ],
            "example": "ENABLED_NORMAL",
            "type": "string"
          },
          "collectionStatus": {
            "$ref": "#/components/schemas/collectionStatus"
          },
          "connectionStatus": {
            "$ref": "#/components/schemas/connectionStatus"
          },
          "customerId": {
            "description": "customerId",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "A brief description of the storage system.",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "UUID string uniquely identifying the storage system object.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "lastConnectedTime": {
            "$ref": "#/components/schemas/lastConnectedTime"
          },
          "mgmtIp": {
            "$ref": "#/components/schemas/ips"
          },
          "model": {
            "description": "Model of the storage system `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "A name to identify the storage system. `Filter, Sort`",
            "example": "DeviceType1Billing",
            "nullable": true,
            "type": "string"
          },
          "productFamily": {
            "description": "Storage device type",
            "example": "deviceType1",
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed storage object",
            "example": "/api/v1/storage-systems/2FF70002AC018D94",
            "nullable": true,
            "type": "string"
          },
          "softwareVersion": {
            "description": "Software version of the storage system `Filter, Sort`",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "For deviceType1 State derived from ports, enclosure, disk and node state for deviceType2 state is state reported by deviceType2 array `Filter, Sort`",
            "enum": [
              "NORMAL",
              "DEGRADED"
            ],
            "example": "NORMAL",
            "type": "string"
          },
          "systemWWN": {
            "description": "WWN of the array",
            "example": "2FF70002AC018D94",
            "nullable": true,
            "type": "string"
          },
          "tierType": {
            "description": "StorageTier.",
            "enum": [
              "STORAGE_TIER_9000_NVME",
              "STORAGE_TIER_6000_NVME",
              "STORAGE_TIER_NIMBLE_HYBRID",
              "STORAGE_TIER_NIMBLE_AFA",
              "STORAGE_TIER_600_AFA",
              "STORAGE_TIER_600_HYBRID",
              "STORAGE_TIER_NIMBLE_VSA",
              "STORAGE_TIER_MISSION_CRITICAL",
              "STORAGE_TIER_BUSINESS_CRITICAL",
              "STORAGE_TIER_GENERAL_PURPOSE",
              "STORAGE_TIER_5000",
              "STORAGE_TIER_UNKNOWN"
            ],
            "example": "STORAGE_TIER_UNKNOWN",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "upSince": {
            "description": "The time that the system has been up since",
            "example": 1600084190299,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "storageSystemRecommendationList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/RecommendationList"
            },
            "nullable": true,
            "type": "array"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/recommendations",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of systems",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "storageSystemSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/storageSystemDetailList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of systems",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "storageTypes": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/deviceTypes"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "total": {
            "description": "Number of type of systems",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "supportSetting": {
        "description": "Support settings for the system",
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/sysAssociatedLinks"
          },
          "connectToHPE": {
            "description": "Enable remote support by allowing sending of files from device to HPE. Allowed values: enabled or disabled.",
            "example": "disabled",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1az",
            "type": "string"
          },
          "emailNotifications": {
            "description": "Receive email notifications. Allowed values: enabled or disabled.",
            "example": "enabled",
            "nullable": true,
            "type": "string"
          },
          "enterpriseServerURL": {
            "description": "Callhome collection server URL",
            "example": "server.com/collect",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627540915530,
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier of the support settings.",
            "example": "7CE726P1VX",
            "nullable": true,
            "type": "string"
          },
          "miniInsploreEnabled": {
            "description": "Enables/Disable scheduled Mini-Insplore collection. Allowed values: enabled or disabled.",
            "example": "disabled",
            "nullable": true,
            "type": "string"
          },
          "rapForwarding": {
            "description": "Enable/Disable RAP forwarding. Allowed values: enabled or disabled.",
            "example": "enabled",
            "nullable": true,
            "type": "string"
          },
          "remoteAccess": {
            "description": "Enable/Disable Remote Access. Allowed values: DISABLE or ENABLE_NONROOT or ENABLE_ROOT. It is mandatory.",
            "enum": [
              "DISABLE",
              "ENABLE_NONROOT",
              "ENABLE_ROOT"
            ],
            "example": "ENABLE_NONROOT",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/supportsettings",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/supportsettings",
            "nullable": true,
            "type": "string"
          },
          "rtsEnabled": {
            "description": "Enable/Disable Real time data scrubbing. Allowed values: enabled or disabled.",
            "example": "disabled",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "example": "support-settings",
            "type": "string"
          }
        },
        "type": "object"
      },
      "supportSettingsInput": {
        "description": "Edit Support settings for the system",
        "nullable": true,
        "properties": {
          "connectToHPE": {
            "description": "Enable remote support by allowing sending of files from device to HPE. Allowed values: enabled or disabled. It is mandatory.",
            "type": "string"
          },
          "deviceId": {
            "description": "Id of the array. User can get Id info from GET response. It is mandatory.",
            "type": "string"
          },
          "enterpriseServerURL": {
            "description": "Callhome collection server URL",
            "nullable": true,
            "type": "string"
          },
          "miniInsploreEnabled": {
            "description": "Enables/Disable scheduled Mini-Insplore collection. Allowed values: enabled or disabled.",
            "nullable": true,
            "type": "string"
          },
          "rapForwarding": {
            "description": "Enable/Disable RAP forwarding. Allowed values: enabled or disabled. It is mandatory.",
            "type": "string"
          },
          "remoteAccess": {
            "description": "Allow HPE Support to access the device remotely. Allowed values: ENABLE_ROOT or DISABLE or ENABLE_NONROOT. It is mandatory.",
            "enum": [
              "DISABLE",
              "ENABLE_NONROOT",
              "ENABLE_ROOT"
            ],
            "example": "DISABLE",
            "type": "string"
          },
          "rtsEnabled": {
            "description": "Enable/Disable Real time data scrubbing. Allowed values: enabled or disabled. It is mandatory.",
            "type": "string"
          }
        },
        "required": [
          "connectToHPE",
          "rapForwarding",
          "rtsEnabled",
          "remoteAccess"
        ],
        "type": "object"
      },
      "swRecommendedPackageId": {
        "description": "wip",
        "nullable": true,
        "properties": {
          "displayname": {
            "description": "Display name",
            "example": "System VEGA_CB1507_8400_2N_150",
            "format": "Any",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the resource",
            "example": "DeviceType1Billing",
            "format": "Any",
            "nullable": true,
            "type": "string"
          },
          "severity": {
            "description": "Severity. Possible Values: Unknown, CRITICAL, RECOMMENDED, OPTIONAL, AVAILABLE, BLOCKED.",
            "nullable": true,
            "type": "string"
          },
          "supportType": {
            "enum": [
              "UNKNOWN",
              "SHORT_TERM",
              "LONG_TERM",
              null
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "sysAssociatedLinks": {
        "description": "Associated Links Details",
        "example": [
          {
            "resourceUri": "/api/v1/storage-systems/device-type1/{uid}",
            "type": "systems"
          }
        ],
        "items": {
          "nullable": true,
          "properties": {
            "resourceUri": {
              "description": "Resource Uri",
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Resource Name",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "nullable": true,
        "type": "array"
      },
      "sysLocateInput": {
        "properties": {
          "locateEnabled": {
            "description": "Indicates if the locate beacon should be enabled or not",
            "example": true,
            "nullable": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "sysLogStatus": {
        "description": "Remote syslog details of the system",
        "nullable": true,
        "properties": {
          "general": {
            "description": "General",
            "example": "None,None,None",
            "nullable": true,
            "type": "string"
          },
          "security": {
            "description": "Security",
            "example": "None,None,None",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "sysPerformanceHistory": {
        "description": "system performance trends for given granularity",
        "nullable": true,
        "properties": {
          "iops_metrics_data": {
            "$ref": "#/components/schemas/nimblehistoricalMetricData"
          },
          "latency_metrics_data": {
            "$ref": "#/components/schemas/nimblehistoricalMetricData"
          },
          "requestURI": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/nimble/00473102de2f5f39d8000000000000000000000001/performance-history",
            "nullable": true,
            "type": "string"
          },
          "throughput_metrics_data": {
            "$ref": "#/components/schemas/nimblehistoricalMetricData"
          }
        },
        "type": "object"
      },
      "sysPortManagement": {
        "description": "Port Management details for a device",
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/sysAssociatedLinks"
          },
          "authenticationRequired": {
            "description": "Is authentication required. Allowed values are enabled or disabled",
            "example": "enabled",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1cv",
            "type": "string"
          },
          "defaultRouteIPv4": {
            "description": "Default IPV4 route address of the network port",
            "example": "15.212.12.30",
            "nullable": true,
            "type": "string"
          },
          "defaultRouteIPv6": {
            "description": "Default IPV6 route address of the network port",
            "example": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "Name to be used for display purposes",
            "example": "Management Port",
            "nullable": true,
            "type": "string"
          },
          "dnsServer": {
            "description": "DNS Server of the network port",
            "example": "10.112.132.43",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "Domain that the resource belongs to",
            "example": "sample.com",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627533960634,
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource",
            "example": "eb5149ef0d3bc95f2a7e24c4b29edc92",
            "nullable": true,
            "type": "string"
          },
          "ipV4Data": {
            "$ref": "#/components/schemas/Address"
          },
          "ipV6Data": {
            "$ref": "#/components/schemas/Address"
          },
          "newDefaultRouteIPv4": {
            "description": "New default IPV4 route address of the network port",
            "example": "15.212.12.30",
            "nullable": true,
            "type": "string"
          },
          "newDefaultRouteIPv6": {
            "description": "New default IPV6 route address of the network port",
            "example": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
            "nullable": true,
            "type": "string"
          },
          "newIpV4Data": {
            "$ref": "#/components/schemas/Address"
          },
          "newIpv6Data": {
            "$ref": "#/components/schemas/Address"
          },
          "ntpServer": {
            "description": "NTP Server of the network port",
            "example": "16.110.23.123 16.110.23.124",
            "nullable": true,
            "type": "string"
          },
          "proxyPort": {
            "description": "Proxy Server Port. Allowed values are 1-65535",
            "example": 45,
            "nullable": true,
            "type": "integer"
          },
          "proxyProtocol": {
            "description": "Supported proxy protocols are HTTP, SOCKS4 and SOCKS5.",
            "example": "HTTP",
            "nullable": true,
            "type": "string"
          },
          "proxyServer": {
            "description": "Proxy server IP address",
            "example": "proxy.company.net",
            "nullable": true,
            "type": "string"
          },
          "proxyUser": {
            "description": "Username for authentication. (Required only if Authentication required is enabled)",
            "example": "proxySampleUser",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "Serial Number of the array",
            "example": "7CEFVC12",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "example": "network-settings",
            "type": "string"
          }
        },
        "type": "object"
      },
      "syscapacity": {
        "description": "system capacity details",
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/sysAssociatedLinks"
          },
          "capacityByTier": {
            "$ref": "#/components/schemas/capacityByTier"
          },
          "capacitySummary": {
            "$ref": "#/components/schemas/systemCapacitySummary"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "fcCapacitySummary": {
            "$ref": "#/components/schemas/systemCapacitySummary"
          },
          "id": {
            "description": "ID string uniquely identifying the object.",
            "nullable": true,
            "type": "string"
          },
          "nlCapacitySummary": {
            "$ref": "#/components/schemas/systemCapacitySummary"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/capacity-summary",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/capacity-summary",
            "nullable": true,
            "type": "string"
          },
          "ssdCapacitySummary": {
            "$ref": "#/components/schemas/systemCapacitySummary"
          },
          "systemId": {
            "description": "SystemId/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "utilizationSummary": {
            "$ref": "#/components/schemas/utilizationSummary"
          }
        },
        "type": "object"
      },
      "systemCapacitySummary": {
        "nullable": true,
        "properties": {
          "allocated": {
            "$ref": "#/components/schemas/allocated"
          },
          "allocatedPercentage": {
            "description": "Percentage of allocated capacity for the system",
            "example": 0.23703678566580696,
            "nullable": true,
            "type": "number"
          },
          "compaction": {
            "description": "Compaction details",
            "example": 8384.594860579551,
            "nullable": true,
            "type": "number"
          },
          "compression": {
            "description": "Compression details",
            "nullable": true,
            "type": "number"
          },
          "dataReduction": {
            "description": "Data reduction",
            "nullable": true,
            "type": "number"
          },
          "dedup": {
            "description": "Dedup Details",
            "nullable": true,
            "type": "number"
          },
          "failed": {
            "description": "Failed capacity",
            "example": 2048,
            "nullable": true,
            "type": "number"
          },
          "failedPercentage": {
            "description": "Percentage of failed capacity",
            "example": 0.00006787023211619383,
            "nullable": true,
            "type": "number"
          },
          "free": {
            "description": "Free capacity of the system",
            "example": 23020544,
            "nullable": true,
            "type": "number"
          },
          "freeInitialized": {
            "description": "Intialized capacity out of the free capacity",
            "example": 23020544,
            "nullable": true,
            "type": "number"
          },
          "freePercentage": {
            "description": "Percentage of the free capacity",
            "example": 0.7628953441020768,
            "nullable": true,
            "type": "number"
          },
          "freeUninitialized": {
            "description": "Uninitialized capacity out of the free capacity",
            "nullable": true,
            "type": "number"
          },
          "overProvisioning": {
            "description": "Over provisioning ratio",
            "example": 0.08,
            "nullable": true,
            "type": "number"
          },
          "total": {
            "description": "Total capacity of the system",
            "example": 30175232,
            "nullable": true,
            "type": "number"
          },
          "unavailable": {
            "description": "Unavailable storage",
            "example": 0,
            "nullable": true,
            "type": "number"
          },
          "unavailablePercentage": {
            "description": "Percentage of storage that is unavailable",
            "example": 0,
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "systemConfigParams": {
        "nullable": true,
        "properties": {
          "items": {
            "$ref": "#/components/schemas/systemSettingsDetails"
          },
          "requestUri": {
            "description": "requestUri for system settings details",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/system-settings",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "systemConfigParamsEditInput": {
        "nullable": true,
        "properties": {
          "authMode": {
            "nullable": true,
            "properties": {
              "authmode": {
                "description": "Sets password authentication mode (totp or ciphertext) for a system",
                "example": "ciphertext",
                "nullable": true,
                "type": "string"
              }
            }
          },
          "dateTime": {
            "description": "system date time",
            "example": "01/15/2020 10:00:00",
            "nullable": true,
            "type": "string"
          },
          "installationSites": {
            "nullable": true,
            "properties": {
              "city": {
                "description": "City of the installation site",
                "example": "Bangalore",
                "nullable": true,
                "type": "string"
              },
              "company": {
                "description": "Company name of the installation site",
                "example": "Hewlett Packard Enterprise",
                "nullable": true,
                "type": "string"
              },
              "country": {
                "description": "Country of the installation site",
                "example": "India",
                "nullable": false,
                "type": "string"
              },
              "postalCode": {
                "description": "Postal code of the installation site",
                "example": "560001",
                "nullable": true,
                "type": "string"
              },
              "setSystemLocation": {
                "description": "Apply system location to the system descriptor property",
                "example": false,
                "nullable": true,
                "type": "boolean"
              },
              "state": {
                "description": "State of the installation site",
                "example": "Karnataka",
                "nullable": true,
                "type": "string"
              },
              "streetAddress": {
                "description": "Street address of the installation site",
                "example": "7992 Woodland Street",
                "nullable": true,
                "type": "string"
              },
              "supportProvider": {
                "description": "Support provider of the installation site",
                "example": "HPE",
                "nullable": true,
                "type": "string"
              }
            }
          },
          "name": {
            "description": "system name",
            "example": "Array1",
            "nullable": true,
            "type": "string"
          },
          "ntpAddresses": {
            "description": "system ntp addresses",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "remoteSyslogSettings": {
            "nullable": true,
            "properties": {
              "remoteSysLog": {
                "description": "Remote Syslog Enabled/Disabled",
                "example": 0,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "remoteSysLogHost": {
                "description": "Host details for Remote Syslog",
                "example": [
                  "4.3.2.1:8080,1.2.3.4:8080"
                ],
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              },
              "remoteSysLogSecurityHost": {
                "description": "Security Host details for Remote Syslog",
                "example": [
                  "5.6.7.8:8080,8.7.5.6:8080"
                ],
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              }
            }
          },
          "srinfo": {
            "nullable": true,
            "properties": {
              "newCapacityMiB": {
                "description": "New Capacity value should be given in MiB",
                "example": 11000,
                "nullable": true,
                "type": "number"
              }
            }
          },
          "supportContact": {
            "$ref": "#/components/schemas/ContactsEditDetails"
          },
          "systemParameters": {
            "nullable": true,
            "properties": {
              "allowWrtbackSingleNode": {
                "description": "Allow writeback single node setting in days",
                "example": 7,
                "nullable": true,
                "type": "number"
              },
              "enableAIQoS": {
                "description": "Enable or disable AI QoS feature, allowed values are:yes or no",
                "example": "yes",
                "nullable": true,
                "type": "string"
              },
              "hostDIF": {
                "description": "Host Data Integrity Field, allowed values are:yes or no",
                "example": "yes",
                "nullable": true,
                "type": "string"
              },
              "hostDIFTemplate": {
                "description": "HostDIF Template",
                "enum": [
                  "STD_HOST_DIF",
                  "NO_HOST_DIF",
                  "THREEPAR_HOST_DIF",
                  "HBA_HOST_DIF"
                ],
                "example": "STD_HOST_DIF",
                "type": "string"
              },
              "overprovRatioLimit": {
                "description": "Over provisioning ratio limit setting",
                "example": 2,
                "nullable": true,
                "type": "number"
              },
              "overprovRatioWarning": {
                "description": "Over provisioning ratio warning setting",
                "example": 1,
                "nullable": true,
                "type": "number"
              }
            }
          },
          "timezone": {
            "description": "system time zone",
            "example": "Asia/Calcutta",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "systemHeadroom": {
        "description": "Headroom for the storage-system",
        "nullable": true,
        "properties": {
          "performance": {
            "$ref": "#/components/schemas/performanceHeadroom"
          }
        },
        "type": "object"
      },
      "systemPerformance": {
        "description": "system performance statistics",
        "nullable": true,
        "properties": {
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "iops": {
            "$ref": "#/components/schemas/pmPerfData"
          },
          "latency": {
            "$ref": "#/components/schemas/pmPerfData"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/SGH014XGSP/performance-statistics",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/SGH014XGSP/performance-statistics",
            "nullable": true,
            "type": "string"
          },
          "throughput": {
            "$ref": "#/components/schemas/pmPerfData"
          }
        },
        "type": "object"
      },
      "systemPerformanceHistory": {
        "description": "system performance trends for given granularity",
        "nullable": true,
        "properties": {
          "customerId": {
            "description": "The customer application identifier",
            "type": "string"
          },
          "endTime": {
            "description": "End time of the history data",
            "example": 1625642714,
            "type": "integer"
          },
          "historyData": {
            "$ref": "#/components/schemas/historyData"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/SGH014XGSP/performance-history",
            "nullable": true,
            "type": "string"
          },
          "startTime": {
            "description": "Start time of the history data",
            "example": 1625556314,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "systemSettingsDetails": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "description": "Associated Links Details",
            "example": [
              {
                "resourceUri": "/api/v1/storage-systems/device-type1/{id}",
                "type": "systems"
              }
            ],
            "items": {
              "nullable": true,
              "properties": {
                "resourceUri": {
                  "description": "Resource Uri",
                  "nullable": true,
                  "type": "string"
                },
                "type": {
                  "description": "Resource Name",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "authMode": {
            "description": "Password Authentication Mode",
            "example": "Time-based one-time password mode",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object ",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fv5f41632a53497e88cdcebc715cc1cf",
            "type": "string"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627541300145,
            "format": "int64",
            "type": "integer"
          },
          "installationsites": {
            "nullable": true,
            "properties": {
              "city": {
                "description": "City of the installation site",
                "example": "Bangalore",
                "nullable": true,
                "type": "string"
              },
              "company": {
                "description": "Company name of the installation site",
                "example": "Hewlett Packard Enterprise",
                "nullable": true,
                "type": "string"
              },
              "country": {
                "description": "Country of the installation site",
                "example": "India",
                "nullable": true,
                "type": "string"
              },
              "hpePassportId": {
                "description": "HPE passport ID",
                "example": "annajohn@gmail.com",
                "nullable": true,
                "type": "string"
              },
              "hpePassword": {
                "description": "Password of an HPE passport ID",
                "example": "password",
                "nullable": true,
                "type": "string"
              },
              "id": {
                "description": "Unique identifier of the installation site",
                "example": "2FF70002AC07E9C6",
                "nullable": true,
                "type": "string"
              },
              "postalCode": {
                "description": "Postal code of the installation site",
                "example": "560001",
                "nullable": true,
                "type": "string"
              },
              "setSystemLocation": {
                "description": "Apply system location to the system descriptor property",
                "example": false,
                "nullable": true,
                "type": "boolean"
              },
              "state": {
                "description": "State of the installation site",
                "example": "Karnataka",
                "nullable": true,
                "type": "string"
              },
              "streetAddress": {
                "description": "Street address of the installation site",
                "example": "7992 Woodland Street",
                "nullable": true,
                "type": "string"
              },
              "supportProvider": {
                "description": "Support provider of the installation site",
                "example": "HPE",
                "nullable": true,
                "type": "string"
              },
              "systemId": {
                "description": "SystemId/serialNumber of the array.",
                "example": "7CE751P312",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "isFIPSEnabled": {
            "description": "Apply FIPS Standard",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "system name",
            "example": "Array1",
            "nullable": true,
            "type": "string"
          },
          "ntpServer": {
            "description": "ntp server",
            "example": "15.213.68.208",
            "nullable": true,
            "type": "string"
          },
          "remoteSyslogSettings": {
            "nullable": true,
            "properties": {
              "remoteSysLog": {
                "description": "Remote Syslog Enabled/Disabled",
                "example": 0,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "remoteSysLogHost": {
                "description": "Host details for Remote Syslog",
                "example": "[ 4.3.2.1:8080,1.2.3.4:8080 ]",
                "nullable": true,
                "type": "string"
              },
              "remoteSysLogSecurityHost": {
                "description": "Security Host details for Remote Syslog",
                "example": "[ 5.6.7.8:8080,8.7.5.6:8080 ]",
                "nullable": true,
                "type": "string"
              }
            }
          },
          "srinfo": {
            "nullable": true,
            "properties": {
              "percentUsed": {
                "description": "Used Percentage",
                "example": 2,
                "nullable": true,
                "type": "number"
              },
              "totalCapacityMiB": {
                "description": "Total Capacity in MiB",
                "example": 90714,
                "nullable": true,
                "type": "number"
              },
              "usedCapacityMiB": {
                "description": "Used Capacity in MiB, this attribute will be updated at most once in 24 hours",
                "example": 1559,
                "nullable": true,
                "type": "number"
              }
            }
          },
          "supportcontact": {
            "$ref": "#/components/schemas/ContactsDetails"
          },
          "systemDate": {
            "description": "system date time",
            "example": 1580068830,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "systemId": {
            "description": "SystemId/serialNumber of the array.",
            "example": "7CE751P312",
            "nullable": true,
            "type": "string"
          },
          "systemParameters": {
            "nullable": true,
            "properties": {
              "allowWrtbackSingleNode": {
                "description": "Allow writeback single node setting in days",
                "example": 7,
                "nullable": true,
                "type": "number"
              },
              "allowWrtbackUpgrade": {
                "description": "Allow the system to continue caching when in a single node state during an upgrade for up to the specified number of days",
                "example": 7,
                "nullable": true,
                "type": "number"
              },
              "enableAIQoS": {
                "description": "Enable or disable AI QoS feature, allowed values are:yes or no",
                "example": "yes",
                "nullable": true,
                "type": "string"
              },
              "fcRawSpaceAlert": {
                "description": "FC raw space alert setting in MiB",
                "example": 1,
                "format": "Uint64",
                "nullable": true,
                "type": "integer"
              },
              "hostDIF": {
                "description": "Host Data Integrity Field, allowed values are:yes or no",
                "example": "yes",
                "nullable": true,
                "type": "string"
              },
              "hostDIFTemplate": {
                "description": "HostDIF Template",
                "enum": [
                  "STD_HOST_DIF",
                  "NO_HOST_DIF",
                  "THREEPAR_HOST_DIF",
                  "HBA_HOST_DIF"
                ],
                "example": "STD_HOST_DIF",
                "nullable": true,
                "type": "string"
              },
              "maxVolumeRetention": {
                "description": "Maximum global volume retention policy in seconds",
                "example": 1209600,
                "format": "Uint64",
                "nullable": true,
                "type": "integer"
              },
              "overprovRatioLimit": {
                "description": "Over provisioning ratio limit setting",
                "example": 0,
                "nullable": true,
                "type": "number"
              },
              "overprovRatioWarning": {
                "description": "Over provisioning ratio warning setting",
                "example": 0,
                "nullable": true,
                "type": "number"
              }
            }
          },
          "timezone": {
            "description": "system time zone",
            "example": "Asia/Calcutta",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "example": "system-settings",
            "type": "string"
          }
        },
        "type": "object"
      },
      "systemState": {
        "description": "State of the resource",
        "nullable": true,
        "properties": {
          "detailed": {
            "description": "Array of the detailed states of the resource",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "overall": {
            "description": "Overall state of the resource",
            "enum": [
              "STATE_UNKNOWN",
              "STATE_NORMAL",
              "STATE_DEGRADED",
              "STATE_FAILED",
              "STATE_NOT_APPLICABLE",
              "STATE_NEW",
              null
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "taskResponse": {
        "properties": {
          "message": {
            "description": "Task Message task message.",
            "example": "Successfully submitted",
            "type": "string"
          },
          "status": {
            "description": "Task Status Status of the task.",
            "example": "SUBMITTED",
            "type": "string"
          },
          "taskUri": {
            "description": "Task URI which can be used to monitor the status of the operation.",
            "example": "/rest/vega/v1/tasks/4969a568-6fed-4915-bcd5-e4566a75e00c",
            "type": "string"
          }
        },
        "required": [
          "taskUri"
        ],
        "type": "object"
      },
      "taskResponseReplication": {
        "nullable": false,
        "properties": {
          "response": {
            "description": "Test Configuration Response.",
            "items": {
              "$ref": "#/components/schemas/NimbleTestConfigurationResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "telemetryStatus": {
        "description": "telemetry status of the system",
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/sysAssociatedLinks"
          },
          "collectionServer": {
            "description": "Callhome Collection server URL",
            "nullable": true,
            "type": "string"
          },
          "connectivityStatus": {
            "description": "Callhome connectivity status.",
            "enum": [
              "NORMAL",
              "FAILED",
              "NOT_APPLICABLE",
              "DISABLED",
              null
            ],
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          },
          "connectivityTestTime": {
            "description": "Last connectivity test time.",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "Epoch time in milliseconds",
                "example": 1599631885,
                "format": "Uint64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "Time zone name",
                "example": "Asia/Kolkata",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "details": {
            "$ref": "#/components/schemas/details"
          },
          "id": {
            "description": "Unique identifier of the callhome status.",
            "nullable": true,
            "type": "string"
          },
          "lastFileSent": {
            "description": "Last sent file name via callhome.",
            "nullable": true,
            "type": "string"
          },
          "lastFileTransferTime": {
            "description": "Last sent file time via callhome.",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "Epoch time in milliseconds",
                "example": 1599631885,
                "format": "Uint64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "Time zone name",
                "example": "Asia/Kolkata",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "lastSuccessfulConnectivityTestTime": {
            "description": "Last successful connectivity time.",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "Epoch time in milliseconds",
                "example": 1599631885,
                "format": "Uint64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "Time zone name",
                "example": "Asia/Kolkata",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "proxyConnectivity": {
            "description": "Proxy connectivity status.",
            "enum": [
              "NORMAL",
              "FAILED",
              "NOT_APPLICABLE",
              "DISABLED",
              null
            ],
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          },
          "rDAConfigured": {
            "description": "Callhome transport agent configuration details.",
            "enum": [
              "NORMAL",
              "FAILED",
              "NOT_APPLICABLE",
              "DISABLED",
              null
            ],
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          },
          "rDAStatus": {
            "description": "Status of Callhome Transport Agent.",
            "enum": [
              "NORMAL",
              "FAILED",
              "NOT_APPLICABLE",
              "DISABLED",
              null
            ],
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          },
          "rSvSStatus": {
            "description": "Status of callhome agent.",
            "enum": [
              "NORMAL",
              "FAILED",
              "NOT_APPLICABLE",
              "DISABLED",
              null
            ],
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          },
          "rTSStatus": {
            "description": "Status of Real time scrubber.",
            "enum": [
              "NORMAL",
              "FAILED",
              "NOT_APPLICABLE",
              "DISABLED",
              null
            ],
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "resourceUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/telemetryStatus",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed storage object",
            "example": "/api/v1/storage-systems/device-type1/7CE751P312/telemetryStatus",
            "nullable": true,
            "type": "string"
          },
          "rolledUpStatus": {
            "description": "Callhome Rolled up status.",
            "enum": [
              "NORMAL",
              "FAILED",
              "NOT_APPLICABLE",
              "DISABLED",
              null
            ],
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          },
          "sharedVolumeStatus": {
            "description": "Shared Volume status",
            "enum": [
              "NORMAL",
              "FAILED",
              "NOT_APPLICABLE",
              "DISABLED",
              null
            ],
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          },
          "transferStatus": {
            "description": "Callhome File Transfer transfer.",
            "enum": [
              "NORMAL",
              "FAILED",
              "NOT_APPLICABLE",
              "DISABLED",
              null
            ],
            "example": "NORMAL",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "trustedCertificateDetails": {
        "properties": {
          "commonname": {
            "description": "Displayname of the resource",
            "example": "c3-hp-eskm-01",
            "nullable": true,
            "type": "string"
          },
          "detail": {
            "description": "Detail of the trusted certificate",
            "nullable": true,
            "properties": {
              "default": {
                "description": "default value of trusted certificate",
                "example": "Valid Certificate",
                "nullable": true,
                "type": "string"
              },
              "key": {
                "description": "detail key of trusted certificate",
                "example": "CERTIFICATE_VALID",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "domain": {
            "description": "Domain of the resource",
            "example": "hpe.com",
            "nullable": true,
            "type": "string"
          },
          "enddate": {
            "description": "End date of the trusted certificate",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "time in millisecond",
                "example": 1611599192000,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "timezone",
                "example": "Local",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "fingerprint": {
            "description": "Fingerprint of the resource",
            "example": "2e92f97ad86fdcfff295841fefe20a1d71944923",
            "nullable": true,
            "type": "string"
          },
          "hash": {
            "description": "Hash of the resource",
            "example": "47efc91a.0",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique Identifier of the resource",
            "example": "99691e493067b2b2acf1774fc0ccc011",
            "nullable": true,
            "type": "string"
          },
          "issuer": {
            "description": "Issuer of the resource",
            "example": "CN=c3-hp-eskm-01",
            "nullable": true,
            "type": "string"
          },
          "isvalid": {
            "description": "validity of the resource",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "keyUsage": {
            "description": "key usage of the resource",
            "nullable": true,
            "type": "string"
          },
          "pem": {
            "description": "trusted certificate pem",
            "example": "-----BEGIN CERTIFICATE REQUEST-----abc----END CERTIFICATE REQUEST-----",
            "nullable": true,
            "type": "string"
          },
          "serial": {
            "description": "Serial of the resource",
            "example": "0",
            "nullable": true,
            "type": "string"
          },
          "signaturetype": {
            "description": "Signature type of the resource",
            "example": "self-signed",
            "nullable": true,
            "type": "string"
          },
          "startdate": {
            "description": "Start date of the trusted certificate",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "time in millisecond",
                "example": 1591789652000,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "timezone",
                "example": "Local",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "subject": {
            "description": "Subject of the resource",
            "example": "CN=c3-hp-eskm-01",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemID of the array",
            "example": "7CE809P009",
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "example": "other",
            "nullable": true,
            "type": "string"
          },
          "uri": {
            "description": "URI of the resource",
            "example": "/api/v3/trustcerts/99691e493067b2b2acf1774fc0ccc011",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "trustedCertificatesList": {
        "properties": {
          "commonname": {
            "description": "Displayname of the resource",
            "example": "c3-hp-eskm-01",
            "nullable": true,
            "type": "string"
          },
          "detail": {
            "description": "Detail of the trusted certificate",
            "nullable": true,
            "properties": {
              "default": {
                "description": "default value of trusted certificate",
                "example": "Valid Certificate",
                "nullable": true,
                "type": "string"
              },
              "key": {
                "description": "detail key of trusted certificate",
                "example": "CERTIFICATE_VALID",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "domain": {
            "description": "Domain of the resource",
            "example": "hpe.com",
            "nullable": true,
            "type": "string"
          },
          "enddate": {
            "description": "End date of the trusted certificate",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "time in millisecond",
                "example": 1611599192000,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "timezone",
                "example": "Local",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "fingerprint": {
            "description": "Fingerprint of the resource",
            "example": "2e92f97ad86fdcfff295841fefe20a1d71944923",
            "nullable": true,
            "type": "string"
          },
          "hash": {
            "description": "Hash of the resource",
            "example": "47efc91a.0",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique Identifier of the resource",
            "example": "99691e493067b2b2acf1774fc0ccc011",
            "nullable": true,
            "type": "string"
          },
          "issuer": {
            "description": "Issuer of the resource",
            "example": "CN=c3-hp-eskm-01",
            "nullable": true,
            "type": "string"
          },
          "isvalid": {
            "description": "validity of the resource",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "keyUsage": {
            "description": "key usage of the resource",
            "nullable": true,
            "type": "string"
          },
          "pem": {
            "description": "trusted certificate pem",
            "example": "-----BEGIN CERTIFICATE REQUEST-----abc----END CERTIFICATE REQUEST-----",
            "nullable": true,
            "type": "string"
          },
          "serial": {
            "description": "Serial of the resource",
            "example": "0",
            "nullable": true,
            "type": "string"
          },
          "signaturetype": {
            "description": "Signature type of the resource",
            "example": "self-signed",
            "nullable": true,
            "type": "string"
          },
          "startdate": {
            "description": "Start date of the trusted certificate",
            "nullable": true,
            "properties": {
              "ms": {
                "description": "time in millisecond",
                "example": 1591789652000,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "tz": {
                "description": "timezone",
                "example": "Local",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "subject": {
            "description": "Subject of the resource",
            "example": "CN=c3-hp-eskm-01",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemID of the array",
            "example": "7CE809P009",
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "example": "other",
            "nullable": true,
            "type": "string"
          },
          "uri": {
            "description": "URI of the resource",
            "example": "/api/v3/trustcerts/99691e493067b2b2acf1774fc0ccc011",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "trustedCertificatesSummaryList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/trustedCertificatesList"
            },
            "type": "array"
          },
          "pageLimit": {
            "description": "Page Limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "Page Offset",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed certificates object",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/trustcerts",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of trusted certificates",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "txDisablePin": {
        "description": "TX disable pin position. If position is HI, TX laser is disabled",
        "nullable": true,
        "properties": {
          "default": {
            "nullable": true,
            "type": "string"
          },
          "key": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "txFaultPin": {
        "description": "TX fault pin position. If position is HI, TX fault",
        "nullable": true,
        "properties": {
          "default": {
            "nullable": true,
            "type": "string"
          },
          "key": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "unExportAppSetPost": {
        "nullable": true,
        "properties": {
          "hostGroupIds": {
            "description": "HostGroups",
            "example": [
              "host Group1",
              "Host Group2"
            ],
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "hostGroupIds"
        ],
        "type": "object"
      },
      "unExportInput": {
        "description": "Nimble volume  UnExport input.",
        "properties": {
          "hostGroups": {
            "description": "list of hostGroups",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "unExportVlun": {
        "nullable": true,
        "properties": {
          "hostGroupIds": {
            "description": "HostGroups",
            "example": [
              "host Group1",
              "Host Group2"
            ],
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "hostGroupIds"
        ],
        "type": "object"
      },
      "uncappedObjData": {
        "description": "QoS policy uncap details",
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/objData"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "total": {
            "description": "total number of uncapped data",
            "example": 1,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "uptime": {
        "description": "The time that the system has been up since",
        "nullable": true,
        "properties": {
          "ms": {
            "description": "Epoch time in milliseconds",
            "example": 123423423,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "tz": {
            "description": "Time zone name",
            "example": "IST",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "userAllocationSettings": {
        "nullable": true,
        "properties": {
          "HA": {
            "nullable": true,
            "properties": {
              "default": {
                "example": "Magazine",
                "nullable": true,
                "type": "string"
              },
              "key": {
                "example": "hajbod-10",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "RAIDType": {
            "description": "",
            "nullable": true,
            "type": "string"
          },
          "deviceSpeed": {
            "$ref": "#/components/schemas/deviceSpeed"
          },
          "deviceType": {
            "nullable": true,
            "type": "string"
          },
          "diskFilter": {
            "nullable": true,
            "type": "string"
          },
          "requestedHA": {
            "nullable": true,
            "properties": {
              "default": {
                "example": "Magazine",
                "nullable": true,
                "type": "string"
              },
              "key": {
                "example": "hajbod-10",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "setSize": {
            "nullable": true,
            "type": "string"
          },
          "stepSize": {
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "userAllocationSettingsSingle": {
        "nullable": true,
        "properties": {
          "HA": {
            "nullable": true,
            "properties": {
              "default": {
                "example": "Magazine",
                "nullable": true,
                "type": "string"
              },
              "key": {
                "example": "hajbod-10",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "RAIDType": {
            "description": "",
            "nullable": true,
            "type": "string"
          },
          "deviceSpeed": {
            "$ref": "#/components/schemas/deviceSpeedSingle"
          },
          "deviceType": {
            "nullable": true,
            "type": "string"
          },
          "diskFilter": {
            "nullable": true,
            "type": "string"
          },
          "requestedHA": {
            "nullable": true,
            "properties": {
              "default": {
                "example": "Magazine",
                "nullable": true,
                "type": "string"
              },
              "key": {
                "example": "hajbod-10",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "setSize": {
            "nullable": true,
            "type": "string"
          },
          "stepSize": {
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "utilizationSummary": {
        "nullable": true,
        "properties": {
          "capacityUsageData": {
            "nullable": true,
            "properties": {
              "freeSizeMiB": {
                "description": "Free size in MiB",
                "example": 7240704,
                "format": "float64",
                "nullable": true,
                "type": "number"
              },
              "usedSizeMiB": {
                "description": "Used size in MiB",
                "example": 3072,
                "format": "float64",
                "nullable": true,
                "type": "number"
              }
            },
            "type": "object"
          },
          "provisionedCapacity": {
            "description": "Provisioned capacity",
            "example": 16384,
            "format": "float64",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "vCenterSettingsInput": {
        "description": "Request body to add vCenter Settings",
        "nullable": false,
        "properties": {
          "certChainPem": {
            "description": "Certificate chain of the VCenter server as PEM data",
            "example": "-----BEGIN CERTIFICATE-----\nMIID2jCCAsKgAwIBAgIJAOiAEUfqLBfBMA0GCSqGSIb3DQEBCwUAMIGQMQswCQYD\n-----END CERTIFICATE-----\n",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Description of the vCenter setting",
            "example": "vCenter - dataCenter1",
            "nullable": true,
            "type": "string"
          },
          "inetaddress": {
            "description": "Host name or IP address of vCenter server",
            "example": "15.71.130.25",
            "nullable": false,
            "type": "string"
          },
          "name": {
            "description": "Name of the vCenter setting",
            "example": "dataCenter1",
            "nullable": false,
            "type": "string"
          },
          "password": {
            "description": "Password to login to the vCenter server",
            "example": "pass",
            "nullable": false,
            "type": "string"
          },
          "port": {
            "description": "Port number of the vCenter server.",
            "example": 443,
            "format": "int64",
            "nullable": false,
            "type": "integer"
          },
          "username": {
            "description": "Username to login to the vCenter server",
            "example": "user1",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "name",
          "inetaddress",
          "port",
          "username",
          "password"
        ],
        "type": "object"
      },
      "validity": {
        "description": "The validity of the certificates",
        "nullable": true,
        "properties": {
          "ms": {
            "description": "Epoch time in milliseconds",
            "example": 1591601529000,
            "format": "Uint64",
            "nullable": true,
            "type": "integer"
          },
          "tz": {
            "description": "Time zone name",
            "example": "Local",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "vasa": {
        "description": "Vasa service details for a device",
        "nullable": true,
        "properties": {
          "certMgmt": {
            "$ref": "#/components/schemas/certMgmt"
          },
          "certSubject": {
            "description": "Certificate subject of the VASA Provider",
            "example": "Unknown",
            "nullable": true,
            "type": "string"
          },
          "certThumbprint": {
            "description": "Certificate thumbprint of the VASA Provider",
            "example": "Unknown",
            "nullable": true,
            "type": "string"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1xz",
            "type": "string"
          },
          "enabled": {
            "description": "Indicates if the service status is enabled or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627538867363,
            "format": "int64",
            "type": "integer"
          },
          "httpsEnabled": {
            "description": "Indicates if the vasa https state is enabled or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "httpsPort": {
            "description": "Vasa https port number",
            "example": 9997,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the resource",
            "example": "8be9321600cbf18e9c8c96bb3217f610",
            "nullable": true,
            "type": "string"
          },
          "memUsageMiB": {
            "description": "Memory usage of the VASA provider",
            "example": 134,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "moreUris": {
            "description": "List of VASA Service URLs ",
            "items": {
              "$ref": "#/components/schemas/vasaUriInfo"
            },
            "nullable": true,
            "type": "array"
          },
          "serverName": {
            "description": "Name of the vasa server",
            "example": "xppa6614.in.rdlabs.hpecorp.net",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SystemId of the storage system",
            "example": "4UW0001540",
            "nullable": true,
            "type": "string"
          },
          "systemWWN": {
            "description": "WWN of the array",
            "example": "2FF70002AC018D94",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "example": "vasa-settings",
            "type": "string"
          },
          "version": {
            "description": "Version of the VASA provider",
            "example": "4.0.9.1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "vasaConfig": {
        "nullable": false,
        "properties": {
          "action": {
            "description": "Specify the action on vasa service.Either START or STOP",
            "example": "START",
            "nullable": false,
            "type": "string"
          }
        },
        "type": "object"
      },
      "vasaDetails": {
        "nullable": true,
        "properties": {
          "associatedLinks": {
            "$ref": "#/components/schemas/nwAssociatedLinks"
          },
          "systemId": {
            "description": "SystemId of the storage system",
            "example": "4UW0001540",
            "nullable": true,
            "type": "string"
          },
          "vasa": {
            "$ref": "#/components/schemas/vasa"
          }
        },
        "type": "object"
      },
      "vasaUriInfo": {
        "description": "List of VASA Service URLs",
        "nullable": true,
        "properties": {
          "isValid": {
            "description": "Specifies whether VASA Service URL is valid or not",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "uri": {
            "description": "VASA Service URL",
            "example": "https://xppa6614.in.rdlabs.hpecorp.net:9997/vasa",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "vcenterSettingDetail": {
        "description": "Vcenter settings for the system",
        "nullable": true,
        "properties": {
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1ca",
            "type": "string"
          },
          "description": {
            "description": "Vcenter description",
            "example": "sample vc description",
            "nullable": true,
            "type": "string"
          },
          "friendlyCert": {
            "$ref": "#/components/schemas/friendlyCert"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627540916540,
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier of the vcenter settings.",
            "example": "c0e4e72b-c9d3-54a4-312f-4ec0f8da498a",
            "nullable": true,
            "type": "string"
          },
          "inetaddress": {
            "description": "Address of the vcenter.",
            "example": "18.213.214.145",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of vcenter.",
            "example": "sample_vc_name",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "port number of vcenter.",
            "example": 162,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for vcenter setting details per system ",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/vm-manager-settings/centerid123",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed vcenter setting object",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/vm-manager-settings/centerid123",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/vcenterStatus"
          },
          "systemId": {
            "description": "SystemID of the array",
            "example": "7CE809P009",
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "example": "vm-manager-settings",
            "type": "string"
          },
          "username": {
            "description": "User of the vcenter configured.",
            "example": "SysAdmin@machine.local",
            "nullable": true,
            "type": "string"
          },
          "vmManagerType": {
            "description": "Type of the vmmanager settings.",
            "example": "hyperV",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "vcenterSettingDetailList": {
        "description": "Vcenter settings for the system",
        "nullable": true,
        "properties": {
          "consoleUri": {
            "description": "consoleUri for detailed storage object ",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings",
            "nullable": true,
            "type": "string"
          },
          "customerId": {
            "description": "The customer application identifier",
            "example": "fc5f41652a53497e88cdcebc715cc1ce",
            "type": "string"
          },
          "description": {
            "description": "Vcenter description",
            "example": "sample vcenter description",
            "nullable": true,
            "type": "string"
          },
          "friendlyCert": {
            "$ref": "#/components/schemas/friendlyCert"
          },
          "generation": {
            "description": "A monotonically increasing value. This value updates when the resource is updated and can be used as a short way to determine if a resource has changed or which of two different copies of a resource is more up to date.",
            "example": 1627540916540,
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier of the vcenter settings. `Filter`",
            "example": "c0e4e72b-c9d3-54a4-312f-4ec0f8da498a",
            "nullable": true,
            "type": "string"
          },
          "inetaddress": {
            "description": "Address of the vcenter.",
            "example": "18.218.214.244",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of vcenter. `Filter, Sort`",
            "example": "sample_vc_name",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "port number of vcenter.",
            "example": 443,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "resourceUri": {
            "description": "resourceUri for detailed vcenter setting object",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/vm-manager-settings/centerid123",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/vcenterStatus"
          },
          "systemId": {
            "description": "SystemID of the array",
            "example": "7CE809P009",
            "type": "string"
          },
          "type": {
            "description": "The type of resource.",
            "example": "vm-manager-settings",
            "type": "string"
          },
          "username": {
            "description": "User of the vcenter configured",
            "example": "SysAdmin@machine.local",
            "nullable": true,
            "type": "string"
          },
          "vmManagerType": {
            "description": "Type of the vmmanager settings.",
            "example": "hyperV",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "vcenterSettingsSumarryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/vcenterSettingDetailList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "Page Limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "Page Offset",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for vcenter settings per system",
            "example": "/api/v1/storage-systems/device-type1/7CE809P009/vm-manager-settings",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of vcenters.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "vcenterStatus": {
        "description": "Status of the vcenter setting",
        "nullable": true,
        "properties": {
          "default": {
            "description": "Default status value",
            "example": "Ok",
            "nullable": true,
            "type": "string"
          },
          "key": {
            "description": "Status key of vcenter",
            "example": "VMPERF_FAILED",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "version": {
        "nullable": true,
        "properties": {
          "base": {
            "description": "Base version",
            "example": "4.2.0",
            "nullable": true,
            "type": "string"
          },
          "display": {
            "description": "Display name",
            "example": "4.2.0",
            "nullable": true,
            "type": "string"
          },
          "full": {
            "description": "Full version",
            "example": "4.2.0.48",
            "nullable": true,
            "type": "string"
          },
          "fullWithoutPatches": {
            "description": "Base version without patches",
            "example": "4.2.0.48",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "vlan": {
        "nullable": true,
        "properties": {
          "gatewayAddress": {
            "description": "VLAN Gateway address for the iSCSI port",
            "nullable": true,
            "type": "string"
          },
          "iSNSPrimaryAddress": {
            "description": "The iSNS server IP address",
            "nullable": true,
            "type": "string"
          },
          "iSNSTcpPort": {
            "description": "TCP port number for the iSNS server",
            "nullable": true,
            "type": "string"
          },
          "ipAddress": {
            "description": "VLAN IP address for the iSCSI port",
            "nullable": true,
            "type": "string"
          },
          "mtu": {
            "description": "Maximum transmission unit (MTU) size",
            "nullable": true,
            "type": "string"
          },
          "sendTargetGroupTag": {
            "description": "The SendTargets Group Tag (STGT) for the iSCSI port",
            "nullable": true,
            "type": "string"
          },
          "subnetMask": {
            "description": "VLAN Subnet mask for the iSCSI port",
            "nullable": true,
            "type": "string"
          },
          "targetPortalGroupTag": {
            "description": "The Target portal Group Tag (TPGT) for the iSCSI port",
            "nullable": true,
            "type": "string"
          },
          "vlanId": {
            "description": "VLAN id for the iSCSI port",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "vlunsCreateInput": {
        "properties": {
          "autoLun": {
            "description": "Auto Lun",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "hostGroupIds": {
            "description": "HostGroups",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "maxAutoLun": {
            "description": "Number of volumes.",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "noVcn": {
            "description": "No VCN",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "override": {
            "description": "Override",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "position": {
            "description": "Position",
            "example": "position_1",
            "nullable": true,
            "type": "string"
          },
          "proximity": {
            "description": "Host proximity setting for Active Peer Persistence configuration. Supported values are - PRIMARY, SECONDARY and ALL",
            "enum": [
              "PRIMARY",
              "SECONDARY",
              "ALL"
            ],
            "example": "PRIMARY",
            "nullable": false,
            "type": "string"
          }
        },
        "type": "object"
      },
      "vlunsList": {
        "properties": {
          "active": {
            "description": "Indicates if this is an active VLUN or a template",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "customerId": {
            "description": "customerId",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "deviceWWNs": {
            "description": "Device WWNs",
            "example": "wwn",
            "nullable": true,
            "type": "string"
          },
          "diskPartition": {
            "description": "Disk partition of host",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "SED state",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "SED state",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "failedPathInterval": {
            "description": "Monitoring interval in seconds after which the host checks for failed paths",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "failedPathPolicy": {
            "description": "Failed path monitoring method",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "generation": {
            "description": "generation `Filter, Sort`",
            "example": 0,
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "uid of the vlun `Filter`",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "initiators": {
            "description": "Initiator details",
            "nullable": true,
            "properties": {
              "deviceDiscoveredName": {
                "description": "Host/HostGroup name on device.",
                "example": "TEST11",
                "nullable": true,
                "type": "string"
              },
              "id": {
                "description": "Resource id",
                "example": "6848ef683c27403e96caa51816ddc72c",
                "nullable": true,
                "type": "string"
              },
              "resourceUri": {
                "description": "Resource URI",
                "example": "/v1/host-initiators/6848ef683c27403e96caa51816ddc72c",
                "nullable": true,
                "type": "string"
              },
              "type": {
                "description": "Resource Name",
                "example": "host-initiators",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "lun": {
            "description": "Exported LUN ID `Filter, Sort`",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "mountPoint": {
            "description": "Mount points of devices",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "mountPointFsau": {
            "description": "File system allocation unit in MiB",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "multiPathType": {
            "description": "Multi-path method in use",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "portPos": {
            "description": "System port VLUN is exported through. It includes node number, slot number, and port number",
            "nullable": true,
            "properties": {
              "node": {
                "description": "`Filter, Sort`",
                "example": 1,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "port": {
                "description": "`Filter, Sort`",
                "example": 1,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "slot": {
                "description": "`Filter, Sort`",
                "example": 1,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "rawVolume": {
            "description": "Volume that has not been formatted. Yes if it supports",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "remoteName": {
            "description": "Host WWN, iSCSI name, or SAS address; depending on port type",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed vlun object",
            "example": "- TO BE IMPLEMENTED",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State of the resource",
            "nullable": true,
            "properties": {
              "detailed": {
                "description": "Array of the detailed states of the resource",
                "items": {
                  "nullable": true,
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              },
              "overall": {
                "description": "Overall state of the resource",
                "enum": [
                  "STATE_UNKNOWN",
                  "STATE_NORMAL",
                  "STATE_DEGRADED",
                  "STATE_FAILED",
                  "STATE_NOT_APPLICABLE",
                  "STATE_NEW",
                  null
                ],
                "example": "STATE_NORMAL",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "SED state",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "System Uid `Filter, Sort`",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "tpgId": {
            "description": "SED state",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "type",
            "example": "string",
            "nullable": true,
            "type": "string"
          },
          "usedSpace": {
            "description": "Host devices used space in MiB",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vlunType": {
            "description": "VLUN type",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "volumeGroup": {
            "description": "Volume group info",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "volumeManager": {
            "description": "Volume Manager tool used",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "volumeName": {
            "description": "Name of exported virtual volume or volume set name `Filter, Sort`",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "volumeWWN": {
            "description": "WWN of exported volume.If a volume set is exported, then this value is null. `Filter, Sort`",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "vvReservedUserSpace": {
            "description": "Volume user reserved space in MiB",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vvSize": {
            "description": "Size of volume in MiB",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "vlunsListSingle": {
        "properties": {
          "active": {
            "description": "Indicates if this is an active VLUN or a template",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "consoleUri": {
            "description": "consoleUri for detailed storage object",
            "example": "data-ops-manager/storage-systems/device-type1/SGH014XGSP/volumes/{volumeUid}/vluns/{uid}",
            "nullable": true,
            "type": "string"
          },
          "deviceWWNs": {
            "description": "Device WWNs",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "diskPartition": {
            "description": "Disk partition of host",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "displayname": {
            "description": "SED state",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "SED state",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "failedPathInterval": {
            "description": "Monitoring interval in seconds after which the host checks for failed paths",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "failedPathPolicy": {
            "description": "Failed path monitoring method",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "uid of the vlun",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "initiators": {
            "description": "Initiator details",
            "nullable": true,
            "properties": {
              "deviceDiscoveredName": {
                "description": "Host/HostGroup name on device.",
                "example": "TEST11",
                "nullable": true,
                "type": "string"
              },
              "id": {
                "description": "Resource id",
                "example": "6848ef683c27403e96caa51816ddc72c",
                "nullable": true,
                "type": "string"
              },
              "resourceUri": {
                "description": "Resource URI",
                "example": "/v1/host-initiators/6848ef683c27403e96caa51816ddc72c",
                "nullable": true,
                "type": "string"
              },
              "type": {
                "description": "Resource Name",
                "example": "host-initiators",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "lun": {
            "description": "Exported LUN ID",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "mountPoint": {
            "description": "Mount points of devices",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "mountPointFsau": {
            "description": "File system allocation unit in MiB",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "multiPathType": {
            "description": "Multi-path method in use",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "portPos": {
            "description": "System port VLUN is exported through. It includes node number, slot number, and port number",
            "nullable": true,
            "properties": {
              "node": {
                "example": 1,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "port": {
                "example": 1,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              },
              "slot": {
                "example": 1,
                "format": "int64",
                "nullable": true,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "rawVolume": {
            "description": "Volume that has not been formatted. Yes if it supports",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "remoteName": {
            "description": "Host WWN, iSCSI name, or SAS address; depending on port type",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "requestUri": {
            "description": "requestUri for detailed vlun object",
            "example": "- TO BE IMPLEMENTED",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed vlun object",
            "example": "- TO BE IMPLEMENTED",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State of the resource",
            "nullable": true,
            "properties": {
              "detailed": {
                "description": "Array of the detailed states of the resource",
                "items": {
                  "nullable": true,
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              },
              "overall": {
                "description": "Overall state of the resource",
                "enum": [
                  "STATE_UNKNOWN",
                  "STATE_NORMAL",
                  "STATE_DEGRADED",
                  "STATE_FAILED",
                  "STATE_NOT_APPLICABLE",
                  "STATE_NEW",
                  null
                ],
                "example": "STATE_NORMAL",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "SED state",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "systemId": {
            "description": "SED state",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "tpgId": {
            "description": "SED state",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "VLUN type",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "usedSpace": {
            "description": "Host devices used space in MiB",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "volumeGroup": {
            "description": "Volume group info",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "volumeManager": {
            "description": "Volume Manager tool used",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "volumeName": {
            "description": "Name of exported virtual volume or volume set name",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "volumeWWN": {
            "description": "WWN of exported volume.If a volume set is exported, then this value is null.",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "vvReservedUserSpace": {
            "description": "Volume user reserved space in MiB",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vvSize": {
            "description": "Size of volume in MiB",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "vlunsSummaryList": {
        "nullable": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/vlunsList"
            },
            "nullable": true,
            "type": "array"
          },
          "pageLimit": {
            "description": "page limit",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "pageOffset": {
            "description": "page offset",
            "example": 1,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed vlun object",
            "example": "- TO BE IMPLEMENTED",
            "nullable": true,
            "type": "string"
          },
          "total": {
            "description": "Number of Vluns.",
            "example": 2,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "volPerformance": {
        "nullable": true,
        "properties": {
          "iops": {
            "$ref": "#/components/schemas/NimbleKpiMetrics"
          },
          "latency": {
            "$ref": "#/components/schemas/NimbleKpiMetrics"
          },
          "requestURI": {
            "description": "requestUri for detailed volume object",
            "example": "/api/v1/storage-systems/device-type2/00473102de2f5f39d8000000000000000000000001/volumes/37473102de2f5f39d8000000000000000000000027/performance-statistics",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "deprecated": true,
            "description": "resourceUri for detailed volume object",
            "example": "/api/v1/storage-systems/device-type2/00473102de2f5f39d8000000000000000000000001/volumes/37473102de2f5f39d8000000000000000000000027/performance-statistics",
            "nullable": true,
            "type": "string"
          },
          "throughput": {
            "$ref": "#/components/schemas/NimbleKpiMetrics"
          }
        },
        "type": "object"
      },
      "volumeCapacityHistory": {
        "description": "volume capacity trends for given granularity",
        "nullable": true,
        "properties": {
          "capacityData": {
            "nullable": true,
            "properties": {
              "customerId": {
                "description": "customerId",
                "example": "string",
                "nullable": true,
                "type": "string"
              },
              "items": {
                "items": {
                  "$ref": "#/components/schemas/volumeCapacitySeriesData"
                },
                "nullable": true,
                "type": "array"
              },
              "total": {
                "description": "count of series data",
                "example": 1,
                "nullable": true,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "endTime": {
            "description": "end time of the capacity history",
            "example": 1625209133,
            "nullable": true,
            "type": "integer"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/v1/storage-systems/device-type1/SGH014XGSP/volumes/a7c4e6593f51d0b98f0e40d7e6df04fd/capacity-history",
            "nullable": true,
            "type": "string"
          },
          "startTime": {
            "description": "start time of the capacity history",
            "example": 1625122733,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "volumeCapacitySeriesData": {
        "nullable": true,
        "properties": {
          "actualUsageMiB": {
            "description": "Actual usage value in MiB",
            "example": 25,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "hostWrittenCapacityMiB": {
            "description": "Host written capacity in MiB",
            "example": 20,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "timestampMs": {
            "description": "epoch timestamp",
            "example": 1605063600,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "volumePerformance": {
        "nullable": true,
        "properties": {
          "iops": {
            "$ref": "#/components/schemas/KpiMetrics"
          },
          "latencyMs": {
            "$ref": "#/components/schemas/KpiMetrics"
          },
          "requestUri": {
            "description": "requestUri for detailed volume object",
            "example": "/v1/storage-systems/device-type1/SGH014XGSP/volumes/a7c4e6593f51d0b98f0e40d7e6df04fd/performance-statistics",
            "nullable": true,
            "type": "string"
          },
          "resourceUri": {
            "description": "resourceUri for detailed volume object",
            "example": "/v1/storage-systems/device-type1/SGH014XGSP/volumes/a7c4e6593f51d0b98f0e40d7e6df04fd/performance-statistics",
            "nullable": true,
            "type": "string"
          },
          "throughputKbps": {
            "$ref": "#/components/schemas/KpiMetrics"
          }
        },
        "type": "object"
      },
      "volumePerformanceHistory": {
        "description": "volume performance trends for given granularity and time range",
        "nullable": true,
        "properties": {
          "customerId": {
            "description": "customerId",
            "example": "fc5f41652a53497e88cdcebc715cc1cf",
            "nullable": true,
            "type": "string"
          },
          "endTime": {
            "description": "end time of history data",
            "example": 162564271,
            "nullable": true,
            "type": "integer"
          },
          "historyData": {
            "description": "performance history data",
            "nullable": true,
            "properties": {
              "iopsMetricsData": {
                "$ref": "#/components/schemas/historicalMetricData"
              },
              "latencyMetricsDataMs": {
                "$ref": "#/components/schemas/historicalMetricData"
              },
              "throughputMetricsDataKbps": {
                "$ref": "#/components/schemas/historicalMetricData"
              }
            },
            "type": "object"
          },
          "requestUri": {
            "description": "requestUri for detailed storage object",
            "example": "/v1/storage-systems/device-type1/SGH014XGSP/volumes/a7c4e6593f51d0b98f0e40d7e6df04fd/performance-history",
            "nullable": true,
            "type": "string"
          },
          "startTime": {
            "description": "start time of history data",
            "example": 1625556314,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "volumePost": {
        "nullable": true,
        "properties": {
          "comment": {
            "description": "Comment if any",
            "example": "",
            "nullable": true,
            "type": "string"
          },
          "customName": {
            "description": "Name for snapshot",
            "example": "snap1",
            "nullable": true,
            "type": "string"
          },
          "expireSecs": {
            "description": "Expiration time in seconds",
            "example": 86400,
            "nullable": true,
            "type": "integer"
          },
          "namePattern": {
            "$ref": "#/components/schemas/namePattern"
          },
          "readOnly": {
            "description": "Read only or Read/Write",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "retainSecs": {
            "description": "Reatain time in seconds",
            "example": 86400,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "namePattern"
        ],
        "type": "object"
      },
      "volumePut": {
        "nullable": true,
        "properties": {
          "conversionType": {
            "description": "conversion type (this argument is depricated, use dataReduction instead)",
            "enum": [
              "CONVERSIONTYPE_THIN",
              "CONVERSIONTYPE_DDS",
              "CONVERSIONTYPE_V1",
              "CONVERSIONTYPE_V2"
            ],
            "example": "CONVERSIONTYPE_THIN",
            "nullable": true,
            "type": "string"
          },
          "dataReduction": {
            "description": "Data Reduction on Volume",
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "volume name",
            "example": "volume_Name",
            "nullable": true,
            "type": "string"
          },
          "sizeMib": {
            "description": "Size in MiB",
            "example": 1,
            "format": "float64",
            "nullable": true,
            "type": "number"
          },
          "snapshotAllocWarning": {
            "description": "snapshot alloc space allocation warning",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userAllocWarning": {
            "description": "User alloc space limit warning",
            "example": 1,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "userCpgName": {
            "description": "user cpg name",
            "example": "cpg_1",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "volumeSetApplicationType": {
        "description": "application type",
        "enum": [
          "ORACLE_DATA",
          "ORACLE_LOG",
          "MICROSOFT_EXCHANGE",
          "MICROSOFT_EXCHANGE_LOG",
          "MICROSOFT_SQL_SERVER",
          "MICROSOFT_SQL_SERVER_LOG",
          "VIRTUAL_SERVER_VMWARE_ESXI_STORAGE",
          "VIRTUAL_SERVER_HYPER_V_STORAGE",
          "VIRTUAL_DESKTOP_VMWARE_ESXI_STORAGE",
          "VIRTUAL_DESKTOP_HYPER_V_STORAGE",
          "SHAREPOINT",
          "FILE_SERVER",
          "VEEAM_BACKUP_REPOSITORY",
          "OTHER",
          "CUSTOM"
        ],
        "example": "ORACLE_LOG",
        "nullable": true,
        "type": "string"
      },
      "volumeSetPut": {
        "nullable": true,
        "properties": {
          "addMembers": {
            "description": "Members to add to application set",
            "example": [
              "vol1",
              "vol2"
            ],
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "appSetBusinessUnit": {
            "description": "App set business unit",
            "example": "HPE",
            "nullable": true,
            "type": "string"
          },
          "appSetComments": {
            "description": "App set comments",
            "example": "Edit appset",
            "nullable": true,
            "type": "string"
          },
          "appSetName": {
            "description": "App set name",
            "example": "Appset_134",
            "nullable": true,
            "type": "string"
          },
          "appSetType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/vsAppSetType"
              },
              {
                "$ref": "#/components/schemas/volumeSetApplicationType"
              }
            ]
          },
          "customAppType": {
            "description": "App set name for Custom workloads when appSetType=CUSTOM",
            "example": "CustomWorkload_123",
            "nullable": true,
            "type": "string"
          },
          "removeMembers": {
            "description": "Members to remove from application set",
            "example": [
              "vol1",
              "vol2"
            ],
            "items": {
              "nullable": true,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "vsAppSetType": {
        "description": "Application Set Type. Possible Values: - BACKUP - MICROSOFT_SQL_SERVER - SQL_SERVER_LOGS - MICROSOFT_EXCHANGE - MICROSOFT_EXCHANGE_LOG - VIRTUAL_SERVER_VMWARE_ESXI_STORAGE - VIRTUAL_SERVER_VMWARE_ESXI - VIRTUAL_SERVER_HYPER_V_Storage - VIRTUAL_DESKTOP - SHAREPOINT - FILE_SERVER - ORACLE - IBM_DB2 - SAP_HANA - INTERSYSTEMS_CACHE - VEEAM_BACKUP_REPOSITORY - INTERSYSTEMS_IRIS - OTHER",
        "type": "string"
      }
    },
    "securitySchemes": {
      "JWTAuth": {
        "bearerFormat": "JWT",
        "description": "The Data Service Cloud Console API uses a JWT bearer token for authentication.\nAn authentication token can be obtained from the HPE GreenLake console.\n",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "security": [
    {
      "JWTAuth": []
    }
  ]
}
